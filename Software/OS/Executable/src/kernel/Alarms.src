	; Module start
	.compiler_version	"TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455235"
	.compiler_invocation	"carm --dep-file=../Executable/src/kernel/.Alarms.o.d -CARMv7M -D__PROC_CORTEX_M3__ --iso=11 -I../../TC399x/HSM/ -I../../TC399x/HSM/Main -I../../TC399x/HSM/Ssw/inc -I../../TC399x/HSM/Reg -I../../TC399x/HSM/Mcal/Bridge/inc -I../../TC399x/HSM/Mcal/TRNG/inc -I../../TC399x/HSM/Mcal/NVIC/inc -I../../TC399x/HSM/Mcal/Timer/inc -I../../TC399x/HSM/Application/inc -I../../TC399x/HSM/Mcal/AES/inc -I../../TC399x/HSM/Mcal/CMAC/inc -I../../TC399x/HSM/Mcal/Hash/inc -I../../TC399x/HSM/Mcal/HMAC/inc -I../../AutoSar/BSW/static/MCAL/Infrastructure/Platform -I../include/External -I../include/Internal -I../include/memmap -I../generate -I../Port/Cortex-M4/inc -g2 --global-type-checking -t4 -O0 --make-target=../Executable/src/kernel/Alarms.o --language=-gcc,-volatile,+strings,-kanji -O1 --source --error-limit=42 -o ..\\Executable\\src\\kernel\\Alarms.src ../src/kernel/Alarms.c"
	.compiler_name		"carm"
	;.ident 'TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455235'
	.source '../src/kernel/Alarms.c'

	.section	.text ,cluster('$group_OS_GetAlarmBase')
	.global	OS_GetAlarmBase

; ../src/kernel/Alarms.c	     1  /**
; ../src/kernel/Alarms.c	     2   * @file Alarms.c
; ../src/kernel/Alarms.c	     3   * @author Qamar Elgohary
; ../src/kernel/Alarms.c	     4   * @version 1.0.0
; ../src/kernel/Alarms.c	     5   * @date 03-03-2024
; ../src/kernel/Alarms.c	     6   * @platform
; ../src/kernel/Alarms.c	     7   * @variant
; ../src/kernel/Alarms.c	     8   * @vendor Siemens
; ../src/kernel/Alarms.c	     9   * @specification
; ../src/kernel/Alarms.c	    10   * @brief Implementation of alarms.
; ../src/kernel/Alarms.c	    11   *
; ../src/kernel/Alarms.c	    12   */
; ../src/kernel/Alarms.c	    13  
; ../src/kernel/Alarms.c	    14  /**********************************************************************************/
; ../src/kernel/Alarms.c	    15  /**				    			Include Headers			         				 **/
; ../src/kernel/Alarms.c	    16  /**********************************************************************************/
; ../src/kernel/Alarms.c	    17  #include <OS_kernel.h>
; ../src/kernel/Alarms.c	    18  
; ../src/kernel/Alarms.c	    19  /***********************************************************************************/
; ../src/kernel/Alarms.c	    20  /*  			    			    Macros				         				   */
; ../src/kernel/Alarms.c	    21  /***********************************************************************************/
; ../src/kernel/Alarms.c	    22  
; ../src/kernel/Alarms.c	    23  /****************************** Moudle Version Check ******************************/
; ../src/kernel/Alarms.c	    24  
; ../src/kernel/Alarms.c	    25  /************************** Module Specific Macros ********************************/
; ../src/kernel/Alarms.c	    26  
; ../src/kernel/Alarms.c	    27  /*************************************************************************************/
; ../src/kernel/Alarms.c	    28  /*                                 TypeDefnitions                                    */
; ../src/kernel/Alarms.c	    29  /*************************************************************************************/
; ../src/kernel/Alarms.c	    30  /***************************  Configuration Types     ********************************/
; ../src/kernel/Alarms.c	    31  
; ../src/kernel/Alarms.c	    32  /************************************************************************************/
; ../src/kernel/Alarms.c	    33  /*				    	Internal Type Definitions		         			        */
; ../src/kernel/Alarms.c	    34  /************************************************************************************/
; ../src/kernel/Alarms.c	    35  /*********************** Internal Module Specific Types *****************************/
; ../src/kernel/Alarms.c	    36  
; ../src/kernel/Alarms.c	    37  /***********************************************************************************/
; ../src/kernel/Alarms.c	    38  /*                            External Global Variables                            */
; ../src/kernel/Alarms.c	    39  /***********************************************************************************/
; ../src/kernel/Alarms.c	    40  
; ../src/kernel/Alarms.c	    41  /***********************************************************************************/
; ../src/kernel/Alarms.c	    42  /*				    			External constants		         				   */
; ../src/kernel/Alarms.c	    43  /***********************************************************************************/
; ../src/kernel/Alarms.c	    44  
; ../src/kernel/Alarms.c	    45  /***********************************************************************************/
; ../src/kernel/Alarms.c	    46  /*                              Internal Global Variables                          */
; ../src/kernel/Alarms.c	    47  /***********************************************************************************/
; ../src/kernel/Alarms.c	    48  
; ../src/kernel/Alarms.c	    49  /***********************************************************************************/
; ../src/kernel/Alarms.c	    50  /*				    			Internal constants		         				   */
; ../src/kernel/Alarms.c	    51  /***********************************************************************************/
; ../src/kernel/Alarms.c	    52  
; ../src/kernel/Alarms.c	    53  /***********************************************************************************/
; ../src/kernel/Alarms.c	    54  /*                        Internal Function Declration                             */
; ../src/kernel/Alarms.c	    55  /***********************************************************************************/
; ../src/kernel/Alarms.c	    56  
; ../src/kernel/Alarms.c	    57  /***********************************************************************************/
; ../src/kernel/Alarms.c	    58  /*				    	 Internal Functions Definition		      				   */
; ../src/kernel/Alarms.c	    59  /***********************************************************************************/
; ../src/kernel/Alarms.c	    60  
; ../src/kernel/Alarms.c	    61  /***********************************************************************************/
; ../src/kernel/Alarms.c	    62  /*                        External Function Definition                             */
; ../src/kernel/Alarms.c	    63  /***********************************************************************************/
; ../src/kernel/Alarms.c	    64  
; ../src/kernel/Alarms.c	    65  /**
; ../src/kernel/Alarms.c	    66   * @brief The system service GetAlarmBase reads the alarm base characteristics.
; ../src/kernel/Alarms.c	    67   *
; ../src/kernel/Alarms.c	    68   * @service name    OS_GetAlarmBase
; ../src/kernel/Alarms.c	    69   * @syntax          FUNC(StatusType, OS_CODE) GetAlarmBase
; ../src/kernel/Alarms.c	    70   *                  (
; ../src/kernel/Alarms.c	    71   *                      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	    72   *                      CONST(AlarmBaseRefType, AUTOMATIC) Info
; ../src/kernel/Alarms.c	    73   *                  );
; ../src/kernel/Alarms.c	    74   * @service ID
; ../src/kernel/Alarms.c	    75   * @sync/async
; ../src/kernel/Alarms.c	    76   * @reentrancy
; ../src/kernel/Alarms.c	    77   * @param[in]  AlarmID        Reference to alarm .
; ../src/kernel/Alarms.c	    78   * @param[out] Info           Reference to structure with constants of the alarm base.
; ../src/kernel/Alarms.c	    79   * @return     StatusType     Indicates the error status
; ../src/kernel/Alarms.c	    80   *             Standard:
; ../src/kernel/Alarms.c	    81   *                  • E_OK      No error
; ../src/kernel/Alarms.c	    82   *             Extended:
; ../src/kernel/Alarms.c	    83   *                  • E_OS_ID   Alarm <AlarmID> is invalid
; ../src/kernel/Alarms.c	    84   *
; ../src/kernel/Alarms.c	    85   * @see       -
; ../src/kernel/Alarms.c	    86   * @note      Conformance: BCC1, BCC2, ECC1, ECC2
; ../src/kernel/Alarms.c	    87   * @warning   -
; ../src/kernel/Alarms.c	    88   */
; ../src/kernel/Alarms.c	    89  
; ../src/kernel/Alarms.c	    90  FUNC(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	    91  OS_GetAlarmBase(
; Function OS_GetAlarmBase
.L132:
	.thumb
	.align	4
OS_GetAlarmBase:	.type	func

.L59:

; ../src/kernel/Alarms.c	    92      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	    93      P2VAR(AlarmBaseType, AUTOMATIC, OS_APPL_DATA) Info)
; ../src/kernel/Alarms.c	    94  {
; ../src/kernel/Alarms.c	    95      /* Init the error to no error */
; ../src/kernel/Alarms.c	    96      VAR(StatusType, TYPEDEF)
; ../src/kernel/Alarms.c	    97      ErrorState = E_OK;
; ../src/kernel/Alarms.c	    98  #if (ALARM_COUNT > 0)    
; ../src/kernel/Alarms.c	    99      /* Create pointer to an instance of Os_Alarm struct*/
; ../src/kernel/Alarms.c	   100      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   101      Alarm = NULL_PTR;
; ../src/kernel/Alarms.c	   102  
; ../src/kernel/Alarms.c	   103  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/Alarms.c	   104  
; ../src/kernel/Alarms.c	   105      /* If the input parameter <AlarmID> is not valid */
; ../src/kernel/Alarms.c	   106      if (AlarmID >= ALARM_COUNT)
; ../src/kernel/Alarms.c	   107      {
; ../src/kernel/Alarms.c	   108          ErrorState = E_OS_ID;
; ../src/kernel/Alarms.c	   109      }
; ../src/kernel/Alarms.c	   110      else
; ../src/kernel/Alarms.c	   111  #endif /*(ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)*/
; ../src/kernel/Alarms.c	   112      {
; ../src/kernel/Alarms.c	   113          /* Access struct of <AlarmID> */
; ../src/kernel/Alarms.c	   114          Alarm = &Alarms[AlarmID];
	mov	r2,#36
.L373:
	ldr	r3,.L53
.L374:
	mla	r0,r0,r2,r3
.L190:

; ../src/kernel/Alarms.c	   115  
; ../src/kernel/Alarms.c	   116          /* Set Max allowed value of alarm */
; ../src/kernel/Alarms.c	   117          Info->maxallowedvalue = Alarm->OsAlarmCounterRef->OsCounterMaxAllowedValue;
	ldr	r2,[r0,#20]
.L375:
	ldr	r2,[r2,#0]
.L376:
	str	r2,[r1,#0]
.L377:

; ../src/kernel/Alarms.c	   118  
; ../src/kernel/Alarms.c	   119          /* Set Ticks per base of alarm */
; ../src/kernel/Alarms.c	   120          Info->ticksperbase = Alarm->OsAlarmCounterRef->OsCounterTicksPerBase;
	ldr	r2,[r0,#20]
.L378:
	ldr	r2,[r2,#8]
.L379:
	str	r2,[r1,#4]
.L380:

; ../src/kernel/Alarms.c	   121  
; ../src/kernel/Alarms.c	   122          /* Set Min cycle of alarm */
; ../src/kernel/Alarms.c	   123          Info->mincycle = Alarm->OsAlarmCounterRef->OsCounterMinCycle;
	ldr	r0,[r0,#20]
.L191:
	ldr	r0,[r0,#4]
.L381:
	str	r0,[r1,#8]
.L382:
	mov	r0,#0
.L192:

; ../src/kernel/Alarms.c	   124      }
; ../src/kernel/Alarms.c	   125  #endif /* (ALARM_COUNT > 0)*/
; ../src/kernel/Alarms.c	   126      /* Return the error state */
; ../src/kernel/Alarms.c	   127      return ErrorState;
; ../src/kernel/Alarms.c	   128  }
	bx	lr
.L183:
	.align	4
.L53:
	.dw	Alarms
.L133:
	.size	OS_GetAlarmBase,$-OS_GetAlarmBase
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_GetAlarm')
	.global	OS_GetAlarm

; ../src/kernel/Alarms.c	   129  
; ../src/kernel/Alarms.c	   130  /**
; ../src/kernel/Alarms.c	   131   * @brief The system service GetAlarm returns the relative value in ticks before the alarm <AlarmID> expires.
; ../src/kernel/Alarms.c	   132   *
; ../src/kernel/Alarms.c	   133   * @service name    OS_GetAlarm
; ../src/kernel/Alarms.c	   134   * @syntax          FUNC(StatusType, OS_CODE) OS_GetAlarm
; ../src/kernel/Alarms.c	   135   *                  (
; ../src/kernel/Alarms.c	   136   *                      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   137   *                      CONST(TickRefType, AUTOMATIC) Tick
; ../src/kernel/Alarms.c	   138   *                  );
; ../src/kernel/Alarms.c	   139   * @service ID
; ../src/kernel/Alarms.c	   140   * @sync/async
; ../src/kernel/Alarms.c	   141   * @reentrancy
; ../src/kernel/Alarms.c	   142   * @param[in]  AlarmID        Reference to alarm .
; ../src/kernel/Alarms.c	   143   * @param[out] Tick           Tick Relative value in ticks before the alarm <AlarmID> expires.
; ../src/kernel/Alarms.c	   144   * @return     StatusType     Indicates the error status
; ../src/kernel/Alarms.c	   145   *             Standard:
; ../src/kernel/Alarms.c	   146   *                  • E_OK          No error
; ../src/kernel/Alarms.c	   147   *                  • E_OS_NOFUNC   Alarm <AlarmID> is not used
; ../src/kernel/Alarms.c	   148   *             Extended:
; ../src/kernel/Alarms.c	   149   *                  • E_OS_ID   Alarm <AlarmID> is invalid
; ../src/kernel/Alarms.c	   150   *
; ../src/kernel/Alarms.c	   151   * @see       -
; ../src/kernel/Alarms.c	   152   * @note      Conformance: BCC1, BCC2, ECC1, ECC2
; ../src/kernel/Alarms.c	   153   * @warning   If <AlarmID> is not in use, <Tick> is not defined.
; ../src/kernel/Alarms.c	   154   */
; ../src/kernel/Alarms.c	   155  
; ../src/kernel/Alarms.c	   156  FUNC(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   157  OS_GetAlarm(
; Function OS_GetAlarm
.L126:
	.thumb
	.align	4
OS_GetAlarm:	.type	func

.L61:
	push	{r4}
.L193:
	mov	r3,r1
.L197:

; ../src/kernel/Alarms.c	   158      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   159      P2VAR(TickType, AUTOMATIC, OS_APPL_DATA) Tick)
; ../src/kernel/Alarms.c	   160  {
; ../src/kernel/Alarms.c	   161      /* Init the error to no error */
; ../src/kernel/Alarms.c	   162      VAR(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   163      ErrorState = E_OK;
	movs	r4,#0
.L198:

; ../src/kernel/Alarms.c	   164  
; ../src/kernel/Alarms.c	   165  #if (ALARM_COUNT > 0)
; ../src/kernel/Alarms.c	   166      /* Var for current ticks */
; ../src/kernel/Alarms.c	   167      VAR(TickType, TYPEDEF)
; ../src/kernel/Alarms.c	   168      CurrentCounterTicks = 0;
; ../src/kernel/Alarms.c	   169  
; ../src/kernel/Alarms.c	   170      /* Create pointer to an instance of Os_Alarm struct*/
; ../src/kernel/Alarms.c	   171      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   172      Alarm = NULL_PTR;
; ../src/kernel/Alarms.c	   173  
; ../src/kernel/Alarms.c	   174  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/Alarms.c	   175  
; ../src/kernel/Alarms.c	   176      if (AlarmID >= ALARM_COUNT)
; ../src/kernel/Alarms.c	   177      {
; ../src/kernel/Alarms.c	   178          ErrorState = E_OS_ID;
; ../src/kernel/Alarms.c	   179      }
; ../src/kernel/Alarms.c	   180      else
; ../src/kernel/Alarms.c	   181  
; ../src/kernel/Alarms.c	   182  #endif /*(ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)*/
; ../src/kernel/Alarms.c	   183  
; ../src/kernel/Alarms.c	   184          if (Alarms[AlarmID].OsAlarmState == ALARM_SLEEP)
	movs	r1,#36
.L196:
	ldr	r2,.L54
.L358:
	mla	r0,r0,r1,r2
.L195:
	ldrb	r1,[r0,#16]
.L359:
	cbnz	r1,.L3
.L360:

; ../src/kernel/Alarms.c	   185          {
; ../src/kernel/Alarms.c	   186              ErrorState = E_OS_NOFUNC;
	movs	r4,#5
.L361:
	b	.L4
.L3:

; ../src/kernel/Alarms.c	   187          }
; ../src/kernel/Alarms.c	   188          else
; ../src/kernel/Alarms.c	   189          {
; ../src/kernel/Alarms.c	   190  
; ../src/kernel/Alarms.c	   191              /* Access struct of <AlarmID> */
; ../src/kernel/Alarms.c	   192              Alarm = &Alarms[AlarmID];
; ../src/kernel/Alarms.c	   193  
; ../src/kernel/Alarms.c	   194              /* Get current counter value */
; ../src/kernel/Alarms.c	   195              CurrentCounterTicks = Alarm->OsAlarmCounterRef->OsCounterCurrentTicks;
	ldr	r1,[r0,#20]
.L362:
	ldr	r2,[r1,#20]
.L199:

; ../src/kernel/Alarms.c	   196  
; ../src/kernel/Alarms.c	   197              if (Alarm->OsAlarmExpiryTime >= CurrentCounterTicks)
	ldr	r0,[r0,#8]
.L363:
	cmp	r0,r2
	blo	.L5
.L364:

; ../src/kernel/Alarms.c	   198              {
; ../src/kernel/Alarms.c	   199                  /* The relative tick value when the alarm expires - Current counter value */
; ../src/kernel/Alarms.c	   200                  *Tick = Alarm->OsAlarmExpiryTime - CurrentCounterTicks;
	subs	r0,r0,r2
.L365:
	b	.L6
.L5:

; ../src/kernel/Alarms.c	   201              }
; ../src/kernel/Alarms.c	   202              else
; ../src/kernel/Alarms.c	   203              {
; ../src/kernel/Alarms.c	   204                  /* Overlapping case */
; ../src/kernel/Alarms.c	   205                  *Tick = (Alarm->OsAlarmExpiryTime + (Alarm->OsAlarmCounterRef->OsCounterMaxAllowedValue - CurrentCounterTicks) + 1);
	ldr	r1,[r1,#0]
.L366:
	subs	r1,r1,r2
.L367:
	add	r0,r0,r1
.L368:
	adds	r0,r0,#1
.L6:
	str	r0,[r3,#0]
.L4:

; ../src/kernel/Alarms.c	   206              }
; ../src/kernel/Alarms.c	   207          }
; ../src/kernel/Alarms.c	   208  #endif /* (ALARM_COUNT > 0) */
; ../src/kernel/Alarms.c	   209      /* Return the error state */
; ../src/kernel/Alarms.c	   210      return ErrorState;
	mov	r0,r4
.L200:

; ../src/kernel/Alarms.c	   211  }
	pop	{r4}
.L194:
	bx	lr
.L175:
	.align	4
.L54:
	.dw	Alarms
.L127:
	.size	OS_GetAlarm,$-OS_GetAlarm
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_SetRelAlarm')
	.global	OS_SetRelAlarm

; ../src/kernel/Alarms.c	   212  
; ../src/kernel/Alarms.c	   213  /**
; ../src/kernel/Alarms.c	   214   * @brief The system service occupies the alarm <AlarmID> element.
; ../src/kernel/Alarms.c	   215   * After <increment> ticks have elapsed, the task assigned to the
; ../src/kernel/Alarms.c	   216   * alarm <AlarmID> is activated or the assigned event (only for
; ../src/kernel/Alarms.c	   217   * extended tasks) is set or the alarm-callback routine is called.
; ../src/kernel/Alarms.c	   218   *
; ../src/kernel/Alarms.c	   219   * @service name    OS_SetRelAlarm
; ../src/kernel/Alarms.c	   220   * @syntax          FUNC(StatusType, OS_CODE) OS_SetRelAlarm
; ../src/kernel/Alarms.c	   221   *                  (
; ../src/kernel/Alarms.c	   222   *                      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   223   *                      CONST(TickType, AUTOMATIC) increment,
; ../src/kernel/Alarms.c	   224   *                      CONST(TickType, AUTOMATIC) cycle
; ../src/kernel/Alarms.c	   225   *                  );
; ../src/kernel/Alarms.c	   226   * @service ID
; ../src/kernel/Alarms.c	   227   * @sync/async
; ../src/kernel/Alarms.c	   228   * @reentrancy
; ../src/kernel/Alarms.c	   229   * @param[in]  AlarmID        Reference to alarm.
; ../src/kernel/Alarms.c	   230   * @param[in]  increment      Relative value in ticks
; ../src/kernel/Alarms.c	   231   * @param[in]  cycle          Cycle value in case of cyclic alarm. In case of single alarms, cycle shall be zero.
; ../src/kernel/Alarms.c	   232   * @param[out] -
; ../src/kernel/Alarms.c	   233   * @return     StatusType     Indicates the error status
; ../src/kernel/Alarms.c	   234   *             Standard:
; ../src/kernel/Alarms.c	   235   *                  • E_OK              No error
; ../src/kernel/Alarms.c	   236   *                  • E_OS_STATE        Alarm <AlarmID> is already in use
; ../src/kernel/Alarms.c	   237   *             Extended:
; ../src/kernel/Alarms.c	   238   *                  • E_OS_ID           Alarm <AlarmID> is invalid
; ../src/kernel/Alarms.c	   239   *                  • E_OS_VALUE        Value of <increment> outside of the admissible limits
; ../src/kernel/Alarms.c	   240   *                                      (lower than zero or greater than maxallowedvalue)
; ../src/kernel/Alarms.c	   241   *                  • E_OS_VALUE        Value of <cycle> unequal to 0 and outside of the admissible counter limits
; ../src/kernel/Alarms.c	   242   *                                      (less than mincycle or greater than  maxallowedvalue)
; ../src/kernel/Alarms.c	   243   *
; ../src/kernel/Alarms.c	   244   * @see       -
; ../src/kernel/Alarms.c	   245   * @note      Conformance: BCC1, BCC2, ECC1, ECC2 Events only ECC1, ECC2
; ../src/kernel/Alarms.c	   246   * @warning   -
; ../src/kernel/Alarms.c	   247   */
; ../src/kernel/Alarms.c	   248  
; ../src/kernel/Alarms.c	   249  FUNC(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   250  OS_SetRelAlarm(
; Function OS_SetRelAlarm
.L120:
	.thumb
	.align	4
OS_SetRelAlarm:	.type	func

.L63:
	push	{r4,r5,r6,lr}
.L201:
	mov	r3,r1
.L205:
	mov	r5,r2
.L207:

; ../src/kernel/Alarms.c	   251      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   252      CONST(TickType, AUTOMATIC) increment,
; ../src/kernel/Alarms.c	   253      CONST(TickType, AUTOMATIC) cycle)
; ../src/kernel/Alarms.c	   254  {
; ../src/kernel/Alarms.c	   255  
; ../src/kernel/Alarms.c	   256      /* Init the error to no error */
; ../src/kernel/Alarms.c	   257      VAR(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   258      ErrorState = E_OK;
	movs	r4,#0
.L208:

; ../src/kernel/Alarms.c	   259  
; ../src/kernel/Alarms.c	   260  #if (ALARM_COUNT > 0)
; ../src/kernel/Alarms.c	   261  
; ../src/kernel/Alarms.c	   262      /* Var for current ticks */
; ../src/kernel/Alarms.c	   263      VAR(TickType, TYPEDEF)
; ../src/kernel/Alarms.c	   264      CurrentCounterTicks = 0;
; ../src/kernel/Alarms.c	   265  
; ../src/kernel/Alarms.c	   266      /* Create pointer to an instance of Os_Alarm struct*/
; ../src/kernel/Alarms.c	   267      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   268      Alarm = NULL_PTR;
; ../src/kernel/Alarms.c	   269  
; ../src/kernel/Alarms.c	   270      VAR(uint8, TYPEDEF)
; ../src/kernel/Alarms.c	   271      ActiveAlarmsHeadIndex;
; ../src/kernel/Alarms.c	   272  
; ../src/kernel/Alarms.c	   273  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/Alarms.c	   274  
; ../src/kernel/Alarms.c	   275      if (AlarmID >= ALARM_COUNT)
; ../src/kernel/Alarms.c	   276      {
; ../src/kernel/Alarms.c	   277          ErrorState = E_OS_ID;
; ../src/kernel/Alarms.c	   278      }
; ../src/kernel/Alarms.c	   279      else if ((increment <= 0) || (increment > Alarms[AlarmID].OsAlarmCounterRef->OsCounterMaxAllowedValue))
; ../src/kernel/Alarms.c	   280      {
; ../src/kernel/Alarms.c	   281          ErrorState = E_OS_VALUE;
; ../src/kernel/Alarms.c	   282      }
; ../src/kernel/Alarms.c	   283      else if ((cycle != 0) && ((cycle < Alarms[AlarmID].OsAlarmCounterRef->OsCounterMinCycle) || (cycle > Alarms[AlarmID].OsAlarmCounterRef->OsCounterMaxAllowedValue)))
; ../src/kernel/Alarms.c	   284      {
; ../src/kernel/Alarms.c	   285          ErrorState = E_OS_VALUE;
; ../src/kernel/Alarms.c	   286      }
; ../src/kernel/Alarms.c	   287      else
; ../src/kernel/Alarms.c	   288  #endif /*(ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)*/
; ../src/kernel/Alarms.c	   289  
; ../src/kernel/Alarms.c	   290  
; ../src/kernel/Alarms.c	   291          /* Access struct of <AlarmID> */
; ../src/kernel/Alarms.c	   292          Alarm = &Alarms[AlarmID];
	movs	r1,#36
.L204:
	ldr	r2,.L55
.L203:
	mla	r2,r0,r1,r2
.L209:

; ../src/kernel/Alarms.c	   293  
; ../src/kernel/Alarms.c	   294      if (Alarm->OsAlarmState == ALARM_SLEEP)
	ldrb	r0,[r2,#16]
.L202:
	cbnz	r0,.L8
.L343:

; ../src/kernel/Alarms.c	   295      {
; ../src/kernel/Alarms.c	   296          /* Get the counter head index */
; ../src/kernel/Alarms.c	   297          ActiveAlarmsHeadIndex = Alarm->OsAlarmCounterRef->OsCounterAlarmsHeadIndex;
	ldr	r0,[r2,#20]
.L344:
	ldrb	r6,[r0,#24]
.L211:

; ../src/kernel/Alarms.c	   298  
; ../src/kernel/Alarms.c	   299          /* Get current counter value */
; ../src/kernel/Alarms.c	   300          CurrentCounterTicks = Alarm->OsAlarmCounterRef->OsCounterCurrentTicks;
	ldr	r1,[r0,#20]
.L212:

; ../src/kernel/Alarms.c	   301  
; ../src/kernel/Alarms.c	   302          /* The relative tick value when the alarm expires for the first time. */
; ../src/kernel/Alarms.c	   303          Alarm->OsAlarmExpiryTime = ((CurrentCounterTicks + increment) % (Alarm->OsAlarmCounterRef->OsCounterMaxAllowedValue + 1));
	add	r1,r1,r3
.L213:
	ldr	r0,[r0,#0]
.L345:
	adds	r0,r0,#1
.L346:
	udiv	r3,r1,r0
.L206:
	mul	r0,r0,r3
	subs	r1,r1,r0
.L347:
	str	r1,[r2,#8]
.L348:

; ../src/kernel/Alarms.c	   304  
; ../src/kernel/Alarms.c	   305          /* Set Alarm Cycle time */
; ../src/kernel/Alarms.c	   306          Alarm->OsAlarmCycleTime = cycle;
	str	r5,[r2,#12]
.L349:

; ../src/kernel/Alarms.c	   307  
; ../src/kernel/Alarms.c	   308          /* Set Alarm State */
; ../src/kernel/Alarms.c	   309          Alarm->OsAlarmState = ALARM_ACTIVE;
	movs	r0,#1
.L350:
	strb	r0,[r2,#16]
.L351:

; ../src/kernel/Alarms.c	   310  
; ../src/kernel/Alarms.c	   311          /* Update Alarm Expiry Queue */
; ../src/kernel/Alarms.c	   312          OS_AlarmInsert(&ActiveAlarmsHead[ActiveAlarmsHeadIndex], Alarm);
	ldr	r0,.L55+4
.L352:
	add	r0,r0,r6,lsl #2
.L353:
	mov	r1,r2
.L214:
	bl	OS_AlarmInsert
.L210:
	b	.L9
.L8:

; ../src/kernel/Alarms.c	   313      }
; ../src/kernel/Alarms.c	   314      else
; ../src/kernel/Alarms.c	   315      {
; ../src/kernel/Alarms.c	   316          ErrorState = E_OS_STATE;
	movs	r4,#7
.L9:

; ../src/kernel/Alarms.c	   317      }
; ../src/kernel/Alarms.c	   318  #endif /* (ALARM_COUNT > 0) */
; ../src/kernel/Alarms.c	   319      /* Return Error Status */
; ../src/kernel/Alarms.c	   320      return ErrorState;
	mov	r0,r4
.L215:

; ../src/kernel/Alarms.c	   321  }
	pop	{r4,r5,r6,pc}
.L164:
	.align	4
.L55:
	.dw	Alarms
	.dw	ActiveAlarmsHead
.L121:
	.size	OS_SetRelAlarm,$-OS_SetRelAlarm
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_SetAbsAlarm')
	.global	OS_SetAbsAlarm

; ../src/kernel/Alarms.c	   322  
; ../src/kernel/Alarms.c	   323  /**
; ../src/kernel/Alarms.c	   324   * @brief The system service occupies the alarm <AlarmID> element.
; ../src/kernel/Alarms.c	   325   * When <start> ticks are reached, the task assigned to the alarm
; ../src/kernel/Alarms.c	   326   * <AlarmID> is activated or the assigned event (only for extended
; ../src/kernel/Alarms.c	   327   * tasks) is set or the alarm-callback routine is called
; ../src/kernel/Alarms.c	   328   *
; ../src/kernel/Alarms.c	   329   * @service name    OS_SetAbsAlarm
; ../src/kernel/Alarms.c	   330   * @syntax          FUNC(StatusType, OS_CODE) OS_SetAbsAlarm
; ../src/kernel/Alarms.c	   331   *                  (
; ../src/kernel/Alarms.c	   332   *                      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   333   *                      CONST(TickType, AUTOMATIC) start,
; ../src/kernel/Alarms.c	   334   *                      CONST(TickType, AUTOMATIC) cycle
; ../src/kernel/Alarms.c	   335   *                  );
; ../src/kernel/Alarms.c	   336   * @service ID
; ../src/kernel/Alarms.c	   337   * @sync/async
; ../src/kernel/Alarms.c	   338   * @reentrancy
; ../src/kernel/Alarms.c	   339   * @param[in]  AlarmID        Reference to alarm.
; ../src/kernel/Alarms.c	   340   * @param[in]  start          Absolute value in ticks
; ../src/kernel/Alarms.c	   341   * @param[in]  cycle          Cycle value in case of cyclic alarm. In case of single alarms, cycle shall be zero.
; ../src/kernel/Alarms.c	   342   * @return     StatusType     Indicates the error status
; ../src/kernel/Alarms.c	   343   *             Standard:
; ../src/kernel/Alarms.c	   344   *                  • E_OK              No error
; ../src/kernel/Alarms.c	   345   *                  • E_OS_STATE        Alarm <AlarmID> is already in use
; ../src/kernel/Alarms.c	   346   *             Extended:
; ../src/kernel/Alarms.c	   347   *                  • E_OS_ID           Alarm <AlarmID> is invalid
; ../src/kernel/Alarms.c	   348   *                  • E_OS_VALUE        Value of <start> outside of the admissible counter limit
; ../src/kernel/Alarms.c	   349   *                                      (lower than zero or greater than maxallowedvalue)
; ../src/kernel/Alarms.c	   350   *                  • E_OS_VALUE        Value of <cycle> unequal to 0 and outside of the admissible counter limits
; ../src/kernel/Alarms.c	   351   *                                      (less than mincycle or greater than  maxallowedvalue)
; ../src/kernel/Alarms.c	   352   *
; ../src/kernel/Alarms.c	   353   * @see       -
; ../src/kernel/Alarms.c	   354   * @note      Conformance: BCC1, BCC2, ECC1, ECC2 Events only ECC1, ECC2
; ../src/kernel/Alarms.c	   355   * @warning   -
; ../src/kernel/Alarms.c	   356   */
; ../src/kernel/Alarms.c	   357  
; ../src/kernel/Alarms.c	   358  FUNC(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   359  OS_SetAbsAlarm(
; Function OS_SetAbsAlarm
.L114:
	.thumb
	.align	4
OS_SetAbsAlarm:	.type	func

.L65:
	push	{r4,r5,lr}
.L216:

; ../src/kernel/Alarms.c	   360      CONST(AlarmType, AUTOMATIC) AlarmID,
; ../src/kernel/Alarms.c	   361      CONST(TickType, AUTOMATIC) start,
; ../src/kernel/Alarms.c	   362      CONST(TickType, AUTOMATIC) cycle)
; ../src/kernel/Alarms.c	   363  {
; ../src/kernel/Alarms.c	   364      /* Init the error to no error */
; ../src/kernel/Alarms.c	   365      VAR(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   366      ErrorState = E_OK;
	movs	r5,#0
.L220:

; ../src/kernel/Alarms.c	   367  #if (ALARM_COUNT > 0)
; ../src/kernel/Alarms.c	   368      /* Create pointer to an instance of Os_Alarm struct*/
; ../src/kernel/Alarms.c	   369      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   370      Alarm = NULL_PTR;
; ../src/kernel/Alarms.c	   371  
; ../src/kernel/Alarms.c	   372      VAR(uint8, TYPEDEF)
; ../src/kernel/Alarms.c	   373      ActiveAlarmsHeadIndex;
; ../src/kernel/Alarms.c	   374  
; ../src/kernel/Alarms.c	   375  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/Alarms.c	   376  
; ../src/kernel/Alarms.c	   377      if (AlarmID >= ALARM_COUNT)
; ../src/kernel/Alarms.c	   378      {
; ../src/kernel/Alarms.c	   379          ErrorState = E_OS_ID;
; ../src/kernel/Alarms.c	   380      }
; ../src/kernel/Alarms.c	   381      else if ((start < 0) || (start > Alarms[AlarmID].OsAlarmCounterRef->OsCounterMaxAllowedValue))
; ../src/kernel/Alarms.c	   382      {
; ../src/kernel/Alarms.c	   383          ErrorState = E_OS_VALUE;
; ../src/kernel/Alarms.c	   384      }
; ../src/kernel/Alarms.c	   385      else if ((cycle != 0) && ((cycle < Alarms[AlarmID].OsAlarmCounterRef->OsCounterMinCycle) || (cycle > Alarms[AlarmID].OsAlarmCounterRef->OsCounterMaxAllowedValue)))
; ../src/kernel/Alarms.c	   386      {
; ../src/kernel/Alarms.c	   387          ErrorState = E_OS_VALUE;
; ../src/kernel/Alarms.c	   388      }
; ../src/kernel/Alarms.c	   389      else
; ../src/kernel/Alarms.c	   390  #endif /*(ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)*/
; ../src/kernel/Alarms.c	   391  
; ../src/kernel/Alarms.c	   392  
; ../src/kernel/Alarms.c	   393          /* Access struct of <AlarmID> */
; ../src/kernel/Alarms.c	   394          Alarm = &Alarms[AlarmID];
	movs	r3,#36
.L329:
	ldr	r4,.L56
.L330:
	mla	r3,r0,r3,r4
.L221:

; ../src/kernel/Alarms.c	   395  
; ../src/kernel/Alarms.c	   396      if (Alarm->OsAlarmState == ALARM_SLEEP)
	ldrb	r0,[r3,#16]
.L217:
	cbnz	r0,.L11
.L331:

; ../src/kernel/Alarms.c	   397      {
; ../src/kernel/Alarms.c	   398          /* Get the counter head index */
; ../src/kernel/Alarms.c	   399          ActiveAlarmsHeadIndex = Alarm->OsAlarmCounterRef->OsCounterAlarmsHeadIndex;
	ldr	r0,[r3,#20]
.L332:
	ldrb	r4,[r0,#24]
.L222:

; ../src/kernel/Alarms.c	   400  
; ../src/kernel/Alarms.c	   401          Alarm->OsAlarmExpiryTime = start;
	str	r1,[r3,#8]
.L333:

; ../src/kernel/Alarms.c	   402  
; ../src/kernel/Alarms.c	   403          Alarm->OsAlarmCycleTime = cycle;
	str	r2,[r3,#12]
.L334:

; ../src/kernel/Alarms.c	   404  
; ../src/kernel/Alarms.c	   405          Alarm->OsAlarmState = ALARM_ACTIVE;
	movs	r0,#1
.L335:
	strb	r0,[r3,#16]
.L336:

; ../src/kernel/Alarms.c	   406  
; ../src/kernel/Alarms.c	   407          /* Update Alarm Expiry Queue */
; ../src/kernel/Alarms.c	   408          OS_AlarmInsert(&ActiveAlarmsHead[ActiveAlarmsHeadIndex], Alarm);
	ldr	r0,.L56+4
.L337:
	add	r0,r0,r4,lsl #2
.L338:
	mov	r1,r3
.L219:
	bl	OS_AlarmInsert
.L218:
	b	.L12
.L11:

; ../src/kernel/Alarms.c	   409      }
; ../src/kernel/Alarms.c	   410      else
; ../src/kernel/Alarms.c	   411      {
; ../src/kernel/Alarms.c	   412          ErrorState = E_OS_STATE;
	movs	r5,#7
.L12:

; ../src/kernel/Alarms.c	   413      }
; ../src/kernel/Alarms.c	   414  #endif /* (ALARM_COUNT > 0) */
; ../src/kernel/Alarms.c	   415      /* Return Error State */
; ../src/kernel/Alarms.c	   416      return ErrorState;
	mov	r0,r5
.L223:

; ../src/kernel/Alarms.c	   417  }
	pop	{r4,r5,pc}
.L154:
	.align	4
.L56:
	.dw	Alarms
	.dw	ActiveAlarmsHead
.L115:
	.size	OS_SetAbsAlarm,$-OS_SetAbsAlarm
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_CancelAlarm')
	.global	OS_CancelAlarm

; ../src/kernel/Alarms.c	   418  
; ../src/kernel/Alarms.c	   419  /**
; ../src/kernel/Alarms.c	   420   * @brief The system service cancels the alarm <AlarmID>.
; ../src/kernel/Alarms.c	   421   *
; ../src/kernel/Alarms.c	   422   * @service name    OS_CancelAlarm
; ../src/kernel/Alarms.c	   423   * @syntax          FUNC(StatusType, OS_CODE) OS_CancelAlarm
; ../src/kernel/Alarms.c	   424   *                  (
; ../src/kernel/Alarms.c	   425   *                      CONST(AlarmType, AUTOMATIC) AlarmID
; ../src/kernel/Alarms.c	   426   *                  );
; ../src/kernel/Alarms.c	   427   * @service ID
; ../src/kernel/Alarms.c	   428   * @sync/async
; ../src/kernel/Alarms.c	   429   * @reentrancy
; ../src/kernel/Alarms.c	   430   * @param[in]  AlarmID        Reference to alarm .
; ../src/kernel/Alarms.c	   431   * @param[out] -
; ../src/kernel/Alarms.c	   432   * @return     StatusType     Indicates the error status
; ../src/kernel/Alarms.c	   433   *             Standard:
; ../src/kernel/Alarms.c	   434   *                  • E_OK      No error
; ../src/kernel/Alarms.c	   435   *             Extended:
; ../src/kernel/Alarms.c	   436   *                  • E_OS_ID   Alarm <AlarmID> is invalid
; ../src/kernel/Alarms.c	   437   *
; ../src/kernel/Alarms.c	   438   * @see       -
; ../src/kernel/Alarms.c	   439   * @note      Conformance: BCC1, BCC2, ECC1, ECC2
; ../src/kernel/Alarms.c	   440   * @warning   -
; ../src/kernel/Alarms.c	   441   */
; ../src/kernel/Alarms.c	   442  
; ../src/kernel/Alarms.c	   443  FUNC(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   444  OS_CancelAlarm(
; Function OS_CancelAlarm
.L108:
	.thumb
	.align	4
OS_CancelAlarm:	.type	func

.L67:
	push	{r4,lr}
.L224:

; ../src/kernel/Alarms.c	   445      CONST(AlarmType, AUTOMATIC) AlarmID)
; ../src/kernel/Alarms.c	   446  {
; ../src/kernel/Alarms.c	   447  
; ../src/kernel/Alarms.c	   448      /* Init the error to no error */
; ../src/kernel/Alarms.c	   449      VAR(StatusType, OS_CODE)
; ../src/kernel/Alarms.c	   450      ErrorState = E_OK;
	movs	r4,#0
.L226:

; ../src/kernel/Alarms.c	   451  
; ../src/kernel/Alarms.c	   452  #if (ALARM_COUNT > 0)
; ../src/kernel/Alarms.c	   453      /* Create pointer to an instance of Os_Alarm struct*/
; ../src/kernel/Alarms.c	   454      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   455      Alarm = NULL_PTR;
; ../src/kernel/Alarms.c	   456  
; ../src/kernel/Alarms.c	   457      VAR(uint8, TYPEDEF)
; ../src/kernel/Alarms.c	   458      ActiveAlarmsHeadIndex;
; ../src/kernel/Alarms.c	   459  
; ../src/kernel/Alarms.c	   460  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/Alarms.c	   461  
; ../src/kernel/Alarms.c	   462      if (AlarmID >= ALARM_COUNT)
; ../src/kernel/Alarms.c	   463      {
; ../src/kernel/Alarms.c	   464          ErrorState = E_OS_ID;
; ../src/kernel/Alarms.c	   465      }
; ../src/kernel/Alarms.c	   466      else
; ../src/kernel/Alarms.c	   467  
; ../src/kernel/Alarms.c	   468  #endif /*(ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)*/
; ../src/kernel/Alarms.c	   469  
; ../src/kernel/Alarms.c	   470  
; ../src/kernel/Alarms.c	   471          /* Access struct of <AlarmID> */
; ../src/kernel/Alarms.c	   472          Alarm = &Alarms[AlarmID];
	movs	r1,#36
.L316:
	ldr	r2,.L57
.L317:
	mla	r1,r0,r1,r2
.L227:

; ../src/kernel/Alarms.c	   473  
; ../src/kernel/Alarms.c	   474      if (Alarm->OsAlarmState == ALARM_SLEEP)
	ldrb	r0,[r1,#16]
.L225:
	cbnz	r0,.L14
.L318:

; ../src/kernel/Alarms.c	   475      {
; ../src/kernel/Alarms.c	   476          ErrorState = E_OS_NOFUNC;
	movs	r4,#5
.L319:
	b	.L15
.L14:

; ../src/kernel/Alarms.c	   477      }
; ../src/kernel/Alarms.c	   478      else
; ../src/kernel/Alarms.c	   479      {
; ../src/kernel/Alarms.c	   480          /* Get Index */
; ../src/kernel/Alarms.c	   481          ActiveAlarmsHeadIndex = Alarm->OsAlarmCounterRef->OsCounterAlarmsHeadIndex;
	ldr	r0,[r1,#20]
.L320:
	ldrb	r2,[r0,#24]
.L228:

; ../src/kernel/Alarms.c	   482  
; ../src/kernel/Alarms.c	   483          /* Change Alarm State */
; ../src/kernel/Alarms.c	   484          Alarm->OsAlarmState = ALARM_SLEEP;
	movs	r0,#0
.L321:
	strb	r0,[r1,#16]
.L322:

; ../src/kernel/Alarms.c	   485  
; ../src/kernel/Alarms.c	   486          /* Remove from List */
; ../src/kernel/Alarms.c	   487          OS_AlarmRemove(&ActiveAlarmsHead[ActiveAlarmsHeadIndex], Alarm);
	ldr	r0,.L57+4
.L323:
	add	r0,r0,r2,lsl #2
.L324:
	bl	OS_AlarmRemove
.L15:

; ../src/kernel/Alarms.c	   488      }
; ../src/kernel/Alarms.c	   489  #endif  /* (ALARM_COUNT > 0) */
; ../src/kernel/Alarms.c	   490  
; ../src/kernel/Alarms.c	   491      return ErrorState;
	mov	r0,r4
.L229:

; ../src/kernel/Alarms.c	   492  }
	pop	{r4,pc}
.L148:
	.align	4
.L57:
	.dw	Alarms
	.dw	ActiveAlarmsHead
.L109:
	.size	OS_CancelAlarm,$-OS_CancelAlarm
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_AlarmInsert')
	.global	OS_AlarmInsert

; ../src/kernel/Alarms.c	   493  
; ../src/kernel/Alarms.c	   494  /**
; ../src/kernel/Alarms.c	   495   * @brief Inserts a new alarm into the alarm list.
; ../src/kernel/Alarms.c	   496   *
; ../src/kernel/Alarms.c	   497   * This function inserts a new alarm into the alarm list pointed to by `Head`.
; ../src/kernel/Alarms.c	   498   *
; ../src/kernel/Alarms.c	   499   * @param[in,out] Head Pointer to the head of the alarm list.
; ../src/kernel/Alarms.c	   500   * @param[in] NewAlarm Pointer to the new alarm to be inserted.
; ../src/kernel/Alarms.c	   501   *
; ../src/kernel/Alarms.c	   502   * @return None.
; ../src/kernel/Alarms.c	   503   */
; ../src/kernel/Alarms.c	   504  FUNC(void, OS_CODE)
; ../src/kernel/Alarms.c	   505  OS_AlarmInsert(
; Function OS_AlarmInsert
.L84:
	.thumb
	.align	4
OS_AlarmInsert:	.type	func

.L69:
	push	{r4,r5}
.L230:

; ../src/kernel/Alarms.c	   506      P2VAR(Os_Alarm *, OS_CODE, TYPEDEF) Head,
; ../src/kernel/Alarms.c	   507      P2VAR(Os_Alarm, OS_CODE, TYPEDEF) NewAlarm)
; ../src/kernel/Alarms.c	   508  {
; ../src/kernel/Alarms.c	   509      /* Var for current alarm */
; ../src/kernel/Alarms.c	   510      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   511      CurrentAlarm = NULL_PTR;
; ../src/kernel/Alarms.c	   512  
; ../src/kernel/Alarms.c	   513      VAR(TickType, AUTOMATIC)
; ../src/kernel/Alarms.c	   514      CurrentCounterTicks = NewAlarm->OsAlarmCounterRef->OsCounterCurrentTicks;
	ldr	r2,[r1,#20]
.L255:
	ldr	r3,[r2,#20]
.L232:

; ../src/kernel/Alarms.c	   515  
; ../src/kernel/Alarms.c	   516      /* If List is empty */
; ../src/kernel/Alarms.c	   517      if (NULL_PTR == *(Head))
	ldr	r2,[r0,#0]
.L234:
	movs	r4,#0
.L256:
	cmp	r4,r2
	bne	.L17
.L257:

; ../src/kernel/Alarms.c	   518      {
; ../src/kernel/Alarms.c	   519          *Head = NewAlarm;
	b	.L18
.L17:

; ../src/kernel/Alarms.c	   520      }
; ../src/kernel/Alarms.c	   521      /* If New alarm is smaller than Head and Head is smaller than CurrentCounterTicks */
; ../src/kernel/Alarms.c	   522      else if (((*Head)->OsAlarmExpiryTime > NewAlarm->OsAlarmExpiryTime) && ((*Head)->OsAlarmExpiryTime < CurrentCounterTicks))
	ldr	r4,[r1,#8]
.L258:
	ldr	r5,[r2,#8]
.L259:
	cmp	r5,r4
	bls	.L19
.L260:
	cmp	r5,r3
	bhs	.L20
.L261:

; ../src/kernel/Alarms.c	   523      {
; ../src/kernel/Alarms.c	   524          NewAlarm->OsAlarmNext = *Head;
	b	.L21
.L20:
.L19:

; ../src/kernel/Alarms.c	   525          NewAlarm->OsAlarmNext->OsAlarmPrevious = NewAlarm;
; ../src/kernel/Alarms.c	   526          *Head = NewAlarm;
; ../src/kernel/Alarms.c	   527      }
; ../src/kernel/Alarms.c	   528      /* If New alarm is smaller than Head and New alarm is greater than CuurentCounterTcisk */
; ../src/kernel/Alarms.c	   529      else if (((*Head)->OsAlarmExpiryTime > NewAlarm->OsAlarmExpiryTime) && (NewAlarm->OsAlarmExpiryTime > CurrentCounterTicks))
	cmp	r5,r4
	bls	.L25
.L262:
	cmp	r4,r3
	bls	.L51
.L21:

; ../src/kernel/Alarms.c	   530      {
; ../src/kernel/Alarms.c	   531          NewAlarm->OsAlarmNext = *Head;
	str	r2,[r1,#24]
.L263:

; ../src/kernel/Alarms.c	   532          NewAlarm->OsAlarmNext->OsAlarmPrevious = NewAlarm;
	str	r1,[r2,#28]
.L18:

; ../src/kernel/Alarms.c	   533          *Head = NewAlarm;
	str	r1,[r0,#0]
.L264:
	b	.L24

; ../src/kernel/Alarms.c	   534      }
; ../src/kernel/Alarms.c	   535      else
; ../src/kernel/Alarms.c	   536      {
; ../src/kernel/Alarms.c	   537          CurrentAlarm = *Head;
; ../src/kernel/Alarms.c	   538  
; ../src/kernel/Alarms.c	   539          /* Locate the node after which the new node is to be inserted */
; ../src/kernel/Alarms.c	   540          /*while ((NULL_PTR != CurrentAlarm->OsAlarmNext) && (CurrentAlarm->OsAlarmNext->OsAlarmExpiryTime <= NewAlarm->OsAlarmExpiryTime))*/
; ../src/kernel/Alarms.c	   541          while ((NULL_PTR != CurrentAlarm->OsAlarmNext) &&
; ../src/kernel/Alarms.c	   542                 ((CurrentAlarm->OsAlarmNext->OsAlarmExpiryTime <= NewAlarm->OsAlarmExpiryTime &&
; ../src/kernel/Alarms.c	   543                   CurrentAlarm->OsAlarmNext->OsAlarmExpiryTime >= CurrentCounterTicks) ||
; ../src/kernel/Alarms.c	   544                  (CurrentAlarm->OsAlarmNext->OsAlarmExpiryTime >= NewAlarm->OsAlarmExpiryTime &&
; ../src/kernel/Alarms.c	   545                   NewAlarm->OsAlarmExpiryTime <= CurrentCounterTicks)))
.L26:
.L27:

; ../src/kernel/Alarms.c	   546          {
; ../src/kernel/Alarms.c	   547              CurrentAlarm = CurrentAlarm->OsAlarmNext;
	ldr	r2,[r2,#24]
.L25:
.L51:
	ldr	r0,[r2,#24]
.L265:
	movs	r5,#0
.L266:
	cmp	r5,r0
	beq	.L28
.L267:
	ldr	r5,[r0,#8]
.L268:
	cmp	r5,r4
	bhi	.L29
.L269:
	cmp	r5,r3
	bhs	.L27
.L29:
	cmp	r5,r4
	blo	.L30
.L270:
	cmp	r4,r3
	bls	.L26
.L30:
.L28:

; ../src/kernel/Alarms.c	   548          }
; ../src/kernel/Alarms.c	   549  
; ../src/kernel/Alarms.c	   550          /* Make the apprioate links */
; ../src/kernel/Alarms.c	   551          NewAlarm->OsAlarmNext = CurrentAlarm->OsAlarmNext;
	str	r0,[r1,#24]
.L271:

; ../src/kernel/Alarms.c	   552  
; ../src/kernel/Alarms.c	   553          /* if the new node is not inserted at the end of the list */
; ../src/kernel/Alarms.c	   554          if (CurrentAlarm->OsAlarmNext != NULL_PTR)
	ldr	r3,[r2,#24]
.L233:
	cbz	r3,.L31
.L272:

; ../src/kernel/Alarms.c	   555          {
; ../src/kernel/Alarms.c	   556              NewAlarm->OsAlarmNext->OsAlarmPrevious = NewAlarm;
	str	r1,[r0,#28]
.L31:

; ../src/kernel/Alarms.c	   557          }
; ../src/kernel/Alarms.c	   558  
; ../src/kernel/Alarms.c	   559          CurrentAlarm->OsAlarmNext = NewAlarm;
	str	r1,[r2,#24]
.L273:

; ../src/kernel/Alarms.c	   560          NewAlarm->OsAlarmPrevious = CurrentAlarm;
	str	r2,[r1,#28]
.L24:

; ../src/kernel/Alarms.c	   561      }
; ../src/kernel/Alarms.c	   562  }
	pop	{r4,r5}
.L231:
	bx	lr
.L85:
	.size	OS_AlarmInsert,$-OS_AlarmInsert
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_AlarmRemoveHead')
	.global	OS_AlarmRemoveHead

; ../src/kernel/Alarms.c	   563  
; ../src/kernel/Alarms.c	   564  /**
; ../src/kernel/Alarms.c	   565   * @brief Removes the head alarm from the list.
; ../src/kernel/Alarms.c	   566   *
; ../src/kernel/Alarms.c	   567   * This function removes the head alarm from the list and updates the head pointer accordingly.
; ../src/kernel/Alarms.c	   568   *
; ../src/kernel/Alarms.c	   569   * @param[in,out] Head Pointer to the head of the alarm list.
; ../src/kernel/Alarms.c	   570   */
; ../src/kernel/Alarms.c	   571  FUNC(void, OS_CODE)
; ../src/kernel/Alarms.c	   572  OS_AlarmRemoveHead(
; Function OS_AlarmRemoveHead
.L90:
	.thumb
	.align	4
OS_AlarmRemoveHead:	.type	func

.L71:

; ../src/kernel/Alarms.c	   573      P2VAR(Os_Alarm *, OS_CODE, TYPEDEF) Head)
; ../src/kernel/Alarms.c	   574  {
; ../src/kernel/Alarms.c	   575      P2VAR(Os_Alarm, OS_CODE, TYPEDEF)
; ../src/kernel/Alarms.c	   576      AlarmToRemove = *Head;
	ldr	r1,[r0,#0]
.L235:

; ../src/kernel/Alarms.c	   577  
; ../src/kernel/Alarms.c	   578      /* If the list is not empty */
; ../src/kernel/Alarms.c	   579      if (NULL_PTR != AlarmToRemove)
	movs	r3,#0
.L278:
	cmp	r3,r1
	it	eq
	bxeq	lr
.L279:

; ../src/kernel/Alarms.c	   580      {
; ../src/kernel/Alarms.c	   581          /* Update the head of the list */
; ../src/kernel/Alarms.c	   582          *Head = AlarmToRemove->OsAlarmNext;
	ldr	r2,[r1,#24]
.L280:
	str	r2,[r0,#0]
.L281:

; ../src/kernel/Alarms.c	   583          if (NULL_PTR != *Head)
	cmp	r3,r2
.L282:

; ../src/kernel/Alarms.c	   584          {
; ../src/kernel/Alarms.c	   585              (*Head)->OsAlarmPrevious = NULL_PTR;
	it	ne
	strne	r3,[r2,#28]
.L33:

; ../src/kernel/Alarms.c	   586          }
; ../src/kernel/Alarms.c	   587  
; ../src/kernel/Alarms.c	   588          /* Set the Prev and Next pointers of the removed alarm to NULL */
; ../src/kernel/Alarms.c	   589          AlarmToRemove->OsAlarmPrevious = NULL_PTR;
	str	r3,[r1,#28]
.L283:

; ../src/kernel/Alarms.c	   590          AlarmToRemove->OsAlarmNext = NULL_PTR;
	str	r3,[r1,#24]
.L32:

; ../src/kernel/Alarms.c	   591      }
; ../src/kernel/Alarms.c	   592  }
	bx	lr
.L91:
	.size	OS_AlarmRemoveHead,$-OS_AlarmRemoveHead
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_AlarmRemove')
	.global	OS_AlarmRemove

; ../src/kernel/Alarms.c	   593  
; ../src/kernel/Alarms.c	   594  /**
; ../src/kernel/Alarms.c	   595   * @brief Removes an alarm from the alarm list.
; ../src/kernel/Alarms.c	   596   *
; ../src/kernel/Alarms.c	   597   * This function removes the specified alarm from the alarm list. If the alarm to be removed is the head of the list,
; ../src/kernel/Alarms.c	   598   * the head pointer is updated. If the alarm to be removed is not the head, it is searched for in the list and then removed.
; ../src/kernel/Alarms.c	   599   *
; ../src/kernel/Alarms.c	   600   * @param[in,out] Head Pointer to the head of the alarm list.
; ../src/kernel/Alarms.c	   601   * @param[in] AlarmToRemove Pointer to the alarm to be removed.
; ../src/kernel/Alarms.c	   602   */
; ../src/kernel/Alarms.c	   603  FUNC(void, OS_CODE)
; ../src/kernel/Alarms.c	   604  OS_AlarmRemove(
; Function OS_AlarmRemove
.L96:
	.thumb
	.align	4
OS_AlarmRemove:	.type	func

.L73:

; ../src/kernel/Alarms.c	   605      P2VAR(Os_Alarm *, OS_CODE, TYPEDEF) Head,
; ../src/kernel/Alarms.c	   606      P2VAR(Os_Alarm, OS_CODE, TYPEDEF) AlarmToRemove)
; ../src/kernel/Alarms.c	   607  {
; ../src/kernel/Alarms.c	   608      if (NULL_PTR == AlarmToRemove)
	movs	r2,#0
.L288:
	cmp	r2,r1
	it	eq
	bxeq	lr
.L34:

; ../src/kernel/Alarms.c	   609      {
; ../src/kernel/Alarms.c	   610          /* Do nothing */
; ../src/kernel/Alarms.c	   611      }
; ../src/kernel/Alarms.c	   612      else if (NULL_PTR == *Head)
	ldr	r2,[r0,#0]
.L289:
	movs	r3,#0
.L290:
	cmp	r3,r2
	it	eq
	bxeq	lr
.L36:

; ../src/kernel/Alarms.c	   613      {
; ../src/kernel/Alarms.c	   614          /* Do nothing */
; ../src/kernel/Alarms.c	   615      }
; ../src/kernel/Alarms.c	   616      else
; ../src/kernel/Alarms.c	   617      {
; ../src/kernel/Alarms.c	   618          /* If the alarm to be removed is the head of the list */
; ../src/kernel/Alarms.c	   619          if (*Head == AlarmToRemove)
; ../src/kernel/Alarms.c	   620          {
; ../src/kernel/Alarms.c	   621              *Head = AlarmToRemove->OsAlarmNext;
	ldr	r3,[r1,#24]
.L291:
	cmp	r2,r1
	bne	.L38
.L292:
	str	r3,[r0,#0]
.L293:

; ../src/kernel/Alarms.c	   622              if (NULL_PTR != *Head)
	movs	r0,#0
.L236:
	cmp	r0,r3
	beq	.L40
.L294:

; ../src/kernel/Alarms.c	   623              {
; ../src/kernel/Alarms.c	   624                  (*Head)->OsAlarmPrevious = NULL_PTR;
	str	r0,[r3,#28]
.L295:
	b	.L52
.L38:

; ../src/kernel/Alarms.c	   625              }
; ../src/kernel/Alarms.c	   626          }
; ../src/kernel/Alarms.c	   627          else
; ../src/kernel/Alarms.c	   628          {
; ../src/kernel/Alarms.c	   629              /* If the alarm to be removed is not at the end of the list */
; ../src/kernel/Alarms.c	   630              if (NULL_PTR != AlarmToRemove->OsAlarmNext)
	movs	r0,#0
.L237:
	cmp	r0,r3
.L296:

; ../src/kernel/Alarms.c	   631              {
; ../src/kernel/Alarms.c	   632                  AlarmToRemove->OsAlarmNext->OsAlarmPrevious = AlarmToRemove->OsAlarmPrevious;
	itt	ne
	ldrne	r0,[r1,#28]
.L297:
	strne	r0,[r3,#28]
.L41:

; ../src/kernel/Alarms.c	   633              }
; ../src/kernel/Alarms.c	   634  
; ../src/kernel/Alarms.c	   635              /* If the alarm to be removed is not at the start of the list */
; ../src/kernel/Alarms.c	   636              if (NULL_PTR != AlarmToRemove->OsAlarmPrevious)
	ldr	r0,[r1,#28]
.L298:
	movs	r2,#0
.L299:
	cmp	r2,r0
.L300:

; ../src/kernel/Alarms.c	   637              {
; ../src/kernel/Alarms.c	   638                  AlarmToRemove->OsAlarmPrevious->OsAlarmNext = AlarmToRemove->OsAlarmNext;
	itt	ne
	ldrne	r2,[r1,#24]
.L301:
	strne	r2,[r0,#24]
.L42:
.L40:
.L52:

; ../src/kernel/Alarms.c	   639              }
; ../src/kernel/Alarms.c	   640          }
; ../src/kernel/Alarms.c	   641  
; ../src/kernel/Alarms.c	   642          /* Set the Prev and Next pointers of the removed alarm to NULL */
; ../src/kernel/Alarms.c	   643          AlarmToRemove->OsAlarmPrevious = NULL_PTR;
	movs	r0,#0
.L302:
	str	r0,[r1,#28]
.L303:

; ../src/kernel/Alarms.c	   644          AlarmToRemove->OsAlarmNext = NULL_PTR;
	str	r0,[r1,#24]
.L37:
.L35:

; ../src/kernel/Alarms.c	   645      }
; ../src/kernel/Alarms.c	   646  }
	bx	lr
.L97:
	.size	OS_AlarmRemove,$-OS_AlarmRemove
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_OS_AlarmFireAction')
	.global	OS_AlarmFireAction

; ../src/kernel/Alarms.c	   647  
; ../src/kernel/Alarms.c	   648  /**
; ../src/kernel/Alarms.c	   649   * @brief This function is responsible for executing the action associated with an alarm.
; ../src/kernel/Alarms.c	   650   *
; ../src/kernel/Alarms.c	   651   * @param Alarm Pointer to the alarm object.
; ../src/kernel/Alarms.c	   652   */
; ../src/kernel/Alarms.c	   653  FUNC(void, OS_CODE)
; ../src/kernel/Alarms.c	   654  OS_AlarmFireAction(
; Function OS_AlarmFireAction
.L102:
	.thumb
	.align	4
OS_AlarmFireAction:	.type	func

.L75:
	push	{r4,lr}
.L238:

; ../src/kernel/Alarms.c	   655      P2VAR(Os_Alarm, AUTOMATIC, OS_APPL_DATA) Alarm)
; ../src/kernel/Alarms.c	   656  {
; ../src/kernel/Alarms.c	   657      /* Get Alarm Action */
; ../src/kernel/Alarms.c	   658      VAR(uint8, AUTOMATIC)
; ../src/kernel/Alarms.c	   659      AlarmActionType = Alarm->OsAlarmActionType;
	ldrb	r1,[r0,#4]
.L240:

; ../src/kernel/Alarms.c	   660  
; ../src/kernel/Alarms.c	   661      /* Check the alarm action type */
; ../src/kernel/Alarms.c	   662      switch (AlarmActionType)
	cbz	r1,.L43
.L308:
	cmp	r1,#1
	beq	.L44
	cmp	r1,#2
	beq	.L45
.L309:

; ../src/kernel/Alarms.c	   663      {
; ../src/kernel/Alarms.c	   664      case ALARM_ACTIVATE_TASK:
; ../src/kernel/Alarms.c	   665          /* Activate the task */
; ../src/kernel/Alarms.c	   666          OS_ActivateTask(Alarm->OsAlarmAction.OsAlarmActivateTask->OsAlarmActivateTaskRef);
; ../src/kernel/Alarms.c	   667          break;
; ../src/kernel/Alarms.c	   668      case ALARM_SET_EVENT:
; ../src/kernel/Alarms.c	   669          /* Set the event */
; ../src/kernel/Alarms.c	   670          OS_SetEvent(Alarm->OsAlarmAction.OsAlarmSetEventTask->OsAlarmSetEventTaskRef, Alarm->OsAlarmAction.OsAlarmSetEventTask->OsAlarmSetEventRef);
; ../src/kernel/Alarms.c	   671          break;
; ../src/kernel/Alarms.c	   672      case ALARM_CALLBACK:
; ../src/kernel/Alarms.c	   673          /* Call the callback function */
; ../src/kernel/Alarms.c	   674          Alarm->OsAlarmAction.OsAlarmCallbackName();
; ../src/kernel/Alarms.c	   675          break;
; ../src/kernel/Alarms.c	   676      default:
; ../src/kernel/Alarms.c	   677          break;
	pop	{r4,pc}
.L43:
	ldr	r0,[r0,#0]
.L239:
	ldrb	r0,[r0,#0]
	bl	OS_ActivateTask
.L241:
	pop	{r4,pc}
.L44:
	ldr	r1,[r0,#0]
.L243:
	ldrb	r0,[r1,#0]
.L242:
	ldr	r1,[r1,#4]
	bl	OS_SetEvent
.L310:
	pop	{r4,pc}
.L45:
	ldr	r4,[r0,#0]
.L311:
	blx	r4

; ../src/kernel/Alarms.c	   678      }
; ../src/kernel/Alarms.c	   679  }
.L50:
.L48:
.L47:
	pop	{r4,pc}
.L103:
	.size	OS_AlarmFireAction,$-OS_AlarmFireAction
	; End of function
	.endsec	; End of section

	.calls	'OS_SetRelAlarm','OS_AlarmInsert'
	.calls	'OS_SetAbsAlarm','OS_AlarmInsert'
	.calls	'OS_CancelAlarm','OS_AlarmRemove'
	.calls	'OS_AlarmFireAction','OS_ActivateTask'
	.calls	'OS_AlarmFireAction','OS_SetEvent'
	.calls	'OS_AlarmFireAction','__INDIRECT__'
	.calls	'OS_GetAlarmBase','',0
	.calls	'OS_GetAlarm','',4
	.calls	'OS_SetRelAlarm','',16
	.calls	'OS_SetAbsAlarm','',12
	.calls	'OS_CancelAlarm','',8
	.calls	'OS_AlarmInsert','',8
	.calls	'OS_AlarmRemoveHead','',0
	.calls	'OS_AlarmRemove','',0
	.calls	'OS_AlarmFireAction','',8
	.extern	OS_ActivateTask
	.extern	OS_SetEvent
	.extern	ActiveAlarmsHead
	.extern	Alarms
	.extern	__INDIRECT__
	.section	.debug_info
.L77:
	.dw	3396
	.dh	3
	.dw	.L78
	.db	4
.L76:
	.db	1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L79
.L146:
	.db	2
	.db	'unsigned char',0,1,8,3
	.db	'Os_AlarmActivateTask_s',0,1,140,1,8,1,4
	.db	'OsAlarmActivateTaskRef',0
	.dw	49
	.db	1,2,35,0,0,5
	.dw	66
.L139:
	.db	2
	.db	'unsigned int',0,4,7,3
	.db	'Os_AlarmSetEvent_s',0,1,146,1,8,8,4
	.db	'OsAlarmSetEventTaskRef',0
	.dw	49
	.db	1,2,35,0,4
	.db	'OsAlarmSetEventRef',0
	.dw	133
	.db	4,2,35,4,0,5
	.dw	149
	.db	6,1,1,5
	.dw	240
	.db	7
	.db	'CallbackFuncPtrType',0,1,88,9
	.dw	243
	.db	8
	.dw	248
	.db	9
	.db	'Os_AlarmAction_u',0,1,92,7,4,4
	.db	'OsAlarmActivateTask',0
	.dw	128
	.db	4,2,35,0,4
	.db	'OsAlarmSetEventTask',0
	.dw	235
	.db	4,2,35,0,4
	.db	'OsAlarmCallbackName',0
	.dw	276
	.db	4,2,35,0,0,8
	.dw	133
	.db	8
	.dw	133
	.db	8
	.dw	133
	.db	8
	.dw	49
	.db	8
	.dw	133
	.db	3
	.db	'Os_Counter_s',0,2,44,8,28,4
	.db	'OsCounterMaxAllowedValue',0
	.dw	391
	.db	4,2,35,0,4
	.db	'OsCounterMinCycle',0
	.dw	396
	.db	4,2,35,4,4
	.db	'OsCounterTicksPerBase',0
	.dw	401
	.db	4,2,35,8,4
	.db	'OsCounterType',0
	.dw	406
	.db	1,2,35,12,4
	.db	'OsSecondsPerTick',0
	.dw	411
	.db	4,2,35,16,4
	.db	'OsCounterCurrentTicks',0
	.dw	133
	.db	4,2,35,20,4
	.db	'OsCounterAlarmsHeadIndex',0
	.dw	49
	.db	1,2,35,24,0,5
	.dw	416
	.db	3
	.db	'Os_Alarm_s',0,1,104,8,36,4
	.db	'OsAlarmAction',0
	.dw	281
	.db	4,2,35,0,4
	.db	'OsAlarmActionType',0
	.dw	49
	.db	1,2,35,4,4
	.db	'OsAlarmExpiryTime',0
	.dw	133
	.db	4,2,35,8,4
	.db	'OsAlarmCycleTime',0
	.dw	133
	.db	4,2,35,12,4
	.db	'OsAlarmState',0
	.dw	49
	.db	1,2,35,16,4
	.db	'OsAlarmCounterRef',0
	.dw	641
	.db	4,2,35,20,4
	.db	'OsAlarmNext',0
	.dw	.L136-.L77
	.db	4,2,35,24,4
	.db	'OsAlarmPrevious',0
	.dw	.L136-.L77
	.db	4,2,35,28,4
	.db	'OsAlarmAlarmTime',0
	.dw	49
	.db	1,2,35,32,4
	.db	'OsAlarmAutoStartType',0
	.dw	49
	.db	1,2,35,33,0
.L136:
	.db	5
	.dw	646
.L134:
	.db	5
	.dw	917
	.db	5
	.dw	240
	.db	8
	.dw	49
	.db	10
	.db	'OS_ActivateTask',0,3,64,34
	.dw	49
	.db	1,1,1,1,11
	.db	'TaskID',0,3,66,32
	.dw	932
	.db	0,8
	.dw	49
	.db	8
	.dw	133
	.db	10
	.db	'OS_SetEvent',0,3,105,34
	.dw	49
	.db	1,1,1,1,11
	.db	'TaskID',0,3,107,32
	.dw	981
	.db	11
	.db	'Mask',0,3,108,37
	.dw	986
	.db	0
.L149:
	.db	8
	.dw	49
.L155:
	.db	8
	.dw	49
.L157:
	.db	8
	.dw	133
.L159:
	.db	8
	.dw	133
.L165:
	.db	8
	.dw	49
.L167:
	.db	8
	.dw	133
.L169:
	.db	8
	.dw	133
.L176:
	.db	8
	.dw	49
.L178:
	.db	5
	.dw	133
.L184:
	.db	8
	.dw	49
	.db	3
	.db	'AlarmBaseType_s',0,4,230,1,8,12,4
	.db	'maxallowedvalue',0
	.dw	133
	.db	4,2,35,0,4
	.db	'ticksperbase',0
	.dw	133
	.db	4,2,35,4,4
	.db	'mincycle',0
	.dw	133
	.db	4,2,35,8,0
.L186:
	.db	5
	.dw	1094
	.db	12
	.db	'__INDIRECT__',0,5,1,1,1,1,1,13,1,5
	.dw	1207
	.db	7
	.db	'__codeptr',0,5,1,1
	.dw	1209
	.db	2
	.db	'int',0,4,5,14,6,87,10,4,4
	.db	'x',0
	.dw	1232
	.db	4,2,35,0,0,7
	.db	'Os_ContexType',0,6,90,2
	.dw	1239
	.db	7
	.db	'boolean',0,7,242,1,23
	.dw	49
	.db	7
	.db	'uint8',0,7,247,1,23
	.dw	49
	.db	2
	.db	'unsigned short int',0,2,7,7
	.db	'uint16',0,7,252,1,24
	.dw	1310
	.db	7
	.db	'uint32',0,7,129,2,22
	.dw	133
	.db	7
	.db	'StatusType',0,8,191,1,23
	.dw	49
	.db	7
	.db	'Std_ReturnType',0,8,235,2,15
	.dw	49
	.db	7
	.db	'Std_TransformerClass',0,8,238,2,15
	.dw	49
	.db	7
	.db	'Std_TransformerForwardCode',0,8,241,2,15
	.dw	49
	.db	7
	.db	'TaskType',0,4,183,1,29
	.dw	49
	.db	7
	.db	'TaskStateType',0,4,189,1,29
	.dw	49
	.db	7
	.db	'TaskPriorityType',0,4,195,1,29
	.dw	49
	.db	7
	.db	'ResourceType',0,4,198,1,29
	.dw	49
	.db	7
	.db	'EventMaskType',0,4,201,1,30
	.dw	133
	.db	7
	.db	'AppModeType',0,4,207,1,28
	.dw	49
	.db	7
	.db	'OsStateType',0,4,210,1,28
	.dw	49
	.db	7
	.db	'TickType',0,4,214,1,30
	.dw	133
	.db	7
	.db	'AlarmBaseType',0,4,220,1,32
	.dw	1094
	.db	7
	.db	'AlarmType',0,4,226,1,28
	.dw	49
	.db	3
	.db	'Os_InernalResourceDynamic_s',0,9,66,8,2,4
	.db	'TakenTaskPriority',0
	.dw	49
	.db	1,2,35,0,4
	.db	'TakenFlag',0
	.dw	49
	.db	1,2,35,1,0,7
	.db	'Os_InernalResourceDynamic',0,9,55,44
	.dw	1688
	.db	8
	.dw	49
	.db	5
	.dw	1688
	.db	3
	.db	'Os_InteranlResource_s',0,9,79,8,8,4
	.db	'CeilingPriority',0
	.dw	1802
	.db	1,2,35,0,4
	.db	'InternalResourceDynamics',0
	.dw	1807
	.db	4,2,35,4,0,7
	.db	'Os_InteranlResource',0,9,57,38
	.dw	1812
	.db	8
	.dw	49
	.db	8
	.dw	49
	.db	5
	.dw	.L246-.L77
	.db	3
	.db	'Os_ResourceDynamic_s',0,9,105,8,8,4
	.db	'OwnerTaskPriority',0
	.dw	49
	.db	1,2,35,0,4
	.db	'OwnerTaskID',0
	.dw	49
	.db	1,2,35,1,4
	.db	'LinkedResource',0
	.dw	1937
	.db	4,2,35,4,0,5
	.dw	1942
.L246:
	.db	3
	.db	'Os_Resource_s',0,9,92,8,8,4
	.db	'CeilingPriority',0
	.dw	1927
	.db	1,2,35,0,4
	.db	'ResourceID',0
	.dw	1932
	.db	1,2,35,1,4
	.db	'ResourceDynamics',0
	.dw	2041
	.db	4,2,35,4,0,7
	.db	'Os_Resource',0,9,59,30
	.dw	2046
	.db	7
	.db	'Os_ResourceDynamic',0,9,61,37
	.dw	1942
	.db	5
	.dw	133
	.db	7
	.db	'StackPtrType',0,10,143,1,30
	.dw	2184
	.db	7
	.db	'StackSizeType',0,10,145,1,31
	.dw	133
	.db	7
	.db	'TaskActivationCounterType',0,10,147,1,30
	.dw	49
	.db	7
	.db	'QueueIndexType',0,10,149,1,30
	.dw	49
	.db	7
	.db	'EntryFunctionPtrType',0,10,151,1,9
	.dw	243
	.db	3
	.db	'TaskFlagsType_s',0,10,172,1,8,2,4
	.db	'Type',0
	.dw	49
	.db	1,2,35,0,4
	.db	'TaskSchedulingPolicy',0
	.dw	49
	.db	1,2,35,1,0,7
	.db	'TaskFlagsType',0,10,155,1,32
	.dw	2323
	.db	3
	.db	'TaskStackType_s',0,10,243,1,8,12,4
	.db	'StackBase',0
	.dw	2189
	.db	4,2,35,0,4
	.db	'CurrentStackPtr',0
	.dw	2189
	.db	4,2,35,4,4
	.db	'StackSize',0
	.dw	133
	.db	4,2,35,8,0,7
	.db	'TaskStackType',0,10,157,1,32
	.dw	2413
	.db	5
	.dw	133
	.db	5
	.dw	1239
	.db	3
	.db	'Os_TaskDynamic_s',0,10,214,1,8,24,4
	.db	'Context',0
	.dw	2527
	.db	4,2,35,0,4
	.db	'Resources',0
	.dw	1937
	.db	4,2,35,4,4
	.db	'PriorityQueueIndex',0
	.dw	49
	.db	1,2,35,8,4
	.db	'EventsSet',0
	.dw	133
	.db	4,2,35,12,4
	.db	'EventsWaiting',0
	.dw	133
	.db	4,2,35,16,4
	.db	'TaskCurrentPriority',0
	.dw	49
	.db	1,2,35,20,4
	.db	'TaskState',0
	.dw	49
	.db	1,2,35,21,4
	.db	'PendingActivationRequests',0
	.dw	49
	.db	1,2,35,22,0,7
	.db	'Os_TaskDynamic',0,10,159,1,33
	.dw	2532
	.db	8
	.dw	49
	.db	8
	.dw	49
	.db	8
	.dw	49
	.db	8
	.dw	49
	.db	5
	.dw	2323
	.db	5
	.dw	2413
	.db	8
	.dw	2293
	.db	5
	.dw	1812
	.db	5
	.dw	2532
	.db	3
	.db	'Os_Task_s',0,10,186,1,8,28,4
	.db	'TaskStaticPriority',0
	.dw	2769
	.db	1,2,35,0,4
	.db	'TaskID',0
	.dw	2774
	.db	1,2,35,1,4
	.db	'ApplicationMode',0
	.dw	2779
	.db	1,2,35,2,4
	.db	'NumOfActivationRequests',0
	.dw	2784
	.db	1,2,35,3,4
	.db	'TaskFlags',0
	.dw	2789
	.db	4,2,35,4,4
	.db	'TaskStack',0
	.dw	2794
	.db	4,2,35,8,4
	.db	'EntryPoint',0
	.dw	2799
	.db	4,2,35,12,4
	.db	'InternalResource',0
	.dw	2804
	.db	4,2,35,16,4
	.db	'TaskDynamics',0
	.dw	2809
	.db	4,2,35,20,4
	.db	'EventsOwned',0
	.dw	133
	.db	4,2,35,24,0,7
	.db	'Os_Task',0,10,161,1,26
	.dw	2814
	.db	5
	.dw	240
	.db	3
	.db	'Os_CpuLoad_s',0,10,155,2,8,8,4
	.db	'IdleTime',0
	.dw	133
	.db	4,2,35,0,4
	.db	'CurrentCpuLoad',0
	.dw	49
	.db	1,2,35,4,4
	.db	'PeakCpuLoad',0
	.dw	49
	.db	1,2,35,5,0,7
	.db	'Os_CpuLoad',0,10,165,1,29
	.dw	3082
	.db	7
	.db	'Os_Counter',0,2,42,29
	.dw	416
	.db	7
	.db	'Os_Alarm',0,1,73,45
	.dw	646
	.db	7
	.db	'Os_AlarmAction',0,1,76,45
	.dw	281
	.db	7
	.db	'Os_AlarmActivateTask',0,1,79,41
	.dw	66
	.db	7
	.db	'Os_AlarmSetEvent',0,1,82,38
	.dw	149
	.db	15,4
	.dw	917
	.db	16,0,0,17
	.db	'ActiveAlarmsHead',0,11,46,18
	.dw	3298
	.db	1,1,15,72
	.dw	646
	.db	16,1,0,17
	.db	'Alarms',0,11,52,17
	.dw	3334
	.db	1,1,7
	.db	'QueueSize',0,12,183,1,29
	.dw	49
	.db	7
	.db	'QueueIndex',0,12,186,1,29
	.dw	49
	.db	0
	.endsec	; End of section

	.section	.debug_abbrev
.L78:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,19,1,3,8,58,15,59,15,57,15
	.db	11,15,0,0,4,13,0,3,8,73,19,11,15,56,9,0,0,5,15,0,73,19,0,0,6,21,0,54,15,39,12,0,0,7,22,0,3,8,58,15,59
	.db	15,57,15,73,19,0,0,8,38,0,73,19,0,0,9,23,1,3,8,58,15,59,15,57,15,11,15,0,0,10,46,1,3,8,58,15,59,15,57
	.db	15,73,19,54,15,39,12,63,12,60,12,0,0,11,5,0,3,8,58,15,59,15,57,15,73,19,0,0,12,46,0,3,8,58,15,59,15,57
	.db	15,54,15,63,12,60,12,0,0,13,21,0,54,15,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,1,1,11,15,73,19,0,0
	.db	16,33,0,47,15,0,0,17,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.endsec	; End of section

	.section	.debug_line
.L79:
	.dw	.L248-.L247
.L247:
	.dh	3
	.dw	.L250-.L249
.L249:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\include\\Internal\\Os_kernel_alarm.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_counter.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_api.h',0,0,0,0
	.db	'..\\include\\External\\Os_Types.h',0,0,0,0
	.db	'../src/kernel/Alarms.c',0,0,0,0
	.db	'..\\Port\\Cortex-M4\\inc\\Os_kernel_cm4.h',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Platform_Types.h',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Std_Types.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_resource.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_task.h',0,0,0,0
	.db	'..\\generate\\Os_Int_Cfg.h',0,0,0,0
	.db	'..\\include\\Internal\\queue.h',0,0,0,0,0
.L250:
.L248:
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_AlarmInsert')
.L80:
	.dw	200
	.dh	3
	.dw	.L81
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L83,.L82
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_AlarmInsert',0,1,249,3,1,1,1,1
	.dw	.L69,.L85,.L68
	.db	4
	.db	'Head',0,1,250,3,41
	.dw	.L134,.L135
	.db	4
	.db	'NewAlarm',0,1,251,3,39
	.dw	.L136,.L137
	.db	5
	.dw	.L69,.L85
	.db	6
	.db	'CurrentAlarm',0,1,255,3,5
	.dw	.L136,.L138
	.db	6
	.db	'CurrentCounterTicks',0,1,130,4,5
	.dw	.L139,.L140
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_AlarmInsert')
.L81:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_AlarmInsert')
.L82:
	.dw	.L252-.L251
.L251:
	.dh	3
	.dw	.L254-.L253
.L253:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L254:
	.db	5,1,7,0,5,2
	.dw	.L69
	.db	3,248,3,1,5,35,9
	.dh	.L230-.L69
	.db	3,9,1,5,54,9
	.dh	.L255-.L230
	.db	1,5,21,9
	.dh	.L232-.L255
	.db	3,3,1,5,9,9
	.dh	.L234-.L232
	.db	1,5,5,9
	.dh	.L256-.L234
	.db	1,5,25,9
	.dh	.L257-.L256
	.db	3,2,1,5,52,9
	.dh	.L17-.L257
	.db	3,3,1,5,22,9
	.dh	.L258-.L17
	.db	1,5,14,9
	.dh	.L259-.L258
	.db	1,5,104,9
	.dh	.L260-.L259
	.db	1,5,38,9
	.dh	.L261-.L260
	.db	3,2,1,5,14,9
	.dh	.L19-.L261
	.db	3,5,1,5,105,9
	.dh	.L262-.L19
	.db	1,5,31,9
	.dh	.L21-.L262
	.db	3,2,1,5,48,9
	.dh	.L263-.L21
	.db	3,1,1,5,15,9
	.dh	.L18-.L263
	.db	3,1,1,5,38,9
	.dh	.L264-.L18
	.db	3,126,1,5,40,9
	.dh	.L27-.L264
	.db	3,16,1,5,41,9
	.dh	.L51-.L27
	.db	3,122,1,5,17,9
	.dh	.L265-.L51
	.db	1,5,16,9
	.dh	.L266-.L265
	.db	1,5,43,9
	.dh	.L267-.L266
	.db	3,1,1,5,18,9
	.dh	.L268-.L267
	.db	1,5,63,9
	.dh	.L269-.L268
	.db	3,1,1,5,18,9
	.dh	.L29-.L269
	.db	3,1,1,5,46,9
	.dh	.L270-.L29
	.db	3,1,1,5,31,9
	.dh	.L28-.L270
	.db	3,6,1,5,25,9
	.dh	.L271-.L28
	.db	3,3,1,5,9,9
	.dh	.L233-.L271
	.db	1,5,52,7,9
	.dh	.L272-.L233
	.db	3,2,1,5,35,9
	.dh	.L31-.L272
	.db	3,3,1,9
	.dh	.L273-.L31
	.db	3,1,1,5,1,9
	.dh	.L24-.L273
	.db	3,2,1,9
	.dh	.L85-.L24
	.db	0,1,1
.L252:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_AlarmInsert')
.L83:
	.dw	-1,.L84,0,.L85-.L84,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_AlarmRemoveHead')
.L86:
	.dw	150
	.dh	3
	.dw	.L87
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L89,.L88
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_AlarmRemoveHead',0,1,188,4,1,1,1,1
	.dw	.L71,.L91,.L70
	.db	4
	.db	'Head',0,1,189,4,41
	.dw	.L134,.L141
	.db	5
	.dw	.L71,.L91
	.db	6
	.db	'AlarmToRemove',0,1,192,4,5
	.dw	.L136,.L142
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_AlarmRemoveHead')
.L87:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_AlarmRemoveHead')
.L88:
	.dw	.L275-.L274
.L274:
	.dh	3
	.dw	.L277-.L276
.L276:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L277:
	.db	5,21,7,0,5,2
	.dw	.L71
	.db	3,191,4,1,5,9,9
	.dh	.L235-.L71
	.db	3,3,1,5,5,9
	.dh	.L278-.L235
	.db	1,5,30,9
	.dh	.L279-.L278
	.db	3,3,1,5,15,9
	.dh	.L280-.L279
	.db	1,5,9,9
	.dh	.L281-.L280
	.db	3,1,1,5,38,9
	.dh	.L282-.L281
	.db	3,2,1,5,40,9
	.dh	.L33-.L282
	.db	3,4,1,5,36,9
	.dh	.L283-.L33
	.db	3,1,1,5,1,9
	.dh	.L32-.L283
	.db	3,2,1,7,9
	.dh	.L91-.L32
	.db	0,1,1
.L275:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_AlarmRemoveHead')
.L89:
	.dw	-1,.L90,0,.L91-.L90,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_AlarmRemove')
.L92:
	.dw	145
	.dh	3
	.dw	.L93
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L95,.L94
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_AlarmRemove',0,1,220,4,1,1,1,1
	.dw	.L73,.L97,.L72
	.db	4
	.db	'Head',0,1,221,4,41
	.dw	.L134,.L143
	.db	4
	.db	'AlarmToRemove',0,1,222,4,39
	.dw	.L136,.L144
	.db	5
	.dw	.L73,.L97
	.db	0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_AlarmRemove')
.L93:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_AlarmRemove')
.L94:
	.dw	.L285-.L284
.L284:
	.dh	3
	.dw	.L287-.L286
.L286:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L287:
	.db	5,9,7,0,5,2
	.dw	.L73
	.db	3,223,4,1,5,5,9
	.dh	.L288-.L73
	.db	1,5,26,9
	.dh	.L34-.L288
	.db	3,4,1,5,14,9
	.dh	.L289-.L34
	.db	1,5,10,9
	.dh	.L290-.L289
	.db	1,5,34,9
	.dh	.L36-.L290
	.db	3,9,1,5,9,9
	.dh	.L291-.L36
	.db	3,126,1,5,19,9
	.dh	.L292-.L291
	.db	3,2,1,5,17,9
	.dh	.L293-.L292
	.db	3,1,1,5,13,9
	.dh	.L236-.L293
	.db	1,5,42,9
	.dh	.L294-.L236
	.db	3,2,1,5,13,9
	.dh	.L295-.L294
	.db	3,126,1,5,17,9
	.dh	.L38-.L295
	.db	3,8,1,5,13,9
	.dh	.L237-.L38
	.db	1,5,76,9
	.dh	.L296-.L237
	.db	3,2,1,5,61,9
	.dh	.L297-.L296
	.db	1,5,42,9
	.dh	.L41-.L297
	.db	3,4,1,5,17,9
	.dh	.L298-.L41
	.db	1,5,13,9
	.dh	.L299-.L298
	.db	1,5,76,9
	.dh	.L300-.L299
	.db	3,2,1,5,61,9
	.dh	.L301-.L300
	.db	1,5,42,9
	.dh	.L52-.L301
	.db	3,5,1,5,40,9
	.dh	.L302-.L52
	.db	1,5,36,9
	.dh	.L303-.L302
	.db	3,1,1,5,1,9
	.dh	.L35-.L303
	.db	3,2,1,7,9
	.dh	.L97-.L35
	.db	0,1,1
.L285:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_AlarmRemove')
.L95:
	.dw	-1,.L96,0,.L97-.L96,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_AlarmFireAction')
.L98:
	.dw	153
	.dh	3
	.dw	.L99
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L101,.L100
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_AlarmFireAction',0,1,142,5,1,1,1,1
	.dw	.L75,.L103,.L74
	.db	4
	.db	'Alarm',0,1,143,5,46
	.dw	.L136,.L145
	.db	5
	.dw	.L75,.L103
	.db	6
	.db	'AlarmActionType',0,1,147,5,5
	.dw	.L146,.L147
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_AlarmFireAction')
.L99:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_AlarmFireAction')
.L100:
	.dw	.L305-.L304
.L304:
	.dh	3
	.dw	.L307-.L306
.L306:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L307:
	.db	5,1,7,0,5,2
	.dw	.L75
	.db	3,141,5,1,5,28,9
	.dh	.L238-.L75
	.db	3,5,1,5,5,9
	.dh	.L240-.L238
	.db	3,3,1,7,9
	.dh	.L308-.L240
	.db	1,5,9,9
	.dh	.L309-.L308
	.db	3,15,1,5,45,7,9
	.dh	.L43-.L309
	.db	3,117,1,5,65,9
	.dh	.L239-.L43
	.db	1,5,9,9
	.dh	.L241-.L239
	.db	3,1,1,5,107,7,9
	.dh	.L44-.L241
	.db	3,3,1,5,61,9
	.dh	.L243-.L44
	.db	1,5,127,9
	.dh	.L242-.L243
	.db	1,5,9,9
	.dh	.L310-.L242
	.db	3,1,1,5,29,7,9
	.dh	.L45-.L310
	.db	3,3,1,5,49,9
	.dh	.L311-.L45
	.db	1,5,1,9
	.dh	.L47-.L311
	.db	3,5,1,7,9
	.dh	.L103-.L47
	.db	0,1,1
.L305:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_AlarmFireAction')
.L101:
	.dw	-1,.L102,0,.L103-.L102,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_CancelAlarm')
.L104:
	.dw	204
	.dh	3
	.dw	.L105
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L107,.L106
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_CancelAlarm',0,1,188,3,1
	.dw	.L146
	.db	1,1,1
	.dw	.L67,.L148,.L66
	.db	4
	.db	'AlarmID',0,1,189,3,33
	.dw	.L149,.L150
	.db	5
	.dw	.L67,.L148
	.db	6
	.db	'ErrorState',0,1,194,3,5
	.dw	.L146,.L151
	.db	6
	.db	'Alarm',0,1,199,3,5
	.dw	.L136,.L152
	.db	6
	.db	'ActiveAlarmsHeadIndex',0,1,202,3,5
	.dw	.L146,.L153
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_CancelAlarm')
.L105:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_CancelAlarm')
.L106:
	.dw	.L313-.L312
.L312:
	.dh	3
	.dw	.L315-.L314
.L314:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L315:
	.db	5,1,7,0,5,2
	.dw	.L67
	.db	3,187,3,1,5,18,9
	.dh	.L224-.L67
	.db	3,6,1,5,24,9
	.dh	.L226-.L224
	.db	3,22,1,5,18,9
	.dh	.L316-.L226
	.db	1,5,24,9
	.dh	.L317-.L316
	.db	1,5,14,9
	.dh	.L227-.L317
	.db	3,2,1,5,5,9
	.dh	.L225-.L227
	.db	1,5,22,7,9
	.dh	.L318-.L225
	.db	3,2,1,5,33,9
	.dh	.L319-.L318
	.db	1,5,38,9
	.dh	.L14-.L319
	.db	3,5,1,5,57,9
	.dh	.L320-.L14
	.db	1,5,31,9
	.dh	.L228-.L320
	.db	3,3,1,5,29,9
	.dh	.L321-.L228
	.db	1,5,25,9
	.dh	.L322-.L321
	.db	3,3,1,5,41,9
	.dh	.L323-.L322
	.db	1,5,66,9
	.dh	.L324-.L323
	.db	1,5,5,9
	.dh	.L15-.L324
	.db	3,4,1,5,1,9
	.dh	.L229-.L15
	.db	3,1,1,7,9
	.dh	.L109-.L229
	.db	0,1,1
.L313:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_CancelAlarm')
.L107:
	.dw	-1,.L108,0,.L109-.L108,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_SetAbsAlarm')
.L110:
	.dw	242
	.dh	3
	.dw	.L111
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L113,.L112
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_SetAbsAlarm',0,1,231,2,1
	.dw	.L146
	.db	1,1,1
	.dw	.L65,.L154,.L64
	.db	4
	.db	'AlarmID',0,1,232,2,33
	.dw	.L155,.L156
	.db	4
	.db	'start',0,1,233,2,32
	.dw	.L157,.L158
	.db	4
	.db	'cycle',0,1,234,2,32
	.dw	.L159,.L160
	.db	5
	.dw	.L65,.L154
	.db	6
	.db	'ErrorState',0,1,238,2,5
	.dw	.L146,.L161
	.db	6
	.db	'Alarm',0,1,242,2,5
	.dw	.L136,.L162
	.db	6
	.db	'ActiveAlarmsHeadIndex',0,1,245,2,5
	.dw	.L146,.L163
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_SetAbsAlarm')
.L111:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_SetAbsAlarm')
.L112:
	.dw	.L326-.L325
.L325:
	.dh	3
	.dw	.L328-.L327
.L327:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L328:
	.db	5,1,7,0,5,2
	.dw	.L65
	.db	3,230,2,1,5,18,9
	.dh	.L216-.L65
	.db	3,7,1,5,24,9
	.dh	.L220-.L216
	.db	3,28,1,5,18,9
	.dh	.L329-.L220
	.db	1,5,24,9
	.dh	.L330-.L329
	.db	1,5,14,9
	.dh	.L221-.L330
	.db	3,2,1,5,5,9
	.dh	.L217-.L221
	.db	1,5,38,7,9
	.dh	.L331-.L217
	.db	3,3,1,5,57,9
	.dh	.L332-.L331
	.db	1,5,34,9
	.dh	.L222-.L332
	.db	3,2,1,5,33,9
	.dh	.L333-.L222
	.db	3,2,1,5,31,9
	.dh	.L334-.L333
	.db	3,2,1,5,29,9
	.dh	.L335-.L334
	.db	1,5,25,9
	.dh	.L336-.L335
	.db	3,3,1,5,41,9
	.dh	.L337-.L336
	.db	1,5,66,9
	.dh	.L338-.L337
	.db	1,5,83,9
	.dh	.L218-.L338
	.db	3,119,1,5,22,9
	.dh	.L11-.L218
	.db	3,13,1,5,5,9
	.dh	.L12-.L11
	.db	3,4,1,5,1,9
	.dh	.L223-.L12
	.db	3,1,1,7,9
	.dh	.L115-.L223
	.db	0,1,1
.L326:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_SetAbsAlarm')
.L113:
	.dw	-1,.L114,0,.L115-.L114,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_SetRelAlarm')
.L116:
	.dw	279
	.dh	3
	.dw	.L117
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L119,.L118
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_SetRelAlarm',0,1,250,1,1
	.dw	.L146
	.db	1,1,1
	.dw	.L63,.L164,.L62
	.db	4
	.db	'AlarmID',0,1,251,1,33
	.dw	.L165,.L166
	.db	4
	.db	'increment',0,1,252,1,32
	.dw	.L167,.L168
	.db	4
	.db	'cycle',0,1,253,1,32
	.dw	.L169,.L170
	.db	5
	.dw	.L63,.L164
	.db	6
	.db	'ErrorState',0,1,130,2,5
	.dw	.L146,.L171
	.db	6
	.db	'CurrentCounterTicks',0,1,136,2,5
	.dw	.L139,.L172
	.db	6
	.db	'Alarm',0,1,140,2,5
	.dw	.L136,.L173
	.db	6
	.db	'ActiveAlarmsHeadIndex',0,1,143,2,5
	.dw	.L146,.L174
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_SetRelAlarm')
.L117:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_SetRelAlarm')
.L118:
	.dw	.L340-.L339
.L339:
	.dh	3
	.dw	.L342-.L341
.L341:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L342:
	.db	5,1,7,0,5,2
	.dw	.L63
	.db	3,249,1,1,5,18,9
	.dh	.L207-.L63
	.db	3,8,1,5,24,9
	.dh	.L208-.L207
	.db	3,34,1,5,18,9
	.dh	.L204-.L208
	.db	1,5,24,9
	.dh	.L203-.L204
	.db	1,5,14,9
	.dh	.L209-.L203
	.db	3,2,1,5,5,9
	.dh	.L202-.L209
	.db	1,5,38,7,9
	.dh	.L343-.L202
	.db	3,3,1,5,57,9
	.dh	.L344-.L343
	.db	1,5,55,9
	.dh	.L211-.L344
	.db	3,3,1,5,58,9
	.dh	.L212-.L211
	.db	3,3,1,5,98,9
	.dh	.L213-.L212
	.db	1,5,125,9
	.dh	.L345-.L213
	.db	1,5,71,9
	.dh	.L346-.L345
	.db	1,5,34,9
	.dh	.L347-.L346
	.db	1,5,33,9
	.dh	.L348-.L347
	.db	3,3,1,5,31,9
	.dh	.L349-.L348
	.db	3,3,1,5,29,9
	.dh	.L350-.L349
	.db	1,5,25,9
	.dh	.L351-.L350
	.db	3,3,1,5,41,9
	.dh	.L352-.L351
	.db	1,5,66,9
	.dh	.L353-.L352
	.db	1,5,83,9
	.dh	.L210-.L353
	.db	3,113,1,5,22,9
	.dh	.L8-.L210
	.db	3,19,1,5,5,9
	.dh	.L9-.L8
	.db	3,4,1,5,1,9
	.dh	.L215-.L9
	.db	3,1,1,7,9
	.dh	.L121-.L215
	.db	0,1,1
.L340:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_SetRelAlarm')
.L119:
	.dw	-1,.L120,0,.L121-.L120,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_GetAlarm')
.L122:
	.dw	217
	.dh	3
	.dw	.L123
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L125,.L124
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_GetAlarm',0,1,157,1,1
	.dw	.L146
	.db	1,1,1
	.dw	.L61,.L175,.L60
	.db	4
	.db	'AlarmID',0,1,158,1,33
	.dw	.L176,.L177
	.db	4
	.db	'Tick',0,1,159,1,46
	.dw	.L178,.L179
	.db	5
	.dw	.L61,.L175
	.db	6
	.db	'ErrorState',0,1,163,1,5
	.dw	.L146,.L180
	.db	6
	.db	'CurrentCounterTicks',0,1,168,1,5
	.dw	.L139,.L181
	.db	6
	.db	'Alarm',0,1,172,1,5
	.dw	.L136,.L182
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_GetAlarm')
.L123:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_GetAlarm')
.L124:
	.dw	.L355-.L354
.L354:
	.dh	3
	.dw	.L357-.L356
.L356:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L357:
	.db	5,1,7,0,5,2
	.dw	.L61
	.db	3,156,1,1,5,18,9
	.dh	.L197-.L61
	.db	3,6,1,5,19,9
	.dh	.L198-.L197
	.db	3,21,1,5,13,9
	.dh	.L196-.L198
	.db	1,5,19,9
	.dh	.L358-.L196
	.db	1,5,28,9
	.dh	.L195-.L358
	.db	1,5,9,9
	.dh	.L359-.L195
	.db	1,5,26,7,9
	.dh	.L360-.L359
	.db	3,2,1,5,37,9
	.dh	.L361-.L360
	.db	1,5,40,9
	.dh	.L3-.L361
	.db	3,9,1,5,59,9
	.dh	.L362-.L3
	.db	1,5,22,9
	.dh	.L199-.L362
	.db	3,2,1,5,13,9
	.dh	.L363-.L199
	.db	1,5,50,9
	.dh	.L364-.L363
	.db	3,3,1,5,71,9
	.dh	.L365-.L364
	.db	1,5,78,9
	.dh	.L5-.L365
	.db	3,5,1,5,105,9
	.dh	.L366-.L5
	.db	1,5,51,9
	.dh	.L367-.L366
	.db	1,5,128,1,9
	.dh	.L368-.L367
	.db	1,5,23,9
	.dh	.L6-.L368
	.db	1,5,5,9
	.dh	.L4-.L6
	.db	3,5,1,5,1,9
	.dh	.L200-.L4
	.db	3,1,1,9
	.dh	.L127-.L200
	.db	0,1,1
.L355:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_GetAlarm')
.L125:
	.dw	-1,.L126,0,.L127-.L126,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_GetAlarmBase')
.L128:
	.dw	183
	.dh	3
	.dw	.L129
	.db	4,1
	.db	'../src/kernel/Alarms.c',0
	.dw	.L244,.L245
	.db	12,1
	.dw	.L131,.L130
	.db	2
	.dw	.L76
	.db	3
	.db	'OS_GetAlarmBase',0,1,91,1
	.dw	.L146
	.db	1,1,1
	.dw	.L59,.L183,.L58
	.db	4
	.db	'AlarmID',0,1,92,33
	.dw	.L184,.L185
	.db	4
	.db	'Info',0,1,93,51
	.dw	.L186,.L187
	.db	5
	.dw	.L59,.L183
	.db	6
	.db	'ErrorState',0,1,97,5
	.dw	.L146,.L188
	.db	6
	.db	'Alarm',0,1,101,5
	.dw	.L136,.L189
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_GetAlarmBase')
.L129:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_GetAlarmBase')
.L130:
	.dw	.L370-.L369
.L369:
	.dh	3
	.dw	.L372-.L371
.L371:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/Alarms.c',0,0,0,0,0
.L372:
	.db	5,24,7,0,5,2
	.dw	.L59
	.db	3,241,0,1,5,18,9
	.dh	.L373-.L59
	.db	1,5,24,9
	.dh	.L374-.L373
	.db	1,5,38,9
	.dh	.L190-.L374
	.db	3,3,1,5,57,9
	.dh	.L375-.L190
	.db	1,5,31,9
	.dh	.L376-.L375
	.db	1,5,35,9
	.dh	.L377-.L376
	.db	3,3,1,5,54,9
	.dh	.L378-.L377
	.db	1,5,28,9
	.dh	.L379-.L378
	.db	1,5,31,9
	.dh	.L380-.L379
	.db	3,3,1,5,50,9
	.dh	.L191-.L380
	.db	1,5,24,9
	.dh	.L381-.L191
	.db	1,5,18,9
	.dh	.L382-.L381
	.db	3,102,1,5,1,9
	.dh	.L192-.L382
	.db	3,31,1,7,9
	.dh	.L133-.L192
	.db	0,1,1
.L370:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_GetAlarmBase')
.L131:
	.dw	-1,.L132,0,.L133-.L132,0,0
	.endsec	; End of section

	.section	.debug_str
.L245:
	.db	'D:\\Embedded Systems\\Graduation Project\\Implementation-of-an-AUTOSAR-compliant-Operating-System-for-Hardware-Security-Module\\Software\\OS\\Makefile\\',0
.L244:
	.db	'TASKING VX-toolset for ARM Cortex: C compiler',0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_AlarmFireAction')
.L145:
	.dw	-1,.L75,0,.L239-.L75
	.dh	1
	.db	80
	.dw	.L44-.L75,.L242-.L75
	.dh	1
	.db	80
	.dw	.L45-.L75,.L47-.L75
	.dh	1
	.db	80
	.dw	0,0
.L147:
	.dw	-1,.L75,.L240-.L75,.L241-.L75
	.dh	1
	.db	81
	.dw	.L44-.L75,.L243-.L75
	.dh	1
	.db	81
	.dw	.L45-.L75,.L47-.L75
	.dh	1
	.db	81
	.dw	0,0
.L74:
	.dw	-1,.L75,0,.L238-.L75
	.dh	2
	.db	125,0
	.dw	.L238-.L75,.L43-.L75
	.dh	2
	.db	125,8
	.dw	.L43-.L75,.L43-.L75
	.dh	2
	.db	125,0
	.dw	.L43-.L75,.L44-.L75
	.dh	2
	.db	125,8
	.dw	.L44-.L75,.L44-.L75
	.dh	2
	.db	125,0
	.dw	.L44-.L75,.L45-.L75
	.dh	2
	.db	125,8
	.dw	.L45-.L75,.L45-.L75
	.dh	2
	.db	125,0
	.dw	.L45-.L75,.L103-.L75
	.dh	2
	.db	125,8
	.dw	.L103-.L75,.L103-.L75
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_AlarmInsert')
.L138:
	.dw	-1,.L69,.L234-.L69,.L85-.L69
	.dh	1
	.db	82
	.dw	0,0
.L140:
	.dw	-1,.L69,.L232-.L69,.L233-.L69
	.dh	1
	.db	83
	.dw	0,0
.L135:
	.dw	-1,.L69,0,.L27-.L69
	.dh	1
	.db	80
	.dw	0,0
.L137:
	.dw	-1,.L69,0,.L85-.L69
	.dh	1
	.db	81
	.dw	0,0
.L68:
	.dw	-1,.L69,0,.L230-.L69
	.dh	2
	.db	125,0
	.dw	.L230-.L69,.L231-.L69
	.dh	2
	.db	125,8
	.dw	.L231-.L69,.L85-.L69
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_AlarmRemove')
.L144:
	.dw	-1,.L73,0,.L97-.L73
	.dh	1
	.db	81
	.dw	0,0
.L143:
	.dw	-1,.L73,0,.L236-.L73
	.dh	1
	.db	80
	.dw	.L38-.L73,.L237-.L73
	.dh	1
	.db	80
	.dw	0,0
.L72:
	.dw	-1,.L73,0,.L97-.L73
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_AlarmRemoveHead')
.L142:
	.dw	-1,.L71,.L235-.L71,.L91-.L71
	.dh	1
	.db	81
	.dw	0,0
.L141:
	.dw	-1,.L71,0,.L91-.L71
	.dh	1
	.db	80
	.dw	0,0
.L70:
	.dw	-1,.L71,0,.L91-.L71
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_CancelAlarm')
.L153:
	.dw	-1,.L67,.L228-.L67,.L15-.L67
	.dh	1
	.db	82
	.dw	0,0
.L152:
	.dw	-1,.L67,.L227-.L67,.L15-.L67
	.dh	1
	.db	81
	.dw	0,0
.L150:
	.dw	-1,.L67,0,.L225-.L67
	.dh	1
	.db	80
	.dw	0,0
.L151:
	.dw	-1,.L67,.L226-.L67,.L148-.L67
	.dh	1
	.db	84
	.dw	.L229-.L67,.L148-.L67
	.dh	1
	.db	80
	.dw	0,0
.L66:
	.dw	-1,.L67,0,.L224-.L67
	.dh	2
	.db	125,0
	.dw	.L224-.L67,.L148-.L67
	.dh	2
	.db	125,8
	.dw	.L148-.L67,.L148-.L67
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_GetAlarm')
.L182:
	.dw	0,0
.L177:
	.dw	-1,.L61,0,.L195-.L61
	.dh	1
	.db	80
	.dw	0,0
.L181:
	.dw	-1,.L61,.L199-.L61,.L4-.L61
	.dh	1
	.db	82
	.dw	0,0
.L180:
	.dw	-1,.L61,.L198-.L61,.L194-.L61
	.dh	1
	.db	84
	.dw	.L200-.L61,.L175-.L61
	.dh	1
	.db	80
	.dw	0,0
.L60:
	.dw	-1,.L61,0,.L193-.L61
	.dh	2
	.db	125,0
	.dw	.L193-.L61,.L194-.L61
	.dh	2
	.db	125,4
	.dw	.L194-.L61,.L175-.L61
	.dh	2
	.db	125,0
	.dw	0,0
.L179:
	.dw	-1,.L61,0,.L196-.L61
	.dh	1
	.db	81
	.dw	.L197-.L61,.L175-.L61
	.dh	1
	.db	83
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_GetAlarmBase')
.L189:
	.dw	-1,.L59,.L190-.L59,.L191-.L59
	.dh	1
	.db	80
	.dw	0,0
.L185:
	.dw	-1,.L59,0,.L190-.L59
	.dh	1
	.db	80
	.dw	0,0
.L188:
	.dw	-1,.L59,.L192-.L59,.L183-.L59
	.dh	1
	.db	80
	.dw	0,0
.L187:
	.dw	-1,.L59,0,.L183-.L59
	.dh	1
	.db	81
	.dw	0,0
.L58:
	.dw	-1,.L59,0,.L183-.L59
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_SetAbsAlarm')
.L163:
	.dw	-1,.L65,.L222-.L65,.L11-.L65
	.dh	1
	.db	84
	.dw	0,0
.L162:
	.dw	-1,.L65,.L221-.L65,.L218-.L65
	.dh	1
	.db	83
	.dw	.L219-.L65,.L218-.L65
	.dh	1
	.db	81
	.dw	.L11-.L65,.L12-.L65
	.dh	1
	.db	83
	.dw	0,0
.L156:
	.dw	-1,.L65,0,.L217-.L65
	.dh	1
	.db	80
	.dw	0,0
.L161:
	.dw	-1,.L65,.L220-.L65,.L154-.L65
	.dh	1
	.db	85
	.dw	.L223-.L65,.L154-.L65
	.dh	1
	.db	80
	.dw	0,0
.L64:
	.dw	-1,.L65,0,.L216-.L65
	.dh	2
	.db	125,0
	.dw	.L216-.L65,.L154-.L65
	.dh	2
	.db	125,12
	.dw	.L154-.L65,.L154-.L65
	.dh	2
	.db	125,0
	.dw	0,0
.L160:
	.dw	-1,.L65,0,.L218-.L65
	.dh	1
	.db	82
	.dw	.L11-.L65,.L12-.L65
	.dh	1
	.db	82
	.dw	0,0
.L158:
	.dw	-1,.L65,0,.L219-.L65
	.dh	1
	.db	81
	.dw	.L11-.L65,.L12-.L65
	.dh	1
	.db	81
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_SetRelAlarm')
.L174:
	.dw	-1,.L63,.L211-.L63,.L8-.L63
	.dh	1
	.db	86
	.dw	0,0
.L173:
	.dw	-1,.L63,.L209-.L63,.L210-.L63
	.dh	1
	.db	82
	.dw	.L214-.L63,.L210-.L63
	.dh	1
	.db	81
	.dw	.L8-.L63,.L9-.L63
	.dh	1
	.db	82
	.dw	0,0
.L166:
	.dw	-1,.L63,0,.L202-.L63
	.dh	1
	.db	80
	.dw	0,0
.L172:
	.dw	-1,.L63,.L212-.L63,.L213-.L63
	.dh	1
	.db	81
	.dw	0,0
.L171:
	.dw	-1,.L63,.L208-.L63,.L164-.L63
	.dh	1
	.db	84
	.dw	.L215-.L63,.L164-.L63
	.dh	1
	.db	80
	.dw	0,0
.L62:
	.dw	-1,.L63,0,.L201-.L63
	.dh	2
	.db	125,0
	.dw	.L201-.L63,.L164-.L63
	.dh	2
	.db	125,16
	.dw	.L164-.L63,.L164-.L63
	.dh	2
	.db	125,0
	.dw	0,0
.L170:
	.dw	-1,.L63,0,.L203-.L63
	.dh	1
	.db	82
	.dw	.L207-.L63,.L164-.L63
	.dh	1
	.db	85
	.dw	0,0
.L168:
	.dw	-1,.L63,0,.L204-.L63
	.dh	1
	.db	81
	.dw	.L205-.L63,.L206-.L63
	.dh	1
	.db	83
	.dw	.L8-.L63,.L9-.L63
	.dh	1
	.db	83
	.dw	0,0
	.endsec	; End of section

	.section	.debug_frame
.L383:
	.dw	64
	.dw	-1
	.db	3,0,2,2,14,12,13,0,8,4,8,5,8,6,8,7,8,8,8,9,8,10,8,11,8,13,8,14,8,15,8,128,1,8,136,2,8,137,2,8,138,2,8
	.db	139,2,8,140,2,8,141,2,8,142,2,8,143,2,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_GetAlarmBase')
	.dw	36
	.dw	.L383,.L59,.L183-.L59
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_GetAlarm')
	.dw	64
	.dw	.L383,.L61,.L175-.L61
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L193-.L61)/2
	.db	19,2,22,13,3,19,125,4,17,4,126,4
	.dw	(.L194-.L193)/2
	.db	19,0,8,13,196,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_SetRelAlarm')
	.dw	76
	.dw	.L383,.L63,.L164-.L63
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L201-.L63)/2
	.db	19,8,22,13,3,19,125,16,17,14,126,17,6,124,17,5,122,17,4,120,4
	.dw	(.L164-.L201)/2
	.db	19,0,8,13,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_SetAbsAlarm')
	.dw	72
	.dw	.L383,.L65,.L154-.L65
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L216-.L65)/2
	.db	19,6,22,13,3,19,125,12,17,14,126,17,5,124,17,4,122,4
	.dw	(.L154-.L216)/2
	.db	19,0,8,13,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_CancelAlarm')
	.dw	68
	.dw	.L383,.L67,.L148-.L67
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L224-.L67)/2
	.db	19,4,22,13,3,19,125,8,17,14,126,17,4,124,4
	.dw	(.L148-.L224)/2
	.db	19,0,8,13,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_AlarmInsert')
	.dw	68
	.dw	.L383,.L69,.L85-.L69
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L230-.L69)/2
	.db	19,4,22,13,3,19,125,8,17,5,126,17,4,124,4
	.dw	(.L231-.L230)/2
	.db	19,0,8,13,197,196,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_AlarmRemoveHead')
	.dw	36
	.dw	.L383,.L71,.L91-.L71
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_AlarmRemove')
	.dw	36
	.dw	.L383,.L73,.L97-.L73
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_AlarmFireAction')
	.dw	96
	.dw	.L383,.L75,.L103-.L75
	.db	4
	.dw	(.L238-.L75)/2
	.db	19,4,22,13,3,19,125,8,17,14,126,17,4,124,4
	.dw	(.L43-.L238)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L44-.L43)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L45-.L44)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L103-.L45)/2
	.db	19,0,8,13,196,0
	.endsec	; End of section


; ../src/kernel/Alarms.c	   680  
; ../src/kernel/Alarms.c	   681  /***********************************************************************************/
; ../src/kernel/Alarms.c	   682  /*				    			 End Of File			         				   */
; ../src/kernel/Alarms.c	   682  /***********************************************************************************/

	; Module end
	.end
