	; Module start
	.compiler_version	"TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455235"
	.compiler_invocation	"carm --dep-file=../Executable/src/kernel/.ChainTask.o.d -CARMv7M -D__PROC_CORTEX_M3__ --iso=11 -I../../TC399x/HSM/ -I../../TC399x/HSM/Main -I../../TC399x/HSM/Ssw/inc -I../../TC399x/HSM/Reg -I../../TC399x/HSM/Mcal/Bridge/inc -I../../TC399x/HSM/Mcal/TRNG/inc -I../../TC399x/HSM/Mcal/NVIC/inc -I../../TC399x/HSM/Mcal/Timer/inc -I../../TC399x/HSM/Application/inc -I../../TC399x/HSM/Mcal/AES/inc -I../../TC399x/HSM/Mcal/CMAC/inc -I../../TC399x/HSM/Mcal/Hash/inc -I../../TC399x/HSM/Mcal/HMAC/inc -I../../AutoSar/BSW/static/MCAL/Infrastructure/Platform -I../include/External -I../include/Internal -I../include/memmap -I../generate -I../Port/Cortex-M4/inc -g2 --global-type-checking -t4 -O0 --make-target=../Executable/src/kernel/ChainTask.o --language=-gcc,-volatile,+strings,-kanji -O1 --source --error-limit=42 -o ..\\Executable\\src\\kernel\\ChainTask.src ../src/kernel/ChainTask.c"
	.compiler_name		"carm"
	;.ident 'TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455235'
	.source '../src/kernel/ChainTask.c'

	.section	.text ,cluster('$group_OS_ChainTask')
	.global	OS_ChainTask

; ../src/kernel/ChainTask.c	     1  /**
; ../src/kernel/ChainTask.c	     2   * @file              ChainTask.c
; ../src/kernel/ChainTask.c	     3   * @author            Shiry Ezzat
; ../src/kernel/ChainTask.c	     4   * @version           1.0.0
; ../src/kernel/ChainTask.c	     5   * @date              02-12-2023
; ../src/kernel/ChainTask.c	     6   * @platform          NA
; ../src/kernel/ChainTask.c	     7   * @variant           NA
; ../src/kernel/ChainTask.c	     8   * @vendor            CryptOS
; ../src/kernel/ChainTask.c	     9   * @specification     OSEK/VDX
; ../src/kernel/ChainTask.c	    10   * @brief             ChainTask API implementation
; ../src/kernel/ChainTask.c	    11   *
; ../src/kernel/ChainTask.c	    12   */
; ../src/kernel/ChainTask.c	    13  
; ../src/kernel/ChainTask.c	    14  /*------------------------- MISRA-C validations in C files -----------------------*/
; ../src/kernel/ChainTask.c	    15  
; ../src/kernel/ChainTask.c	    16  /**********************************************************************************/
; ../src/kernel/ChainTask.c	    17  /**                                   Include Headers                             **/
; ../src/kernel/ChainTask.c	    18  /**********************************************************************************/
; ../src/kernel/ChainTask.c	    19  #include <OS_kernel.h>
; ../src/kernel/ChainTask.c	    20  
; ../src/kernel/ChainTask.c	    21  
; ../src/kernel/ChainTask.c	    22  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    23  /*                                  Macros                                        */
; ../src/kernel/ChainTask.c	    24  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    25  /************************** Internal Module Specific Macros ********************************/
; ../src/kernel/ChainTask.c	    26  
; ../src/kernel/ChainTask.c	    27  /************************************************************************************/
; ../src/kernel/ChainTask.c	    28  /*                        Internal Type Definitions                                 */
; ../src/kernel/ChainTask.c	    29  /************************************************************************************/
; ../src/kernel/ChainTask.c	    30  /*********************** Internal Module Specific Types *****************************/
; ../src/kernel/ChainTask.c	    31  
; ../src/kernel/ChainTask.c	    32  /***************************************************************************************/
; ../src/kernel/ChainTask.c	    33  /*                            External Global Variables                                */
; ../src/kernel/ChainTask.c	    34  /***************************************************************************************/
; ../src/kernel/ChainTask.c	    35  
; ../src/kernel/ChainTask.c	    36  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    37  /*                              External Constants                                  */
; ../src/kernel/ChainTask.c	    38  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    39  
; ../src/kernel/ChainTask.c	    40  /***************************************************************************************/
; ../src/kernel/ChainTask.c	    41  /*                              Internal Global Variables                              */
; ../src/kernel/ChainTask.c	    42  /***************************************************************************************/
; ../src/kernel/ChainTask.c	    43  
; ../src/kernel/ChainTask.c	    44  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    45  /*                              Internal Constants                                  */
; ../src/kernel/ChainTask.c	    46  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    47  
; ../src/kernel/ChainTask.c	    48  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    49  /*                         External Function Declaration                            */
; ../src/kernel/ChainTask.c	    50  /***********************************************************************************/
; ../src/kernel/ChainTask.c	    51  /**
; ../src/kernel/ChainTask.c	    52   * @brief Activates the specified task after terminating the current task.
; ../src/kernel/ChainTask.c	    53   *
; ../src/kernel/ChainTask.c	    54   * This function causes the termination of the calling task and activates the succeeding task.
; ../src/kernel/ChainTask.c	    55   * It performs various checks and mappings for error codes.
; ../src/kernel/ChainTask.c	    56   *
; ../src/kernel/ChainTask.c	    57   * @service name    ChainTask
; ../src/kernel/ChainTask.c	    58   * @syntax          FUNC(StatusType, OS_CODE) ChainTask
; ../src/kernel/ChainTask.c	    59   *                  (
; ../src/kernel/ChainTask.c	    60   *                      CONST(TaskType, AUTOMATIC) TaskID
; ../src/kernel/ChainTask.c	    61   *                  );
; ../src/kernel/ChainTask.c	    62   * @service ID      -
; ../src/kernel/ChainTask.c	    63   * @sync/async      Synchronous
; ../src/kernel/ChainTask.c	    64   * @reentrancy      Reentrant
; ../src/kernel/ChainTask.c	    65   * @param[in]       TaskID      Reference to the sequential succeeding task to be activated.
; ../src/kernel/ChainTask.c	    66   * @param[out]      None
; ../src/kernel/ChainTask.c	    67   * @return          StatusType  Indicates the error status
; ../src/kernel/ChainTask.c	    68   *                  E_OK               Operation completed successfully
; ../src/kernel/ChainTask.c	    69   *                  E_OS_CALLEVEL      Called at interrupt level
; ../src/kernel/ChainTask.c	    70   *                  E_OS_ID            Invalid TaskID
; ../src/kernel/ChainTask.c	    71   *                  E_OS_RESOURCE      Task called while a resource is occupied
; ../src/kernel/ChainTask.c	    72   *                  E_OS_LIMIT         Too many task activations of TaskID
; ../src/kernel/ChainTask.c	    73   * @note            This function is a rescheduling point in Full-preemptive and non-preemptive scheduling.
; ../src/kernel/ChainTask.c	    74   * @warning         None
; ../src/kernel/ChainTask.c	    75   */
; ../src/kernel/ChainTask.c	    76  FUNC(StatusType, OS_CODE) OS_ChainTask
; Function OS_ChainTask
.L20:
	.thumb
	.align	4
OS_ChainTask:	.type	func

.L11:
	push	{r4,r5,r6,lr}
.L30:
	mov	r2,r0
.L32:

; ../src/kernel/ChainTask.c	    77  (
; ../src/kernel/ChainTask.c	    78  	CONST(TaskType, AUTOMATIC) TaskID
; ../src/kernel/ChainTask.c	    79  )
; ../src/kernel/ChainTask.c	    80  {
; ../src/kernel/ChainTask.c	    81  	VAR(StatusType, OS_VAR_INIT) RetStatus = E_OK;
	movs	r5,#0
.L34:

; ../src/kernel/ChainTask.c	    82  	VAR(TaskType, OS_CODE) CurrentRunningTaskID = Kernel.TaskRunning->TaskID;
; ../src/kernel/ChainTask.c	    83  	P2VAR(Os_Task, APPLICATION, OS_CODE) PtrToChainedTask = &Tasks[TaskID];
	movs	r1,#28
.L55:
	ldr	r3,.L9
.L56:
	mla	r6,r0,r1,r3
.L35:
	ldr	r4,.L9+4
.L57:
	ldr	r1,[r4,#4]
.L58:
	ldrb	r0,[r1,#1]
.L31:

; ../src/kernel/ChainTask.c	    84  	
; ../src/kernel/ChainTask.c	    85  #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
; ../src/kernel/ChainTask.c	    86  	/* [SWS_OS_00004]	
; ../src/kernel/ChainTask.c	    87  	In case of calling at interrupt level, E_OS_CALLEVEL is returned. */
; ../src/kernel/ChainTask.c	    88  	/* [SWS_OS_10160]
; ../src/kernel/ChainTask.c	    89  	If ChainTask is called at interrupt level, E_OS_CALLEVEL is returned.*/
; ../src/kernel/ChainTask.c	    90  	/* Check if called at interrupt level and RetStatus equals E_OK */
; ../src/kernel/ChainTask.c	    91  	if (OS_STATE_TASK != Kernel.OsState)
; ../src/kernel/ChainTask.c	    92  	{
; ../src/kernel/ChainTask.c	    93  		/* Task is called at interrupt level*/
; ../src/kernel/ChainTask.c	    94  		/* [OSEK_Hook_00015]
; ../src/kernel/ChainTask.c	    95  		The error hook routine (ErrorHook) is called if a system service returns a StatusType value
; ../src/kernel/ChainTask.c	    96  		not equal to E_OK, It is called before returning to the task level.*/
; ../src/kernel/ChainTask.c	    97  		/* Call (ErrorHook) with parameter E_OS_CALLEVEL */
; ../src/kernel/ChainTask.c	    98  
; ../src/kernel/ChainTask.c	    99  		/* return E_OS_CALLEVEL */
; ../src/kernel/ChainTask.c	   100  		RetStatus = E_OS_CALLEVEL;
; ../src/kernel/ChainTask.c	   101  	}
; ../src/kernel/ChainTask.c	   102  
; ../src/kernel/ChainTask.c	   103  	/* [SWS_OS_00005]
; ../src/kernel/ChainTask.c	   104  	If the ID is invalid, E_OS_ID is returned. */
; ../src/kernel/ChainTask.c	   105  	/* [SWS_OS_10161]
; ../src/kernel/ChainTask.c	   106  	ChainTask returns E_OS_ID in case the ID of the chained task is invalid in extended error mode.*/
; ../src/kernel/ChainTask.c	   107  	/* Check if the TaskID is valid and RetStatus equals E_OK */
; ../src/kernel/ChainTask.c	   108  	else if (TaskID > TASK_COUNT) // better implementation is to init INVALID_ID with the max number of tasks and check for INVALID_ID
; ../src/kernel/ChainTask.c	   109  	{
; ../src/kernel/ChainTask.c	   110  		/* TaskID is invalid*/
; ../src/kernel/ChainTask.c	   111  		/* [OSEK_Hook_00015]
; ../src/kernel/ChainTask.c	   112  		The error hook routine (ErrorHook) is called if a system service returns a StatusType value
; ../src/kernel/ChainTask.c	   113  		not equal to E_OK, It is called before returning to the task level.*/
; ../src/kernel/ChainTask.c	   114  		/* Call (ErrorHook) with parameter E_OS_ID */
; ../src/kernel/ChainTask.c	   115  
; ../src/kernel/ChainTask.c	   116  		/* return E_OS_ID */
; ../src/kernel/ChainTask.c	   117  		RetStatus = E_OS_ID;
; ../src/kernel/ChainTask.c	   118  	}
; ../src/kernel/ChainTask.c	   119  
; ../src/kernel/ChainTask.c	   120  	/* [SWS_OS_000010]
; ../src/kernel/ChainTask.c	   121  	If Task still occupies resources, E_OS_RESOURCE is returned.*/
; ../src/kernel/ChainTask.c	   122  	/* [SWS_OS_10162]		
; ../src/kernel/ChainTask.c	   123  	Calling task of ChainTask still occupies resources, E_OS_RESOURCE is returned in extended error mode. */
; ../src/kernel/ChainTask.c	   124  	/* Check if a resource is occupied and none of the previous errors are fired */
; ../src/kernel/ChainTask.c	   125  	else if ((NULL_PTR != Kernel.TaskRunning->TaskDynamics->Resources))
; ../src/kernel/ChainTask.c	   126  	{
; ../src/kernel/ChainTask.c	   127  		/* A resource is occupied */
; ../src/kernel/ChainTask.c	   128  		/* [OSEK_Hook_00015]
; ../src/kernel/ChainTask.c	   129  		The error hook routine (ErrorHook) is called if a system service returns a StatusType value
; ../src/kernel/ChainTask.c	   130  		not equal to E_OK, It is called before returning to the task level.*/
; ../src/kernel/ChainTask.c	   131  		/* Call (ErrorHook) with parameter E_OS_RESOURCE */
; ../src/kernel/ChainTask.c	   132  
; ../src/kernel/ChainTask.c	   133  		/* return E_OS_RESOURCE */
; ../src/kernel/ChainTask.c	   134  		RetStatus = E_OS_RESOURCE;
; ../src/kernel/ChainTask.c	   135  	}
; ../src/kernel/ChainTask.c	   136  	else
; ../src/kernel/ChainTask.c	   137  #endif /* #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED) */
; ../src/kernel/ChainTask.c	   138  	{
; ../src/kernel/ChainTask.c	   139  		/* [SWS_OS_000006]
; ../src/kernel/ChainTask.c	   140  		In case of too many task activations, E_OS_LIMIT is returned.*/
; ../src/kernel/ChainTask.c	   141  		/* [SWS_OS_10163]
; ../src/kernel/ChainTask.c	   142  		ChainTask returns E_OS_LIMIT if too many task activations of the chained task, in extended error mode. */
; ../src/kernel/ChainTask.c	   143  		/* [SWS_OS_10164]
; ../src/kernel/ChainTask.c	   144  		ChainTask returns E_OS_LIMIT if too many task activations of the chained task, in standard error mode. */
; ../src/kernel/ChainTask.c	   145  		/* Check if Too many task activations and RetStatus equals E_OK */
; ../src/kernel/ChainTask.c	   146  		if ((TaskID != CurrentRunningTaskID) && (PtrToChainedTask->TaskDynamics->PendingActivationRequests >= PtrToChainedTask->NumOfActivationRequests))
	cmp	r2,r0
	beq	.L2
.L59:
	ldr	r2,[r6,#20]
.L33:
	ldrb	r2,[r2,#22]
.L60:
	ldrb	r3,[r6,#3]
.L61:
	cmp	r2,r3
.L62:

; ../src/kernel/ChainTask.c	   147  		{
; ../src/kernel/ChainTask.c	   148  			/* Too many task activations */
; ../src/kernel/ChainTask.c	   149  			/* [OSEK_Hook_00015]
; ../src/kernel/ChainTask.c	   150  			The error hook routine (ErrorHook) is called if a system service returns a StatusType value
; ../src/kernel/ChainTask.c	   151  			not equal to E_OK, It is called before returning to the task level.*/
; ../src/kernel/ChainTask.c	   152  			/* Call (ErrorHook) with parameter E_OS_LIMIT */
; ../src/kernel/ChainTask.c	   153  
; ../src/kernel/ChainTask.c	   154  			/* return E_OS_LIMIT */
; ../src/kernel/ChainTask.c	   155  			RetStatus = E_OS_LIMIT;
	it	ge
	movge	r5,#4
.L3:
.L2:

; ../src/kernel/ChainTask.c	   156  		}
; ../src/kernel/ChainTask.c	   157  	}
; ../src/kernel/ChainTask.c	   158  
; ../src/kernel/ChainTask.c	   159  	if (E_OK == RetStatus)
	cmp	r5,#0
	bne	.L4
.L63:

; ../src/kernel/ChainTask.c	   160  	{
; ../src/kernel/ChainTask.c	   161  		/* Decrement the number of activations for the running task */
; ../src/kernel/ChainTask.c	   162  		Kernel.TaskRunning->TaskDynamics->PendingActivationRequests--;
	ldr	r1,[r1,#20]
.L64:
	ldrb	r2,[r1,#22]!
.L65:
	subs	r2,r2,#1
	strb	r2,[r1,#0]
.L66:

; ../src/kernel/ChainTask.c	   163  		
; ../src/kernel/ChainTask.c	   164  		/* Increment the number of activations for the TaskID */
; ../src/kernel/ChainTask.c	   165  		PtrToChainedTask->TaskDynamics->PendingActivationRequests++;
	ldr	r1,[r6,#20]
.L67:
	ldrb	r2,[r1,#22]!
.L68:
	adds	r2,r2,#1
	strb	r2,[r1,#0]
.L69:

; ../src/kernel/ChainTask.c	   166  
; ../src/kernel/ChainTask.c	   167  		/* [SWS_OS_10155]
; ../src/kernel/ChainTask.c	   168  		The service ChainTask shall release automatically an internal resource assigned to the
; ../src/kernel/ChainTask.c	   169  		calling task even if the succeeding task is identical with the current task. */
; ../src/kernel/ChainTask.c	   170  		OS_ReleaseInternalResource(CurrentRunningTaskID);
	bl	OS_ReleaseInternalResource
.L36:

; ../src/kernel/ChainTask.c	   171  
; ../src/kernel/ChainTask.c	   172  		if (Kernel.TaskRunning->TaskDynamics->PendingActivationRequests > 0)
; ../src/kernel/ChainTask.c	   173  		{
; ../src/kernel/ChainTask.c	   174  			/* [SWS_OS_10166]
; ../src/kernel/ChainTask.c	   175  			If the succeeding task is identical with the current task, The task will immediately become ready again. */
; ../src/kernel/ChainTask.c	   176  			OS_ChangeTaskState(Kernel.TaskRunning, NEW);
	ldr	r0,[r4,#4]
.L70:
	ldr	r1,[r0,#20]
.L71:
	ldrb	r1,[r1,#22]
.L72:
	cbz	r1,.L5
.L73:
	movs	r1,#4
	bl	OS_ChangeTaskState
.L74:

; ../src/kernel/ChainTask.c	   177  			
; ../src/kernel/ChainTask.c	   178  			/* [SWS_OS_10078]
; ../src/kernel/ChainTask.c	   179  			Task Chaining itself puts the newly activated task into the last element of the priority queue. */
; ../src/kernel/ChainTask.c	   180  			ReadyQueueAddRear(PtrToChainedTask);
	mov	r0,r6
.L37:
	bl	ReadyQueueAddRear
.L38:
	b	.L6
.L5:

; ../src/kernel/ChainTask.c	   181  		}
; ../src/kernel/ChainTask.c	   182  		else
; ../src/kernel/ChainTask.c	   183  		{
; ../src/kernel/ChainTask.c	   184  			/* [SWS_OS_10025]
; ../src/kernel/ChainTask.c	   185  			When a task is terminated its state changes from running state into suspended state.*/
; ../src/kernel/ChainTask.c	   186  			OS_ChangeTaskState(Kernel.TaskRunning, SUSPENDED);
	movs	r1,#3
	bl	OS_ChangeTaskState
.L6:

; ../src/kernel/ChainTask.c	   187  		}
; ../src/kernel/ChainTask.c	   188  		
; ../src/kernel/ChainTask.c	   189  		/* [SWS_OS_10165]
; ../src/kernel/ChainTask.c	   190  		If the succeeding task is identical with the current task, The task is not transferred to the suspended state. */
; ../src/kernel/ChainTask.c	   191  		if (PtrToChainedTask->TaskDynamics->TaskState != NEW)
	ldr	r0,[r6,#20]
.L75:
	ldrb	r0,[r0,#21]
.L76:
	cmp	r0,#4
	beq	.L7
.L77:

; ../src/kernel/ChainTask.c	   192  		{
; ../src/kernel/ChainTask.c	   193  			/* [SWS_OS_10153]
; ../src/kernel/ChainTask.c	   194  			The service ChainTask shall clear all the events of extended task when it is transferred 
; ../src/kernel/ChainTask.c	   195  			from suspended state into ready state.*/
; ../src/kernel/ChainTask.c	   196  			// ClearAllEvents(CurrentTask);
; ../src/kernel/ChainTask.c	   197  			
; ../src/kernel/ChainTask.c	   198  			/* [SWS_OS_10027]
; ../src/kernel/ChainTask.c	   199  			Activation of a task changes its state from suspended to ready state. */
; ../src/kernel/ChainTask.c	   200  			OS_ChangeTaskState(PtrToChainedTask, NEW);
	mov	r0,r6
.L39:
	movs	r1,#4
	bl	OS_ChangeTaskState
.L40:

; ../src/kernel/ChainTask.c	   201  			
; ../src/kernel/ChainTask.c	   202  			/* [SWS_OS_10078]
; ../src/kernel/ChainTask.c	   203  			Task Chaining itself puts the newly activated task into the last element of the priority queue. */
; ../src/kernel/ChainTask.c	   204  			ReadyQueueAddRear(PtrToChainedTask);
	mov	r0,r6
.L41:
	bl	ReadyQueueAddRear
.L7:

; ../src/kernel/ChainTask.c	   205  		}
; ../src/kernel/ChainTask.c	   206  		
; ../src/kernel/ChainTask.c	   207  		/* [OSEK_Hook_00028]
; ../src/kernel/ChainTask.c	   208  		PostTaskHook is called each time directly before the old task leaves the RUNNING state */
; ../src/kernel/ChainTask.c	   209  		/* Check if hooks are enabled in the system and PostTaskHook is enabled */
; ../src/kernel/ChainTask.c	   210  #if ((defined HOOKS) && (POST_TASK_HOOK == TRUE))
; ../src/kernel/ChainTask.c	   211  		PostTaskHook();
; ../src/kernel/ChainTask.c	   212  #endif
; ../src/kernel/ChainTask.c	   213  
; ../src/kernel/ChainTask.c	   214  		/* Indicates that the task was successfully terminated by terminate task or chaintask APIs */
; ../src/kernel/ChainTask.c	   215  		Kernel.TaskRunning = NULL_PTR;
	movs	r0,#0
.L78:
	str	r0,[r4,#4]
.L79:

; ../src/kernel/ChainTask.c	   216  		Kernel.TaskPreempted = NULL_PTR;
	str	r0,[r4,#8]
.L80:

; ../src/kernel/ChainTask.c	   217  
; ../src/kernel/ChainTask.c	   218  		/* [SWS_OS_10158]
; ../src/kernel/ChainTask.c	   219  		The services ChainTask does not return to the call level and the status cannot be evaluated in
; ../src/kernel/ChainTask.c	   220  		case of successful call.*/
; ../src/kernel/ChainTask.c	   221  		/* [SWS_OS_10159]
; ../src/kernel/ChainTask.c	   222  		The service ChainTask enforces a rescheduling in case of successful call. */
; ../src/kernel/ChainTask.c	   223  		Kernel.SchedulerNeeded = TRUE;
	movs	r0,#1
.L81:
	strb	r0,[r4,#18]
.L4:

; ../src/kernel/ChainTask.c	   224      }
; ../src/kernel/ChainTask.c	   225  
; ../src/kernel/ChainTask.c	   226  		/* [SWS_OS_10152]
; ../src/kernel/ChainTask.c	   227  		In case of error, ChainTask returns to the calling task and provides a status which can then be evaluated in the application. */
; ../src/kernel/ChainTask.c	   228      return RetStatus;
	mov	r0,r5
.L42:

; ../src/kernel/ChainTask.c	   229  }
	pop	{r4,r5,r6,pc}
.L23:
	.align	4
.L9:
	.dw	Tasks
	.dw	Kernel
.L21:
	.size	OS_ChainTask,$-OS_ChainTask
	; End of function
	.endsec	; End of section

	.calls	'OS_ChainTask','OS_ReleaseInternalResource'
	.calls	'OS_ChainTask','OS_ChangeTaskState'
	.calls	'OS_ChainTask','ReadyQueueAddRear'
	.calls	'OS_ChainTask','',16
	.extern	OS_ReleaseInternalResource
	.extern	OS_ChangeTaskState
	.extern	Tasks
	.extern	Kernel
	.extern	ReadyQueueAddRear
	.section	.debug_info
.L13:
	.dw	3617
	.dh	3
	.dw	.L14
	.db	4
.L12:
	.db	1
	.db	'../src/kernel/ChainTask.c',0
	.dw	.L43,.L44
	.db	12,1
	.dw	.L15
.L22:
	.db	2
	.db	'unsigned char',0,1,8,3
	.dw	52
	.db	4
	.db	'OS_ReleaseInternalResource',0,1,196,2,13,1,1,1,1,5
	.db	'TaskID',0,1,198,2,28
	.dw	69
	.db	0,3
	.dw	52
	.db	3
	.dw	52
	.db	3
	.dw	52
	.db	3
	.dw	52
	.db	6
	.db	'TaskFlagsType_s',0,1,172,1,8,2,7
	.db	'Type',0
	.dw	52
	.db	1,2,35,0,7
	.db	'TaskSchedulingPolicy',0
	.dw	52
	.db	1,2,35,1,0,8
	.dw	147
	.db	2
	.db	'unsigned int',0,4,7,8
	.dw	219
	.db	9
	.db	'StackPtrType',0,1,143,1,30
	.dw	235
	.db	6
	.db	'TaskStackType_s',0,1,243,1,8,12,7
	.db	'StackBase',0
	.dw	240
	.db	4,2,35,0,7
	.db	'CurrentStackPtr',0
	.dw	240
	.db	4,2,35,4,7
	.db	'StackSize',0
	.dw	219
	.db	4,2,35,8,0,8
	.dw	262
	.db	10,1,1,8
	.dw	353
	.db	9
	.db	'EntryFunctionPtrType',0,1,151,1,9
	.dw	356
	.db	3
	.dw	361
	.db	3
	.dw	52
	.db	6
	.db	'Os_InernalResourceDynamic_s',0,2,66,8,2,7
	.db	'TakenTaskPriority',0
	.dw	52
	.db	1,2,35,0,7
	.db	'TakenFlag',0
	.dw	52
	.db	1,2,35,1,0,8
	.dw	401
	.db	6
	.db	'Os_InteranlResource_s',0,2,79,8,8,7
	.db	'CeilingPriority',0
	.dw	396
	.db	1,2,35,0,7
	.db	'InternalResourceDynamics',0
	.dw	481
	.db	4,2,35,4,0,8
	.dw	486
	.db	2
	.db	'int',0,4,5,11,3,87,10,4,7
	.db	'x',0
	.dw	578
	.db	4,2,35,0,0,8
	.dw	585
	.db	3
	.dw	52
	.db	3
	.dw	52
	.db	6
	.db	'Os_ResourceDynamic_s',0,2,105,8,8,7
	.db	'OwnerTaskPriority',0
	.dw	52
	.db	1,2,35,0,7
	.db	'OwnerTaskID',0
	.dw	52
	.db	1,2,35,1,7
	.db	'LinkedResource',0
	.dw	.L45-.L13
	.db	4,2,35,4,0,8
	.dw	617
	.db	6
	.db	'Os_Resource_s',0,2,92,8,8,7
	.db	'CeilingPriority',0
	.dw	607
	.db	1,2,35,0,7
	.db	'ResourceID',0
	.dw	612
	.db	1,2,35,1,7
	.db	'ResourceDynamics',0
	.dw	716
	.db	4,2,35,4,0
.L45:
	.db	8
	.dw	721
	.db	6
	.db	'Os_TaskDynamic_s',0,1,214,1,8,24,7
	.db	'Context',0
	.dw	602
	.db	4,2,35,0,7
	.db	'Resources',0
	.dw	812
	.db	4,2,35,4,7
	.db	'PriorityQueueIndex',0
	.dw	52
	.db	1,2,35,8,7
	.db	'EventsSet',0
	.dw	219
	.db	4,2,35,12,7
	.db	'EventsWaiting',0
	.dw	219
	.db	4,2,35,16,7
	.db	'TaskCurrentPriority',0
	.dw	52
	.db	1,2,35,20,7
	.db	'TaskState',0
	.dw	52
	.db	1,2,35,21,7
	.db	'PendingActivationRequests',0
	.dw	52
	.db	1,2,35,22,0,8
	.dw	817
	.db	6
	.db	'Os_Task_s',0,1,186,1,8,28,7
	.db	'TaskStaticPriority',0
	.dw	127
	.db	1,2,35,0,7
	.db	'TaskID',0
	.dw	132
	.db	1,2,35,1,7
	.db	'ApplicationMode',0
	.dw	137
	.db	1,2,35,2,7
	.db	'NumOfActivationRequests',0
	.dw	142
	.db	1,2,35,3,7
	.db	'TaskFlags',0
	.dw	214
	.db	4,2,35,4,7
	.db	'TaskStack',0
	.dw	348
	.db	4,2,35,8,7
	.db	'EntryPoint',0
	.dw	391
	.db	4,2,35,12,7
	.db	'InternalResource',0
	.dw	573
	.db	4,2,35,16,7
	.db	'TaskDynamics',0
	.dw	1030
	.db	4,2,35,20,7
	.db	'EventsOwned',0
	.dw	219
	.db	4,2,35,24,0,3
	.dw	1035
	.db	8
	.dw	1281
	.db	3
	.dw	52
	.db	4
	.db	'OS_ChangeTaskState',0,1,201,2,13,1,1,1,1,5
	.db	'Task',0,1,203,2,38
	.dw	1286
	.db	5
	.db	'State',0,1,204,2,33
	.dw	1291
	.db	0,8
	.dw	219
	.db	8
	.dw	353
.L24:
	.db	3
	.dw	52
.L28:
	.db	8
	.dw	1035
	.db	12
	.db	'ReadyQueueAddRear',0,4,188,1,34
	.dw	52
	.db	1,1,1,1,5
	.db	'TaskRef',0,4,190,1,43
	.dw	1369
	.db	0,13,1,8
	.dw	1423
	.db	9
	.db	'__codeptr',0,5,1,1
	.dw	1425
	.db	9
	.db	'Os_ContexType',0,3,90,2
	.dw	585
	.db	9
	.db	'boolean',0,6,242,1,23
	.dw	52
	.db	9
	.db	'uint8',0,6,247,1,23
	.dw	52
	.db	2
	.db	'unsigned short int',0,2,7,9
	.db	'uint16',0,6,252,1,24
	.dw	1502
	.db	9
	.db	'uint32',0,6,129,2,22
	.dw	219
	.db	9
	.db	'StatusType',0,7,191,1,23
	.dw	52
	.db	9
	.db	'Std_ReturnType',0,7,235,2,15
	.dw	52
	.db	9
	.db	'Std_TransformerClass',0,7,238,2,15
	.dw	52
	.db	9
	.db	'Std_TransformerForwardCode',0,7,241,2,15
	.dw	52
	.db	9
	.db	'TaskType',0,8,183,1,29
	.dw	52
	.db	9
	.db	'TaskStateType',0,8,189,1,29
	.dw	52
	.db	9
	.db	'TaskPriorityType',0,8,195,1,29
	.dw	52
	.db	9
	.db	'ResourceType',0,8,198,1,29
	.dw	52
	.db	9
	.db	'EventMaskType',0,8,201,1,30
	.dw	219
	.db	9
	.db	'AppModeType',0,8,207,1,28
	.dw	52
	.db	9
	.db	'OsStateType',0,8,210,1,28
	.dw	52
	.db	9
	.db	'TickType',0,8,214,1,30
	.dw	219
	.db	6
	.db	'AlarmBaseType_s',0,8,230,1,8,12,7
	.db	'maxallowedvalue',0
	.dw	219
	.db	4,2,35,0,7
	.db	'ticksperbase',0
	.dw	219
	.db	4,2,35,4,7
	.db	'mincycle',0
	.dw	219
	.db	4,2,35,8,0,9
	.db	'AlarmBaseType',0,8,220,1,32
	.dw	1838
	.db	9
	.db	'AlarmType',0,8,226,1,28
	.dw	52
	.db	9
	.db	'Os_InernalResourceDynamic',0,2,55,44
	.dw	401
	.db	9
	.db	'Os_InteranlResource',0,2,57,38
	.dw	486
	.db	9
	.db	'Os_Resource',0,2,59,30
	.dw	721
	.db	9
	.db	'Os_ResourceDynamic',0,2,61,37
	.dw	617
	.db	9
	.db	'StackSizeType',0,1,145,1,31
	.dw	219
	.db	9
	.db	'TaskActivationCounterType',0,1,147,1,30
	.dw	52
	.db	9
	.db	'QueueIndexType',0,1,149,1,30
	.dw	52
	.db	9
	.db	'TaskFlagsType',0,1,155,1,32
	.dw	147
	.db	9
	.db	'TaskStackType',0,1,157,1,32
	.dw	262
	.db	9
	.db	'Os_TaskDynamic',0,1,159,1,33
	.dw	817
	.db	9
	.db	'Os_Task',0,1,161,1,26
	.dw	1035
	.db	6
	.db	'Os_CpuLoad_s',0,1,155,2,8,8,7
	.db	'IdleTime',0
	.dw	219
	.db	4,2,35,0,7
	.db	'CurrentCpuLoad',0
	.dw	52
	.db	1,2,35,4,7
	.db	'PeakCpuLoad',0
	.dw	52
	.db	1,2,35,5,0,8
	.dw	2246
	.db	6
	.db	'Os_Kernel_s',0,1,129,2,8,24,7
	.db	'TaskQueueHead',0
	.dw	1369
	.db	4,2,35,0,7
	.db	'TaskRunning',0
	.dw	1369
	.db	4,2,35,4,7
	.db	'TaskPreempted',0
	.dw	1369
	.db	4,2,35,8,7
	.db	'CpuLoad',0
	.dw	2329
	.db	4,2,35,12,7
	.db	'OsState',0
	.dw	52
	.db	1,2,35,16,7
	.db	'ForceScheduling',0
	.dw	52
	.db	1,2,35,17,7
	.db	'SchedulerNeeded',0
	.dw	52
	.db	1,2,35,18,7
	.db	'DispatcherNeeded',0
	.dw	52
	.db	1,2,35,19,7
	.db	'NewContext',0
	.dw	52
	.db	1,2,35,20,0,9
	.db	'Os_Kernel',0,1,163,1,28
	.dw	2334
	.db	9
	.db	'Os_CpuLoad',0,1,165,1,29
	.dw	2246
	.db	3
	.dw	219
	.db	3
	.dw	219
	.db	3
	.dw	219
	.db	3
	.dw	52
	.db	3
	.dw	219
	.db	6
	.db	'Os_Counter_s',0,9,44,8,28,7
	.db	'OsCounterMaxAllowedValue',0
	.dw	2589
	.db	4,2,35,0,7
	.db	'OsCounterMinCycle',0
	.dw	2594
	.db	4,2,35,4,7
	.db	'OsCounterTicksPerBase',0
	.dw	2599
	.db	4,2,35,8,7
	.db	'OsCounterType',0
	.dw	2604
	.db	1,2,35,12,7
	.db	'OsSecondsPerTick',0
	.dw	2609
	.db	4,2,35,16,7
	.db	'OsCounterCurrentTicks',0
	.dw	219
	.db	4,2,35,20,7
	.db	'OsCounterAlarmsHeadIndex',0
	.dw	52
	.db	1,2,35,24,0,9
	.db	'Os_Counter',0,9,42,29
	.dw	2614
	.db	6
	.db	'Os_AlarmActivateTask_s',0,10,140,1,8,1,7
	.db	'OsAlarmActivateTaskRef',0
	.dw	52
	.db	1,2,35,0,0,8
	.dw	2858
	.db	6
	.db	'Os_AlarmSetEvent_s',0,10,146,1,8,8,7
	.db	'OsAlarmSetEventTaskRef',0
	.dw	52
	.db	1,2,35,0,7
	.db	'OsAlarmSetEventRef',0
	.dw	219
	.db	4,2,35,4,0,8
	.dw	2925
	.db	9
	.db	'CallbackFuncPtrType',0,10,88,9
	.dw	356
	.db	3
	.dw	3016
	.db	14
	.db	'Os_AlarmAction_u',0,10,92,7,4,7
	.db	'OsAlarmActivateTask',0
	.dw	2920
	.db	4,2,35,0,7
	.db	'OsAlarmSetEventTask',0
	.dw	3011
	.db	4,2,35,0,7
	.db	'OsAlarmCallbackName',0
	.dw	3044
	.db	4,2,35,0,0,8
	.dw	2614
	.db	8
	.dw	.L46-.L13
.L46:
	.db	6
	.db	'Os_Alarm_s',0,10,104,8,36,7
	.db	'OsAlarmAction',0
	.dw	3049
	.db	4,2,35,0,7
	.db	'OsAlarmActionType',0
	.dw	52
	.db	1,2,35,4,7
	.db	'OsAlarmExpiryTime',0
	.dw	219
	.db	4,2,35,8,7
	.db	'OsAlarmCycleTime',0
	.dw	219
	.db	4,2,35,12,7
	.db	'OsAlarmState',0
	.dw	52
	.db	1,2,35,16,7
	.db	'OsAlarmCounterRef',0
	.dw	3159
	.db	4,2,35,20,7
	.db	'OsAlarmNext',0
	.dw	3164
	.db	4,2,35,24,7
	.db	'OsAlarmPrevious',0
	.dw	3164
	.db	4,2,35,28,7
	.db	'OsAlarmAlarmTime',0
	.dw	52
	.db	1,2,35,32,7
	.db	'OsAlarmAutoStartType',0
	.dw	52
	.db	1,2,35,33,0,9
	.db	'Os_Alarm',0,10,73,45
	.dw	3169
	.db	8
	.dw	353
	.db	9
	.db	'Os_AlarmAction',0,10,76,45
	.dw	3049
	.db	9
	.db	'Os_AlarmActivateTask',0,10,79,41
	.dw	2858
	.db	9
	.db	'Os_AlarmSetEvent',0,10,82,38
	.dw	2925
	.db	15,112
	.dw	1035
	.db	16,3,0,17
	.db	'Tasks',0,11,38,20
	.dw	3539
	.db	1,1,17
	.db	'Kernel',0,11,40,18
	.dw	2334
	.db	1,1,9
	.db	'QueueSize',0,12,183,1,29
	.dw	52
	.db	9
	.db	'QueueIndex',0,12,186,1,29
	.dw	52
	.db	0
	.endsec	; End of section

	.section	.debug_abbrev
.L14:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8
	.db	58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,19,1,3,8,58,15,59
	.db	15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56,9,0,0,8,15,0,73,19,0,0,9,22,0,3,8,58,15,59,15,57,15,73,19
	.db	0,0,10,21,0,54,15,39,12,0,0,11,19,1,58,15,59,15,57,15,11,15,0,0,12,46,1,3,8,58,15,59,15,57,15,73,19,54
	.db	15,39,12,63,12,60,12,0,0,13,21,0,54,15,0,0,14,23,1,3,8,58,15,59,15,57,15,11,15,0,0,15,1,1,11,15,73,19
	.db	0,0,16,33,0,47,15,0,0,17,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.endsec	; End of section

	.section	.debug_line
.L15:
	.dw	.L48-.L47
.L47:
	.dh	3
	.dw	.L50-.L49
.L49:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\include\\Internal\\Os_kernel_task.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_resource.h',0,0,0,0
	.db	'..\\Port\\Cortex-M4\\inc\\Os_kernel_cm4.h',0,0,0,0
	.db	'..\\include\\Internal\\SchedulingQueues.h',0,0,0,0
	.db	'../src/kernel/ChainTask.c',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Platform_Types.h',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Std_Types.h',0,0,0,0
	.db	'..\\include\\External\\Os_Types.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_counter.h',0,0,0,0
	.db	'..\\include\\Internal\\Os_kernel_alarm.h',0,0,0,0
	.db	'..\\generate\\Os_Int_Cfg.h',0,0,0,0
	.db	'..\\include\\Internal\\queue.h',0,0,0,0,0
.L50:
.L48:
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_OS_ChainTask')
.L16:
	.dw	208
	.dh	3
	.dw	.L17
	.db	4,1
	.db	'../src/kernel/ChainTask.c',0
	.dw	.L43,.L44
	.db	12,1
	.dw	.L19,.L18
	.db	2
	.dw	.L12
	.db	3
	.db	'OS_ChainTask',0,1,76,27
	.dw	.L22
	.db	1,1,1
	.dw	.L11,.L23,.L10
	.db	4
	.db	'TaskID',0,1,78,29
	.dw	.L24,.L25
	.db	5
	.dw	.L11,.L23
	.db	6
	.db	'RetStatus',0,1,81,31
	.dw	.L22,.L26
	.db	6
	.db	'CurrentRunningTaskID',0,1,82,25
	.dw	.L22,.L27
	.db	6
	.db	'PtrToChainedTask',0,1,83,39
	.dw	.L28,.L29
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_OS_ChainTask')
.L17:
	.db	1,17,1,3,8,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_OS_ChainTask')
.L18:
	.dw	.L52-.L51
.L51:
	.dh	3
	.dw	.L54-.L53
.L53:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../src/kernel/ChainTask.c',0,0,0,0,0
.L54:
	.db	5,27,7,0,5,2
	.dw	.L11
	.db	3,203,0,1,5,43,9
	.dh	.L32-.L11
	.db	3,5,1,5,64,9
	.dh	.L34-.L32
	.db	3,2,1,5,59,9
	.dh	.L55-.L34
	.db	1,5,64,9
	.dh	.L56-.L55
	.db	1,5,48,9
	.dh	.L35-.L56
	.db	3,127,1,5,54,9
	.dh	.L57-.L35
	.db	1,5,66,9
	.dh	.L58-.L57
	.db	1,5,7,9
	.dh	.L31-.L58
	.db	3,192,0,1,5,60,9
	.dh	.L59-.L31
	.db	1,5,74,9
	.dh	.L33-.L59
	.db	1,5,121,9
	.dh	.L60-.L33
	.db	1,5,102,9
	.dh	.L61-.L60
	.db	1,5,16,9
	.dh	.L62-.L61
	.db	3,9,1,5,2,9
	.dh	.L2-.L62
	.db	3,4,1,5,21,9
	.dh	.L63-.L2
	.db	3,3,1,5,35,9
	.dh	.L64-.L63
	.db	1,5,62,9
	.dh	.L65-.L64
	.db	1,5,19,9
	.dh	.L66-.L65
	.db	3,3,1,5,33,9
	.dh	.L67-.L66
	.db	1,5,60,9
	.dh	.L68-.L67
	.db	1,5,30,9
	.dh	.L69-.L68
	.db	3,5,1,5,29,9
	.dh	.L36-.L69
	.db	3,6,1,5,25,9
	.dh	.L70-.L36
	.db	3,124,1,5,39,9
	.dh	.L71-.L70
	.db	1,5,3,9
	.dh	.L72-.L71
	.db	1,5,43,7,9
	.dh	.L73-.L72
	.db	3,4,1,5,22,9
	.dh	.L74-.L73
	.db	3,4,1,5,47,9
	.dh	.L38-.L74
	.db	3,124,1,5,43,9
	.dh	.L5-.L38
	.db	3,10,1,5,23,9
	.dh	.L6-.L5
	.db	3,5,1,5,37,9
	.dh	.L75-.L6
	.db	1,5,3,9
	.dh	.L76-.L75
	.db	1,5,41,9
	.dh	.L77-.L76
	.db	3,9,1,5,22,9
	.dh	.L40-.L77
	.db	3,4,1,5,24,9
	.dh	.L7-.L40
	.db	3,11,1,5,22,9
	.dh	.L78-.L7
	.db	1,5,24,9
	.dh	.L79-.L78
	.db	3,1,1,5,28,9
	.dh	.L80-.L79
	.db	3,7,1,5,26,9
	.dh	.L81-.L80
	.db	1,5,5,9
	.dh	.L4-.L81
	.db	3,5,1,5,1,9
	.dh	.L42-.L4
	.db	3,1,1,7,9
	.dh	.L21-.L42
	.db	0,1,1
.L52:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_OS_ChainTask')
.L19:
	.dw	-1,.L20,0,.L21-.L20,0,0
	.endsec	; End of section

	.section	.debug_str
.L44:
	.db	'D:\\Embedded Systems\\Graduation Project\\Implementation-of-an-AUTOSAR-compliant-Operating-System-for-Hardware-Security-Module\\Software\\OS\\Makefile\\',0
.L43:
	.db	'TASKING VX-toolset for ARM Cortex: C compiler',0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_OS_ChainTask')
.L27:
	.dw	-1,.L11,.L31-.L11,.L36-.L11
	.dh	1
	.db	80
	.dw	0,0
.L10:
	.dw	-1,.L11,0,.L30-.L11
	.dh	2
	.db	125,0
	.dw	.L30-.L11,.L23-.L11
	.dh	2
	.db	125,16
	.dw	.L23-.L11,.L23-.L11
	.dh	2
	.db	125,0
	.dw	0,0
.L29:
	.dw	-1,.L11,.L35-.L11,.L23-.L11
	.dh	1
	.db	86
	.dw	.L37-.L11,.L38-.L11
	.dh	1
	.db	80
	.dw	.L39-.L11,.L40-.L11
	.dh	1
	.db	80
	.dw	.L41-.L11,.L7-.L11
	.dh	1
	.db	80
	.dw	0,0
.L26:
	.dw	-1,.L11,.L34-.L11,.L23-.L11
	.dh	1
	.db	85
	.dw	.L42-.L11,.L23-.L11
	.dh	1
	.db	80
	.dw	0,0
.L25:
	.dw	-1,.L11,0,.L31-.L11
	.dh	1
	.db	80
	.dw	.L32-.L11,.L33-.L11
	.dh	1
	.db	82
	.dw	0,0
	.endsec	; End of section

	.section	.debug_frame
.L82:
	.dw	64
	.dw	-1
	.db	3,0,2,2,14,12,13,0,8,4,8,5,8,6,8,7,8,8,8,9,8,10,8,11,8,13,8,14,8,15,8,128,1,8,136,2,8,137,2,8,138,2,8
	.db	139,2,8,140,2,8,141,2,8,142,2,8,143,2,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_OS_ChainTask')
	.dw	52
	.dw	.L82,.L11,.L23-.L11
	.db	4
	.dw	(.L30-.L11)/2
	.db	19,8,22,13,3,19,125,16,17,14,126,17,6,124,17,5,122,17,4,120,4
	.dw	(.L23-.L30)/2
	.db	19,0,8,13,198,197,196,0,0,0
	.endsec	; End of section



	; Module end
	.end
