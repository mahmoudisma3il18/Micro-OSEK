	; Module start
	.compiler_version	"TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455255"
	.compiler_invocation	"carm --dep-file=../Executable/Mcal/Hash/src/.Hash.o.d -CARMv7M -D__PROC_CORTEX_M3__ --iso=11 -I../../TC399x/HSM/ -I../../TC399x/HSM/Main -I../../TC399x/HSM/Ssw/inc -I../../TC399x/HSM/Reg -I../../TC399x/HSM/Mcal/Bridge/inc -I../../TC399x/HSM/Mcal/TRNG/inc -I../../TC399x/HSM/Mcal/NVIC/inc -I../../TC399x/HSM/Mcal/Timer/inc -I../../TC399x/HSM/Application/inc -I../../TC399x/HSM/Mcal/AES/inc -I../../TC399x/HSM/Mcal/CMAC/inc -I../../TC399x/HSM/Mcal/Hash/inc -I../../TC399x/HSM/Mcal/HMAC/inc -I../../TC399x/HSM/Application/KeyM/inc -I../../AutoSar/BSW/static/MCAL/Infrastructure/Platform -I../../TC399x/Host Core\\CryptoKeyManagement\\inc -I../include/External -I../include/Internal -I../include/memmap -I../generate -I../Port/Cortex-M4/inc -g2 --global-type-checking -t4 -O0 --make-target=../Executable/Mcal/Hash/src/Hash.o --language=-gcc,-volatile,+strings,-kanji -O1 --source --error-limit=42 -o ..\\Executable\\Mcal\\Hash\\src\\Hash.src ../../TC399x/HSM/Mcal/Hash/src/Hash.c"
	.compiler_name		"carm"
	;.ident 'TASKING VX-toolset for ARM Cortex: C compiler v6.3r1 Build 19041558 SN 09455255'
	.source '../../TC399x/HSM/Mcal/Hash/src/Hash.c'

	.section	.text ,cluster('$group_ChangeEndianness')

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     1  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     2  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     3  /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     4   * @file 	Hash.c
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     5   * @author  Qamar Abdelrahmn Ali & Radwa Mahmoud
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     6   * @version 1.0.0
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     7   * @date	22-3-2024
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     8   * @platform    --
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	     9   * @variant		--
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    10   * @vendor		CryptOS
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    11   * @specification --
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    12   * @brief   Hash Source File.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    13   *
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    14   *
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    15   *
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    16   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    17  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    18  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    19  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    20  /*------------------------- MISRA-C violations in c files -----------------------*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    21  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    22  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    23  /**********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    24  /*                               INCLUDE HEADERS	                              */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    25  /**********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    26  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    27  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    28  #include "Hash.h"
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    29  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    30  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    31  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    32  /*                                  MACROS                                         */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    33  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    34  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    35  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    36  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    37  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    38  /*                                 Type Definitions                                  */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    39  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    40  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    41  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    42  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    43  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    44  /*                        Internal Function Declaration                             */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    45  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    46  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    47  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    48  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    49  /*                        External Function Declaration                             */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    50  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    51  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    52  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    53  /*				    			External constants		         				   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    54  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    55  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    56  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    57  /*                      	  Internal Function Definition                         */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    58  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    59  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    60   /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    61    * @brief 		 Changes Endianness of input data before hashing
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    62    * 
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    63    * @service name    			ChangeEndianness
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    64    * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    65    * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    66    * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    67    * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    68    * @param[in]     value 		Pointer to input data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    69    * @param[in]     size 		size of bytes of input data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    70    * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    71    * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    72    * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    73    * @note            
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    74    * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    75    */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    76  void static ChangeEndianness(uint32* value, uint32 size)
; Function ChangeEndianness
.L311:
	.thumb
	.align	4
ChangeEndianness:	.type	func

.L214:
	push	{r4,r5,r6}
.L539:
	mov	r2,r0
.L541:
	mov	r3,r1
.L542:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    77  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    78      uint32 x = size/4;
	movs	r5,r1,lsr #2
.L544:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    79      uint32 result = 0;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    80      uint32 i = 0;
	movs	r4,#0
.L546:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    81  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    82      while (x--)
	b	.L2
.L3:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    83      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    84          result = 0;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    85          result |= (value[i] & 0x000000FF) << 24;
	ldr	r6,[r2,r4,lsl #2]
	ands	r1,r6,#255
.L1112:
	movs	r0,#0
.L547:
	orrs	r0,r0,r1,lsl #24
.L1113:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    86          result |= (value[i] & 0x0000FF00) << 8;
	ands	r1,r6,#65280
.L1114:
	orrs	r0,r0,r1,lsl #8
.L1115:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    87          result |= (value[i] & 0x00FF0000) >> 8;
	movs	r1,r6,lsr #8
.L1116:
	ands	r1,r1,#65280
.L1117:
	orrs	r0,r0,r1
.L1118:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    88          result |= (value[i] & 0xFF000000) >> 24;
	orrs	r0,r0,r6,lsr #24
.L1119:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    89          value[i] = result;
	str	r0,[r2,r4,lsl #2]
.L1120:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    90          i++;
	adds	r4,r4,#1
.L2:
	movs	r0,r5
	sub	r5,r5,#1
.L1121:
	bne	.L3
.L535:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    91      }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    92  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    93      uint32 var = (size % 4);
	ands	r3,r3,#3
.L543:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    94      
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    95      if (var != 0)
	beq	.L4
.L537:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    96      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    97          uint32 temp;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    98  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	    99          /* clearing the local variable holding data of last bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   100          temp =0;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   101  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   102          /*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   103          temp |= value[i];
	ldr	r1,[r2,r4,lsl #2]
.L1122:
	movs	r0,#0
.L548:
	orrs	r0,r0,r1
.L1123:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   104  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   105          /* Shift bytes to get rid of garbage value */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   106          temp = (temp << (32 - (var * 8)));
	movs	r1,r3,lsl #3
.L1124:
	rsbs	r1,r1,#32
.L1125:
	movs	r5,r0,lsl r1
.L545:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   107  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   108          switch (var)
	cmp	r3,#1
	beq	.L5
	cmp	r3,#2
	beq	.L6
	cmp	r3,#3
	beq	.L7
	b	.L8

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   109          {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   110          case 1:
.L5:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   111  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   112              value[i] = temp;
	str	r5,[r2,r4,lsl #2]
.L1126:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   113              break;
	b	.L9

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   114  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   115          case 2:
.L6:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   116  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   117              result = 0;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   118              result |= (temp & 0xFF000000) >> 8;
	movs	r1,r5,lsr #8
.L1127:
	ands	r1,r1,#16711680
.L1128:
	movs	r0,#0
.L550:
	orrs	r0,r0,r1
.L1129:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   119              result |= (temp & 0x00FF0000) << 8;
	ands	r5,r5,#16711680
.L549:
	orrs	r0,r0,r5,lsl #8
.L1130:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   120              value[i] = result;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   121              break;
	b	.L10

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   122  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   123          case 3:
.L7:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   124  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   125              result = 0;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   126              result |= (temp & 0xFF000000) >> 16;
	movs	r1,r5,lsr #16
.L1131:
	ands	r1,r1,#65280
.L1132:
	movs	r0,#0
.L552:
	orrs	r0,r0,r1
.L1133:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   127  			result |= (temp & 0x00FF0000) ;
	ands	r1,r5,#16711680
.L1134:
	orrs	r0,r0,r1
.L1135:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   128              result |= (temp & 0x0000FF00) << 16;
	ands	r5,r5,#65280
.L551:
	orrs	r0,r0,r5,lsl #16

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   129              value[i] = result;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   130              break;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   131          }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   132      }
.L10:
	str	r0,[r2,r4,lsl #2]
.L8:
.L9:
.L4:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   133      
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   134  }
	pop	{r4,r5,r6}
.L540:
	bx	lr
.L312:
	.size	ChangeEndianness,$-ChangeEndianness
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_Synchronous_HashCalculate')
	.global	Synchronous_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   135  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   136  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   137  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   138  /*                      	  External Function Definition                         */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   139  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   140  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   141  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   142  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   143   /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   144    * @brief 		 Hashing data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   145    * This Function Calculates hash digest of a given data stream.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   146    * @service name    			HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   147    * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   148    * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   149    * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   150    * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   151    * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   152    * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   153    * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   154    * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   155    * @note             Calculates  hash digest of a given data stream.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   156    * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   157    */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   158  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   159  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   160  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   161   void Synchronous_HashCalculate (Hash_Service* Service_cfg)
; Function Synchronous_HashCalculate
.L251:
	.thumb
	.align	4
Synchronous_HashCalculate:	.type	func

.L216:
	push	{r4,lr}
.L553:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   162   {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   163  	 if(Service_cfg->Hash_mode == SHA_1_MODE ){
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   164  		 SHA1_HashCalculate((uint32*)Service_cfg->Hash_input , Service_cfg->Hash_output , Service_cfg->Input_size , Service_cfg->Output_size);
	ldr	r3,[r0,#16]
.L719:
	ldr	r2,[r0,#12]
.L720:
	ldr	r1,[r0,#8]
.L721:
	ldr	r4,[r0,#4]
.L722:
	ldrb	r0,[r0,#1]
.L554:
	cmp	r0,#5
	bne	.L12
.L723:
	mov	r0,r4
	bl	SHA1_HashCalculate
.L724:
	pop	{r4,pc}
.L12:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   165  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   166  	 else if (Service_cfg->Hash_mode == SHA_224_MODE ){
	cmp	r0,#6
	bne	.L14
.L725:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   167  		 SHA224_HashCalculate((uint32*)Service_cfg->Hash_input , Service_cfg->Hash_output , Service_cfg->Input_size , Service_cfg->Output_size);
	mov	r0,r4
	bl	SHA224_HashCalculate
.L726:
	pop	{r4,pc}
.L14:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   168  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   169  	 else if (Service_cfg->Hash_mode == SHA_256_MODE ){
	cmp	r0,#7
	bne	.L16
.L727:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   170  		 SHA256_HashCalculate((uint32*)Service_cfg->Hash_input , Service_cfg->Hash_output , Service_cfg->Input_size , Service_cfg->Output_size);
	mov	r0,r4
	bl	SHA256_HashCalculate
.L728:
	pop	{r4,pc}
.L16:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   171  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   172  	 else{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   173  		 MD5_HashCalculate(Service_cfg->Hash_input , Service_cfg->Hash_output , Service_cfg->Input_size , Service_cfg->Output_size);
	mov	r0,r4
	bl	MD5_HashCalculate
.L17:
.L15:
.L13:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   174  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   175  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   176   }
	pop	{r4,pc}
.L252:
	.size	Synchronous_HashCalculate,$-Synchronous_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_Asynchronous_HashCalculate')
	.global	Asynchronous_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   177   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   178   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   179   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   180    /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   181    * @brief 		 writes data stream
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   182    * This Function  initializes the hash registers based on each algo , writes the data stream to be hashed.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   183    * @service name    			Asynchronous_HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   184    * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   185    * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   186    * @sync/async      			Asynchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   187    * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   188    * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   189    * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   190    * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   191    * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   192    * @note             Initializes the hash registers based on each algo ,writes the data stream to be hashed.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   193    * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   194    */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   195  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   196  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   197  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   198   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   199    void Asynchronous_HashCalculate (Hash_Service* Service_cfg)
; Function Asynchronous_HashCalculate
.L245:
	.thumb
	.align	4
Asynchronous_HashCalculate:	.type	func

.L218:
	push	{lr}
.L555:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   200    {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   201  	 if(Service_cfg->Hash_mode == SHA_1_MODE ){
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   202  		 Asynchronous_SHA1_HashCalculate((uint32*)Service_cfg->Hash_input, Service_cfg->Input_size , (uint32*)Service_cfg->Output_size);
	ldr	r2,[r0,#16]
.L708:
	ldr	r1,[r0,#12]
.L709:
	ldr	r3,[r0,#4]
.L710:
	ldrb	r0,[r0,#1]
.L556:
	cmp	r0,#5
	bne	.L18
.L711:
	mov	r0,r3
	bl	Asynchronous_SHA1_HashCalculate
.L712:
	pop	{pc}
.L18:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   203  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   204  	 else if (Service_cfg->Hash_mode == SHA_224_MODE ){
	cmp	r0,#6
	bne	.L20
.L713:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   205  		 Asynchronous_SHA224_HashCalculate((uint32*)Service_cfg->Hash_input , Service_cfg->Input_size , (uint32*)Service_cfg->Output_size);
	mov	r0,r3
	bl	Asynchronous_SHA224_HashCalculate
.L714:
	pop	{pc}
.L20:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   206  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   207  	 else{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   208  		 Asynchronous_SHA256_HashCalculate((uint32*)Service_cfg->Hash_input  , Service_cfg->Input_size , (uint32*)Service_cfg->Output_size);
	mov	r0,r3
	bl	Asynchronous_SHA256_HashCalculate
.L21:
.L19:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   209  	 }
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   210  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   211   }
	pop	{pc}
.L246:
	.size	Asynchronous_HashCalculate,$-Asynchronous_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_SHA224_HashCalculate')
	.global	SHA224_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   212  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   213   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   214   
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   215  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   216  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   217  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   218  /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   219   * @brief 		SHA224 Hashing data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   220   * This Function Calculates a SHA-224 hash digest of a given data stream, producing a 224-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   221   * @service name    			SHA224_HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   222   * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   223   * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   224   * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   225   * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   226   * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   227   * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   228   * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   229   * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   230   * @note             Calculates a SHA-224 hash digest of a given data stream, producing a 224-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   231   * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   232   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   233  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   234  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   235  void SHA224_HashCalculate(uint32*  Hash_input , uint32*  Hash_output ,uint32 Input_size , uint32* Output_size )
; Function SHA224_HashCalculate
.L287:
	.thumb
	.align	4
SHA224_HashCalculate:	.type	func

.L220:
	push	{r4,r5,r6,r7,r8,r9,lr}
.L557:
	mov	r4,r0
.L561:
	mov	r5,r1
.L562:
	mov	r6,r2
.L563:
	mov	r7,r3
.L565:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   236  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   237  	/* HASH_CFG.ALGO set to 11 fofr SHA-224  , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, IV mode for SHA224 is set*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   238  	HASH_CFG->CFG_REG = ((SHA_224_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   239  			(SHA_224_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   240  			(SHA_224_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   241  			(SHA_224_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   242  			(SHA_224_Configuration.IVmode )) ;
	ldr	lr,.L206
.L903:
	ldrb	r1,[lr,#0]
.L559:
	ldrb	r3,[lr,#2]
.L560:
	orrs	r1,r1,r3
.L904:
	ldrb	r3,[lr,#1]
.L905:
	orrs	r1,r1,r3
.L906:
	ldrb	r3,[lr,#3]
.L907:
	orrs	r1,r1,r3
.L908:
	ldrb	r3,[lr,#4]
.L909:
	orrs	r1,r1,r3
.L910:
	movs	r3,#-402653184
.L911:
	str	r1,[r3,#1024]
.L912:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   243  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   244  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   245  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   246  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   247  	ChangeEndianness((uint32*)Hash_input, Input_size);
	mov	r1,r2
.L564:
	bl	ChangeEndianness
.L558:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   248  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   249  	/* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   250  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L913:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   251  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   252  		Input_size = Input_size*8 ;
	it	ne
.L566:
	movne	r6,r6,lsl #3
.L22:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   253  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   254  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   255  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   256  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   257  	/* If the HASH_STAT.BSY bit is set, writes to HASH_IVIN are ignored*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   258  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
	movw	r2,#@lsh(-402652156)
	movt	r2,#@msh(-402652156)
.L24:
	ldr	r0,[r2,#0]
.L914:
	tst	r0,#1
	bne	.L24
.L915:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   259  	/* Assigning IV Value to HASH_IVIN register first word is the most significant word and has to be
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   260        written first as well, all eight words are hexadecimal 32-bit values*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   261  	*(HASH_IVIN) = 0xC1059ED8;
	movw	r0,#@lsh(-1056596264)
	movt	r0,#@msh(-1056596264)
.L916:
	movs	r1,#-402653184
.L917:
	str	r0,[r1,#1032]
.L918:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   262  	*(HASH_IVIN) = 0x367CD507;
	movw	r0,#@lsh(914150663)
	movt	r0,#@msh(914150663)
.L919:
	str	r0,[r1,#1032]
.L920:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   263  	*(HASH_IVIN) = 0x3070DD17;
	movw	r0,#@lsh(812702999)
	movt	r0,#@msh(812702999)
.L921:
	str	r0,[r1,#1032]
.L922:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   264  	*(HASH_IVIN) = 0xF70E5939;
	movw	r0,#@lsh(-150054599)
	movt	r0,#@msh(-150054599)
.L923:
	str	r0,[r1,#1032]
.L924:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   265  	*(HASH_IVIN) = 0xFFC00B31;
	movw	r0,#@lsh(-4191439)
	movt	r0,#@msh(-4191439)
.L925:
	str	r0,[r1,#1032]
.L926:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   266  	*(HASH_IVIN) = 0x68581511;
	movw	r0,#@lsh(1750603025)
	movt	r0,#@msh(1750603025)
.L927:
	str	r0,[r1,#1032]
.L928:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   267  	*(HASH_IVIN) = 0x64F98FA7;
	movw	r0,#@lsh(1694076839)
	movt	r0,#@msh(1694076839)
.L929:
	str	r0,[r1,#1032]
.L930:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   268  	*(HASH_IVIN) = 0xBEFA4FA4;
	movw	r0,#@lsh(-1090891868)
	movt	r0,#@msh(-1090891868)
.L931:
	str	r0,[r1,#1032]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   269  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   270  	/*  indicates that the initialization vector is ok*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   271  	while (HASH_STAT->HASH_STAT_s.IV_OK == 0 );
.L26:
	ldr	r0,[r2,#0]
.L932:
	tst	r0,#2
	beq	.L26
.L412:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   272  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   273  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   274  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   275  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   276  	/*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   277  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r6,lsr #9
.L414:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   278  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   279  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   280  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	r8,r6,#0,#9
.L417:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   281  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   282  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   283  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   284  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   285  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   286  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   287  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   288  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   289  			*(HASH_DATA) = Hash_input[i];
	movw	lr,#@lsh(-402652144)
	movt	lr,#@msh(-402652144)
.L418:
	b	.L27
.L28:
	movs	r0,#0
.L567:
	b	.L29
.L30:
	ldr	r3,[r4,r0,lsl #2]
.L933:
	str	r3,[lr,#0]
.L934:
	adds	r0,r0,#1
.L29:
	cmp	r0,#16
	blt	.L30

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   290  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   291  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   292  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   293  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
.L32:
	ldr	r0,[r2,#0]
.L935:
	tst	r0,#4
	beq	.L32
.L936:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   294  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   295  		NumOfBlocks--;
	subs	r1,r1,#1
.L27:
	cmp	r1,#0
	bne	.L28
.L420:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   296  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   297  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   298  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   299  	uint32 NumofWords = NumOfBlocks*16;
	movs	r1,r1,lsl #4
.L422:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   300  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   301  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r0,#0
.L569:
	movs	r9,r8,lsr #5
.L937:
	b	.L33
.L34:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   302  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   303  		*(HASH_DATA) =  Hash_input[NumofWords++];
	ldr	r3,[r4,r1,lsl #2]
.L938:
	str	r3,[lr,#0]
.L939:
	adds	r1,r1,#1
.L940:
	adds	r0,r0,#1
.L570:
	uxtb	r0,r0
.L33:
	cmp	r0,r9
	blo	.L34
.L423:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   304  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   305  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   306  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   307  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   308  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   309  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   310  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   311  	if(Lastblock % 32 !=0){
	ands	r3,r8,#31
.L941:
	beq	.L35
.L425:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   312  		uint32 local_data_holder ;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   313  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   314  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   315  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   316  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r1,[r4,r1,lsl #2]
.L568:
	movs	r0,#0
.L571:
	orrs	r0,r0,r1
.L942:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   317  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   318  		//local_data_holder = ((local_data_holder << (32 - Lastblock % 32)) | (1 << (31 - Lastblock % 32)));
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   319  		local_data_holder |= (1 << (31 - Lastblock % 32));
	rsbs	r3,r3,#31
.L943:
	movs	r1,#1
.L944:
	movs	r1,r1,lsl r3
.L945:
	orrs	r0,r0,r1
.L426:
	b	.L36
.L35:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   320  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   321  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   322  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   323  	else{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   324  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   325  	/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   326  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L36:
	str	r0,[lr,#0]
.L946:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   327  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   328  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   329  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   330  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   331  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   332  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   333  	if (((uint32)(Lastblock/32)) != 13)
	cmp	r9,#13
	beq	.L37
.L947:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   334  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   335  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   336    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   337  		if (((uint32)(Lastblock/32)) >13)
	cmp	r9,#13
	bls	.L38
.L428:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   338  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   339  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   340  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L572:
	b	.L39
.L40:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   341  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   342  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L948:
	str	r1,[lr,#0]
.L949:
	adds	r0,r0,#1
.L573:
	uxtb	r0,r0
.L39:
	movs	r1,#13
.L950:
	udiv	r3,r9,r1
	mul	r1,r1,r3
	subs	r1,r9,r1
.L951:
	rsbs	r1,r1,#16
.L952:
	cmp	r0,r1
	blo	.L40
.L429:
	b	.L41
.L38:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   343  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   344  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   345  		else if(((uint32)(Lastblock/32)) == 0){
	cmp	r9,#0
	bne	.L42
.L431:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   346  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   347  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L574:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   348  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   349  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L953:
	b	.L43
.L44:
	str	r1,[lr,#0]
.L954:
	adds	r0,r0,#1
.L43:
	cmp	r0,#13
	blt	.L44
.L432:
	b	.L45
.L42:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   350  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   351  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   352  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   353  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   354  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   355  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   356  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L575:
	b	.L46
.L47:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   357  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   358  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L955:
	str	r1,[lr,#0]
.L956:
	adds	r0,r0,#1
.L576:
	uxtb	r0,r0
.L46:
	rsbs	r1,r9,#13
.L957:
	cmp	r0,r1
	blo	.L47
.L45:
.L41:
.L37:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   359  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   360  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   361  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   362  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   363  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   364  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   365  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   366  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   367  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L958:
	str	r0,[lr,#0]
.L959:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   368  	*(HASH_DATA) = (uint32)(Input_size);
	str	r6,[lr,#0]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   369  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   370  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   371  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   372  	/* If all data (including padding and bit counter) has been written Poll until HASH_STAT.BSY is 0.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   373  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
.L49:
	ldr	r0,[r2,#0]
.L960:
	tst	r0,#1
	bne	.L49
.L435:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   374  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   375  	/* While HASH_STAT.CNT is not 0, read the hash result from register HASH_VAL*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   376  	for (uint8 i = 0; i < 7; i++)
	movs	r0,#0
.L577:
	b	.L50
.L51:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   377  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   378  		*(Hash_output++) = *(HASH_VAL);
	movs	r1,#-402653184
.L961:
	ldr	r1,[r1,#1036]
.L962:
	str	r1,[r5],#4
.L963:
	adds	r0,r0,#1
.L50:
	cmp	r0,#7
	blt	.L51
.L436:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   379  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   380  	/*output size of SHA-224 is 7 words*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   381  	*(Output_size) = 7;
	movs	r0,#7
.L578:
	str	r0,[r7,#0]
.L964:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   382  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   383  }
	pop	{r4,r5,r6,r7,r8,r9,pc}
.L407:
	.align	4
.L206:
	.dw	SHA_224_Configuration
.L288:
	.size	SHA224_HashCalculate,$-SHA224_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_SHA1_HashCalculate')
	.global	SHA1_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   384  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   385  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   386  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   387  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   388  /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   389   * @brief 		SHA-1 Hashing data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   390   * This Function Calculates a SHA-1 hash digest of a given data stream, producing a 160-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   391   * @service name    			SHA1_HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   392   * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   393   * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   394   * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   395   * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   396   * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   397   * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   398   * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   399   * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   400   * @note            Calculates a SHA-1 hash digest of a given data stream, producing a 160-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   401   * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   402   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   403  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   404  void SHA1_HashCalculate(uint32*  Hash_input , uint32*  Hash_output ,uint32 Input_size , uint32* Output_size )
; Function SHA1_HashCalculate
.L293:
	.thumb
	.align	4
SHA1_HashCalculate:	.type	func

.L222:
	push	{r4,r5,r6,r7,r8,r9,lr}
.L579:
	mov	r4,r0
.L582:
	mov	r5,r1
.L583:
	mov	r6,r2
.L584:
	mov	r7,r3
.L586:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   405  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   406  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   407  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   408  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   409  	/* HASH_CFG.ALGO set to 10 for SHA-1  , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, 0B NO_IV, Hashing starts from scratch. The initialization value is ignored.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   410  	HASH_CFG->CFG_REG = ((SHA_1_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   411  			(SHA_1_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   412  			(SHA_1_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   413  			(SHA_1_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   414  			(SHA_1_Configuration.IVmode )) ;
	ldr	lr,.L207
.L969:
	ldrb	r1,[lr,#0]
.L580:
	ldrb	r3,[lr,#2]
.L581:
	orrs	r1,r1,r3
.L970:
	ldrb	r3,[lr,#1]
.L971:
	orrs	r1,r1,r3
.L972:
	ldrb	r3,[lr,#3]
.L973:
	orrs	r1,r1,r3
.L974:
	ldrb	r3,[lr,#4]
.L975:
	orrs	r1,r1,r3
.L976:
	movs	r3,#-402653184
.L977:
	str	r1,[r3,#1024]
.L978:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   415  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   416      ChangeEndianness((uint32*)Hash_input, Input_size);
	mov	r1,r2
.L585:
	bl	ChangeEndianness
.L443:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   417  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   418  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   419  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   420  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   421      /* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   422  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L979:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   423  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   424  		Input_size = Input_size*8 ;
	it	ne
.L587:
	movne	r6,r6,lsl #3
.L52:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   425  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   426  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   427      /*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   428  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r6,lsr #9
.L445:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   429  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   430  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   431  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	lr,r6,#0,#9
.L448:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   432  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   433  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   434  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   435  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   436  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   437  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   438  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   439  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   440  			*(HASH_DATA) = Hash_input[i];
	movw	r3,#@lsh(-402652144)
	movt	r3,#@msh(-402652144)
.L449:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   441  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   442  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   443  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   444  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
	movw	r8,#@lsh(-402652156)
	movt	r8,#@msh(-402652156)
.L980:
	b	.L53
.L54:
	movs	r0,#0
.L588:
	b	.L55
.L56:
	ldr	r2,[r4,r0,lsl #2]
.L981:
	str	r2,[r3,#0]
.L982:
	adds	r0,r0,#1
.L55:
	cmp	r0,#16
	blt	.L56
.L58:
	ldr	r0,[r8,#0]
.L983:
	tst	r0,#4
	beq	.L58
.L984:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   445  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   446  		NumOfBlocks--;
	subs	r1,r1,#1
.L53:
	cmp	r1,#0
	bne	.L54
.L451:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   447  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   448  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   449  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   450  	uint32 NumofWords = NumOfBlocks*16;
	movs	r1,r1,lsl #4
.L453:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   451  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   452  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   453  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r0,#0
.L590:
	movs	r9,lr,lsr #5
.L985:
	b	.L59
.L60:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   454  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   455  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r2,[r4,r1,lsl #2]
.L986:
	str	r2,[r3,#0]
.L987:
	adds	r1,r1,#1
.L988:
	adds	r0,r0,#1
.L591:
	uxtb	r0,r0
.L59:
	cmp	r0,r9
	blo	.L60
.L454:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   456  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   457  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   458  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   459  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   460  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   461  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   462  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   463  	if(Lastblock % 32 !=0)
	ands	r2,lr,#31
.L989:
	beq	.L61
.L456:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   464      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   465  		uint32 local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   466          
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   467  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   468  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   469  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   470  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   471  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r1,[r4,r1,lsl #2]
.L589:
	movs	r0,#0
.L592:
	orrs	r0,r0,r1
.L990:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   472  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   473  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   474  		local_data_holder |= (1 << (31 - Lastblock % 32));
	rsbs	r2,r2,#31
.L991:
	movs	r1,#1
.L992:
	movs	r1,r1,lsl r2
.L993:
	orrs	r0,r0,r1
.L457:
	b	.L62
.L61:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   475  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   476  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   477  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   478  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   479  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   480  	else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   481      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   482  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   483  	/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   484  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L62:
	str	r0,[r3,#0]
.L994:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   485  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   486  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   487  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   488  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   489  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   490  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   491  	if (((uint32)(Lastblock/32)) != 13)
	cmp	r9,#13
	beq	.L63
.L995:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   492  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   493  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   494    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   495  		if (((uint32)(Lastblock/32)) >13)
	cmp	r9,#13
	bls	.L64
.L459:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   496  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   497  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   498  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L593:
	b	.L65
.L66:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   499  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   500  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L996:
	str	r1,[r3,#0]
.L997:
	adds	r0,r0,#1
.L594:
	uxtb	r0,r0
.L65:
	movs	r1,#13
.L998:
	udiv	r2,r9,r1
	mul	r1,r1,r2
	subs	r1,r9,r1
.L999:
	rsbs	r1,r1,#16
.L1000:
	cmp	r0,r1
	blo	.L66
.L460:
	b	.L67
.L64:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   501  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   502  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   503  		else if(((uint32)(Lastblock/32)) == 0){
	cmp	r9,#0
	bne	.L68
.L462:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   504  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   505  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L595:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   506  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   507  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1001:
	b	.L69
.L70:
	str	r1,[r3,#0]
.L1002:
	adds	r0,r0,#1
.L69:
	cmp	r0,#13
	blt	.L70
.L463:
	b	.L71
.L68:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   508  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   509  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   510  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   511  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   512  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   513  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   514  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L596:
	b	.L72
.L73:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   515  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   516  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1003:
	str	r1,[r3,#0]
.L1004:
	adds	r0,r0,#1
.L597:
	uxtb	r0,r0
.L72:
	rsbs	r1,r9,#13
.L1005:
	cmp	r0,r1
	blo	.L73
.L71:
.L67:
.L63:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   517  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   518  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   519  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   520  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   521  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   522  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   523  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   524  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   525  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L1006:
	str	r0,[r3,#0]
.L1007:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   526  	*(HASH_DATA) = (uint32)(Input_size );
	str	r6,[r3,#0]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   527  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   528  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   529  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   530  	/* If all data (including padding and bit counter) has been written Poll until HASH_STAT.BSY is 0.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   531  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
.L75:
	ldr	r0,[r8,#0]
.L1008:
	tst	r0,#1
	bne	.L75
.L466:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   532  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   533  	/* While HASH_STAT.CNT is not 0, read the hash result from register HASH_VAL*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   534  	for (uint8 i = 0; i < 5; i++)
	movs	r0,#0
.L598:
	b	.L76
.L77:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   535  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   536  		*(Hash_output++) = *(HASH_VAL);
	movs	r1,#-402653184
.L1009:
	ldr	r1,[r1,#1036]
.L1010:
	str	r1,[r5],#4
.L1011:
	adds	r0,r0,#1
.L76:
	cmp	r0,#5
	blt	.L77
.L467:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   537  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   538  	/*output size of SHA-1 is 5 words*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   539  	*(Output_size) = 5;
	movs	r0,#5
.L599:
	str	r0,[r7,#0]
.L1012:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   540  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   541  }
	pop	{r4,r5,r6,r7,r8,r9,pc}
.L438:
	.align	4
.L207:
	.dw	SHA_1_Configuration
.L294:
	.size	SHA1_HashCalculate,$-SHA1_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_SHA256_HashCalculate')
	.global	SHA256_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   542  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   543  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   544  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   545  /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   546   * @brief 		SHA-256 Hashing data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   547   * This Function Calculates a SHA-256 hash digest of a given data stream, producing a 256-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   548   * @service name    			SHA256_HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   549   * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   550   * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   551   * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   552   * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   553   * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   554   * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   555   * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   556   * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   557   * @note            Calculates a SHA-256 hash digest of a given data stream, producing a 256-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   558   * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   559   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   560  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   561  void SHA256_HashCalculate(uint32*  Hash_input , uint32*  Hash_output ,uint32 Input_size , uint32* Output_size )
; Function SHA256_HashCalculate
.L299:
	.thumb
	.align	4
SHA256_HashCalculate:	.type	func

.L224:
	push	{r4,r5,r6,r7,r8,r9,lr}
.L600:
	mov	r4,r0
.L603:
	mov	r5,r1
.L604:
	mov	r6,r2
.L605:
	mov	r7,r3
.L606:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   562  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   563  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   564      ChangeEndianness((uint32*)Hash_input, Input_size);
	mov	r1,r2
.L602:
	bl	ChangeEndianness
.L601:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   565  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   566  	/* HASH_CFG.ALGO set to 11 for SHA-256   , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, 0B NO_IV, Hashing starts from scratch. The initialization value is ignored.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   567  	HASH_CFG->CFG_REG = ((SHA_256_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   568  			(SHA_256_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   569  			(SHA_256_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   570  			(SHA_256_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   571  			(SHA_256_Configuration.IVmode )) ;
	ldr	r0,.L208
.L1017:
	ldrb	r1,[r0,#0]
.L1018:
	ldrb	r2,[r0,#2]
.L1019:
	orrs	r1,r1,r2
.L1020:
	ldrb	r2,[r0,#1]
.L1021:
	orrs	r1,r1,r2
.L1022:
	ldrb	r2,[r0,#3]
.L1023:
	orrs	r1,r1,r2
.L1024:
	ldrb	r0,[r0,#4]
.L1025:
	orrs	r1,r1,r0
.L1026:
	movs	r0,#-402653184
.L1027:
	str	r1,[r0,#1024]
.L474:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   572  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   573  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   574  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   575  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   576  	/* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   577  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L1028:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   578  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   579  		Input_size = Input_size*8 ;
	it	ne
.L607:
	movne	r6,r6,lsl #3
.L78:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   580  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   581  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   582  	/*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   583  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r6,lsr #9
.L476:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   584  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   585  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   586  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	lr,r6,#0,#9
.L479:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   587  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   588  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   589  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   590  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   591  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   592  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   593  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   594  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   595  			*(HASH_DATA) = Hash_input[i];
	movw	r3,#@lsh(-402652144)
	movt	r3,#@msh(-402652144)
.L480:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   596  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   597  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   598  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   599  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
	movw	r8,#@lsh(-402652156)
	movt	r8,#@msh(-402652156)
.L1029:
	b	.L79
.L80:
	movs	r0,#0
.L608:
	b	.L81
.L82:
	ldr	r2,[r4,r0,lsl #2]
.L1030:
	str	r2,[r3,#0]
.L1031:
	adds	r0,r0,#1
.L81:
	cmp	r0,#16
	blt	.L82
.L84:
	ldr	r0,[r8,#0]
.L1032:
	tst	r0,#4
	beq	.L84
.L1033:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   600  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   601  		NumOfBlocks--;
	subs	r1,r1,#1
.L79:
	cmp	r1,#0
	bne	.L80
.L482:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   602  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   603  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   604  	uint32 NumofWords = NumOfBlocks*16;
	movs	r1,r1,lsl #4
.L484:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   605  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   606  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   607  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r0,#0
.L610:
	movs	r9,lr,lsr #5
.L1034:
	b	.L85
.L86:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   608  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   609  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r2,[r4,r1,lsl #2]
.L1035:
	str	r2,[r3,#0]
.L1036:
	adds	r1,r1,#1
.L1037:
	adds	r0,r0,#1
.L611:
	uxtb	r0,r0
.L85:
	cmp	r0,r9
	blo	.L86
.L485:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   610  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   611  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   612  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   613  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   614  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   615  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   616  	if(Lastblock % 32 !=0)
	ands	r2,lr,#31
.L1038:
	beq	.L87
.L487:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   617      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   618  		uint32 local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   619          
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   620  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   621  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   622  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   623  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   624  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r1,[r4,r1,lsl #2]
.L609:
	movs	r0,#0
.L612:
	orrs	r0,r0,r1
.L1039:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   625  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   626  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   627  		local_data_holder = local_data_holder | (1 << (31 - Lastblock % 32));
	rsbs	r2,r2,#31
.L1040:
	movs	r1,#1
.L1041:
	movs	r1,r1,lsl r2
.L1042:
	orrs	r0,r0,r1
.L488:
	b	.L88
.L87:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   628  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   629  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   630  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   631  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   632  	else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   633  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   634  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   635  		/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   636  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L88:
	str	r0,[r3,#0]
.L1043:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   637  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   638  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   639  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   640  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   641  	if (((uint32)(Lastblock/32)) != 13)
	cmp	r9,#13
	beq	.L89
.L1044:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   642  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   643  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   644    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   645  		if (((uint32)(Lastblock/32)) >13)
	cmp	r9,#13
	bls	.L90
.L490:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   646  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   647  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   648  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L613:
	b	.L91
.L92:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   649  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   650  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1045:
	str	r1,[r3,#0]
.L1046:
	adds	r0,r0,#1
.L614:
	uxtb	r0,r0
.L91:
	movs	r1,#13
.L1047:
	udiv	r2,r9,r1
	mul	r1,r1,r2
	subs	r1,r9,r1
.L1048:
	rsbs	r1,r1,#16
.L1049:
	cmp	r0,r1
	blo	.L92
.L491:
	b	.L93
.L90:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   651  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   652  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   653  		else if(((uint32)(Lastblock/32)) == 0){
	cmp	r9,#0
	bne	.L94
.L493:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   654  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   655  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L615:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   656  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   657  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1050:
	b	.L95
.L96:
	str	r1,[r3,#0]
.L1051:
	adds	r0,r0,#1
.L95:
	cmp	r0,#13
	blt	.L96
.L494:
	b	.L97
.L94:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   658  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   659  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   660  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   661  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   662  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   663  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   664  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L616:
	b	.L98
.L99:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   665  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   666  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1052:
	str	r1,[r3,#0]
.L1053:
	adds	r0,r0,#1
.L617:
	uxtb	r0,r0
.L98:
	rsbs	r1,r9,#13
.L1054:
	cmp	r0,r1
	blo	.L99
.L97:
.L93:
.L89:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   667  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   668  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   669  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   670  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   671  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   672  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   673  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   674  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L1055:
	str	r0,[r3,#0]
.L1056:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   675  	*(HASH_DATA) = (uint32)(Input_size );
	str	r6,[r3,#0]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   676  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   677  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   678  	/* If all data (including padding and bit counter) has been written Poll until HASH_STAT.BSY is 0.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   679  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
.L101:
	ldr	r0,[r8,#0]
.L1057:
	tst	r0,#1
	bne	.L101
.L497:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   680  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   681  	/* While HASH_STAT.CNT is not 0, read the hash result from register HASH_VAL*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   682  	for (uint8 i = 0; i < 8; i++)
	movs	r0,#0
.L618:
	b	.L102
.L103:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   683  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   684  		Hash_output[i] = *(HASH_VAL);
	movs	r1,#-402653184
.L1058:
	ldr	r1,[r1,#1036]
.L1059:
	str	r1,[r5,r0,lsl #2]
.L1060:
	adds	r0,r0,#1
.L102:
	cmp	r0,#8
	blt	.L103
.L498:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   685  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   686  	/*output size of SHA-256 is 8 words*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   687  	*(Output_size) = 8;
	movs	r0,#8
.L619:
	str	r0,[r7,#0]
.L1061:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   688  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   689  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   690  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   691  }
	pop	{r4,r5,r6,r7,r8,r9,pc}
.L469:
	.align	4
.L208:
	.dw	SHA_256_Configuration
.L300:
	.size	SHA256_HashCalculate,$-SHA256_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_MD5_HashCalculate')
	.global	MD5_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   692  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   693  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   694  /**
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   695   * @brief 		MD-5 Hashing data
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   696   * This Function Calculates a MD-5 hash digest of a given data stream, producing a 128-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   697   * @service name    			MD5_HashCalculate
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   698   * @syntax
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   699   * @service ID     	 			-
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   700   * @sync/async      			Synchronous
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   701   * @reentrancy      			Non-Reentrant
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   702   * @param[in] Service_cfg 		Pointer to datatype Hash_Service
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   703   * @param[out]      -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   704   * @return          			void
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   705   * @see
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   706   * @note             Calculates an MD-5 hash digest of a given data stream, producing a 128-bit output.
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   707   * @warning         -
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   708   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   709  void MD5_HashCalculate(uint32*  Hash_input , uint32*  Hash_output ,uint32 Input_size , uint32* Output_size )
; Function MD5_HashCalculate
.L305:
	.thumb
	.align	4
MD5_HashCalculate:	.type	func

.L226:
	push	{r4,r5,r6,r7,r8,r9,lr}
.L620:
	mov	r4,r0
.L623:
	mov	r6,r1
.L625:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   710  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   711  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   712  	/* HASH_CFG.ALGO set to 01 for MD-5   , MD-5 expects little-endian data (BEND_OUT = 1, BEND_IN = 1) , First word of the output packet is the most significant word, 0B NO_IV, Hashing starts from scratch. The initialization value is ignored.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   713  	HASH_CFG->CFG_REG = ((MD_5_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   714  			(MD_5_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   715  			(MD_5_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   716  			(MD_5_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   717  			(MD_5_Configuration.IVmode )) ;
	ldr	r5,.L209
.L1066:
	ldrb	r0,[r5,#0]
.L621:
	ldrb	r1,[r5,#2]
.L622:
	orrs	r0,r0,r1
.L1067:
	ldrb	r1,[r5,#1]
.L1068:
	orrs	r0,r0,r1
.L1069:
	ldrb	r1,[r5,#3]
.L1070:
	orrs	r0,r0,r1
.L1071:
	ldrb	r1,[r5,#4]
.L1072:
	orrs	r0,r0,r1
.L1073:
	movs	r1,#-402653184
.L1074:
	str	r0,[r1,#1024]
.L505:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   718  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   719  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   720  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   721  		/*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   722  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r8,r2,lsr #9
.L507:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   723  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   724  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   725  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	r7,r2,#0,#9
.L626:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   726  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   727  	uint32 NumofWords = 0; 
	movs	r5,#0
.L511:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   728  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   729  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   730  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   731  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   732  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   733  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   734  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   735  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   736  			*(HASH_DATA) = Hash_input[NumofWords++];
	movw	lr,#@lsh(-402652144)
	movt	lr,#@msh(-402652144)
.L512:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   737  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   738  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   739  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   740  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
	movw	r9,#@lsh(-402652156)
	movt	r9,#@msh(-402652156)
.L1075:
	b	.L104
.L105:
	movs	r0,#0
.L628:
	b	.L106
.L107:
	ldr	r1,[r4,r5,lsl #2]
.L1076:
	str	r1,[lr,#0]
.L1077:
	adds	r5,r5,#1
.L1078:
	adds	r0,r0,#1
.L106:
	cmp	r0,#16
	blt	.L107
.L109:
	ldr	r0,[r9,#0]
.L1079:
	tst	r0,#4
	beq	.L109
.L1080:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   741  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   742  		NumOfBlocks--;
	subs	r8,r8,#1
.L104:
	cmp	r8,#0
	bne	.L105
.L514:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   743  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   744  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   745  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   746  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   747  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r0,#0
.L629:
	movs	r1,r7,lsr #5
.L1081:
	b	.L110
.L111:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   748  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   749  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r8,[r4,r5,lsl #2]
.L1082:
	str	r8,[lr,#0]
.L1083:
	adds	r5,r5,#1
.L1084:
	adds	r0,r0,#1
.L630:
	uxtb	r0,r0
.L110:
	cmp	r0,r1
	blo	.L111
.L515:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   750  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   751  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   752  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   753  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   754  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   755  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   756  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   757  	if(Lastblock % 32 !=0){
	ands	r7,r7,#31
.L627:
	beq	.L112
.L517:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   758  		uint32 local_data_holder ;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   759  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   760  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   761  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   762  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r4,[r4,r5,lsl #2]
.L624:
	movs	r0,#0
.L631:
	orrs	r0,r0,r4
.L1085:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   763  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   764  		local_data_holder |= (1 << (31 - Lastblock % 32));
	rsbs	r7,r7,#31
.L1086:
	movs	r4,#1
.L1087:
	movs	r4,r4,lsl r7
.L1088:
	orrs	r0,r0,r4
.L518:
	b	.L113
.L112:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   765  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   766  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   767  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   768  	else{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   769  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   770  	/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   771  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L113:
	str	r0,[lr,#0]
.L1089:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   772  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   773  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   774  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   775  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   776  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   777  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   778  	if (((uint32)(Lastblock/32)) != 13)
	cmp	r1,#13
	beq	.L114
.L1090:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   779  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   780  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   781    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   782  		if (((uint32)(Lastblock/32)) >13)
	cmp	r1,#13
	bls	.L115
.L520:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   783  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   784  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   785  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L632:
	b	.L116
.L117:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   786  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   787  				*(HASH_DATA)  = 0x00000000;
	movs	r4,#0
.L1091:
	str	r4,[lr,#0]
.L1092:
	adds	r0,r0,#1
.L633:
	uxtb	r0,r0
.L116:
	movs	r4,#13
.L1093:
	udiv	r5,r1,r4
	mul	r4,r4,r5
	subs	r4,r1,r4
.L1094:
	rsbs	r4,r4,#16
.L1095:
	cmp	r0,r4
	blo	.L117
.L521:
	b	.L118
.L115:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   788  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   789  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   790  		else if(((uint32)(Lastblock/32)) == 0){
	cbnz	r1,.L119
.L523:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   791  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   792  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L634:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   793  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   794  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L1096:
	b	.L120
.L121:
	str	r1,[lr,#0]
.L1097:
	adds	r0,r0,#1
.L120:
	cmp	r0,#13
	blt	.L121
.L524:
	b	.L122
.L119:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   795  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   796  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   797  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   798  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   799  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   800  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   801  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L635:
	b	.L123
.L124:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   802  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   803  				*(HASH_DATA)  = 0x00000000;
	movs	r4,#0
.L1098:
	str	r4,[lr,#0]
.L1099:
	adds	r0,r0,#1
.L636:
	uxtb	r0,r0
.L123:
	rsbs	r4,r1,#13
.L1100:
	cmp	r0,r4
	blo	.L124
.L122:
.L118:
.L114:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   804  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   805  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   806  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   807  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   808  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   809  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   810  	/* At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   811  	/* For MD-5, the low order word is appended first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   812  	*(HASH_DATA) = (uint32)(Input_size );
	str	r2,[lr,#0]
.L1101:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   813  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L1102:
	str	r0,[lr,#0]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   814  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   815  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   816  	/* If all data (including padding and bit counter) has been written Poll until HASH_STAT.BSY is 0.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   817  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
.L126:
	ldr	r0,[r9,#0]
.L1103:
	tst	r0,#1
	bne	.L126
.L527:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   818  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   819  	/* While HASH_STAT.CNT is not 0, read the hash result from register HASH_VAL*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   820  	for (uint8 i = 0; i <4; i++)
	movs	r0,#0
.L637:
	b	.L127
.L128:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   821  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   822  		Hash_output[i] = *(HASH_VAL);
	movs	r1,#-402653184
.L1104:
	ldr	r1,[r1,#1036]
.L1105:
	str	r1,[r6,r0,lsl #2]
.L1106:
	adds	r0,r0,#1
.L127:
	cmp	r0,#4
	blt	.L128
.L528:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   823  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   824  	/*output size of MD-5 is 4 words*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   825  	*(Output_size) = 4;
	movs	r0,#4
.L638:
	str	r0,[r3,#0]
.L1107:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   826  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   827  }
	pop	{r4,r5,r6,r7,r8,r9,pc}
.L500:
	.align	4
.L209:
	.dw	MD_5_Configuration
.L306:
	.size	MD5_HashCalculate,$-MD5_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_Asynchronous_SHA256_HashCalculate')
	.global	Asynchronous_SHA256_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   828  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   829  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   830  /*                       	  Asynchronous Function Definition                         */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   831  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   832  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   833  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   834  void Asynchronous_SHA256_HashCalculate(uint32*  Hash_input  ,uint32 Input_size ,uint32* Output_size)
; Function Asynchronous_SHA256_HashCalculate
.L269:
	.thumb
	.align	4
Asynchronous_SHA256_HashCalculate:	.type	func

.L228:
	push	{r4,r5,r6,r7,lr}
.L639:
	mov	r4,r0
.L641:
	mov	r5,r1
.L642:
	mov	r6,r2
.L643:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   835  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   836  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   837  	/* HASH_CFG.ALGO set to 11 for SHA-256   , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, 0B NO_IV, Hashing starts from scratch. The initialization value is ignored.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   838  	HASH_CFG->CFG_REG = ((SHA_256_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   839  			(SHA_256_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   840  			(SHA_256_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   841  			(SHA_256_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   842  			(SHA_256_Configuration.IVmode )) ;
	ldr	r7,.L210
.L748:
	ldrb	r2,[r7,#0]
.L640:
	ldrb	r3,[r7,#2]
.L749:
	orrs	r2,r2,r3
.L750:
	ldrb	r3,[r7,#1]
.L751:
	orrs	r2,r2,r3
.L752:
	ldrb	r3,[r7,#3]
.L753:
	orrs	r2,r2,r3
.L754:
	ldrb	r3,[r7,#4]
.L755:
	orrs	r2,r2,r3
.L756:
	movs	r3,#-402653184
.L757:
	str	r2,[r3,#1024]
.L758:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   843  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   844  	/* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   845  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   846  	ChangeEndianness((uint32*)Hash_input, Input_size);
	bl	ChangeEndianness
.L330:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   847  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   848  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   849  	/* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   850  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L759:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   851  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   852  		Input_size = Input_size*8 ;
	it	ne
	movne	r5,r5,lsl #3
.L129:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   853  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   854  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   855  	/*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   856  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r5,lsr #9
.L332:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   857  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   858  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   859  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	r7,r5,#0,#9
.L335:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   860  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   861  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   862  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   863  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   864  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   865  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   866  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   867  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   868  			*(HASH_DATA) = Hash_input[i];
	movw	r3,#@lsh(-402652144)
	movt	r3,#@msh(-402652144)
.L336:
	b	.L130
.L131:
	movs	r0,#0
.L646:
	b	.L132
.L133:
	ldr	r2,[r4,r0,lsl #2]
.L760:
	str	r2,[r3,#0]
.L761:
	adds	r0,r0,#1
.L132:
	cmp	r0,#16
	blt	.L133

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   869  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   870  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   871  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   872  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
.L135:
	movs	r0,#-402653184
	ldr	r0,[r0,#1028]
.L762:
	tst	r0,#4
	beq	.L135
.L763:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   873  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   874  		NumOfBlocks--;
	subs	r1,r1,#1
.L130:
	cmp	r1,#0
	bne	.L131
.L338:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   875  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   876  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   877  	uint32 NumofWords = NumOfBlocks*16;
	movs	r0,r1,lsl #4
.L340:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   878  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   879  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   880  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r1,#0
.L644:
	movs	lr,r7,lsr #5
.L764:
	b	.L136
.L137:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   881  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   882  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r2,[r4,r0,lsl #2]
.L765:
	str	r2,[r3,#0]
.L766:
	adds	r0,r0,#1
.L767:
	adds	r1,r1,#1
.L648:
	uxtb	r1,r1
.L136:
	cmp	r1,lr
	blo	.L137
.L341:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   883  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   884  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   885  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   886  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   887  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   888  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   889  	if(Lastblock % 32 !=0){
	ands	r7,r7,#31
.L645:
	beq	.L138
.L343:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   890  		uint32 local_data_holder ;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   891  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   892  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   893  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   894  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r1,[r4,r0,lsl #2]
.L649:
	movs	r0,#0
.L647:
	orrs	r0,r0,r1
.L768:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   895  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   896  		local_data_holder |= (1 << (31 - Lastblock % 32));
	rsbs	r7,r7,#31
.L769:
	movs	r1,#1
.L770:
	movs	r1,r1,lsl r7
.L771:
	orrs	r0,r0,r1
.L344:
	b	.L139
.L138:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   897  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   898  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   899  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   900  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   901  	else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   902  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   903  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   904  		/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   905  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L139:
	str	r0,[r3,#0]
.L772:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   906  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   907  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   908  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   909  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   910  	if (((uint32)(Lastblock/32)) != 13)
	cmp	lr,#13
	beq	.L140
.L773:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   911  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   912  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   913    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   914  		if (((uint32)(Lastblock/32)) >13)
	cmp	lr,#13
	bls	.L141
.L346:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   915  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   916  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   917  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L650:
	b	.L142
.L143:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   918  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   919  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L774:
	str	r1,[r3,#0]
.L775:
	adds	r0,r0,#1
.L651:
	uxtb	r0,r0
.L142:
	movs	r1,#13
.L776:
	udiv	r2,lr,r1
	mul	r1,r1,r2
	subs	r1,lr,r1
.L777:
	rsbs	r1,r1,#16
.L778:
	cmp	r0,r1
	blo	.L143
.L347:
	b	.L144
.L141:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   920  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   921  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   922  		else if(((uint32)(Lastblock/32)) == 0){
	cmp	lr,#0
	bne	.L145
.L349:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   923  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   924  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L652:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   925  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   926  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L779:
	b	.L146
.L147:
	str	r1,[r3,#0]
.L780:
	adds	r0,r0,#1
.L146:
	cmp	r0,#13
	blt	.L147
.L350:
	b	.L148
.L145:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   927  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   928  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   929  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   930  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   931  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   932  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   933  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L653:
	b	.L149
.L150:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   934  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   935  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L781:
	str	r1,[r3,#0]
.L782:
	adds	r0,r0,#1
.L654:
	uxtb	r0,r0
.L149:
	rsbs	r1,lr,#13
.L783:
	cmp	r0,r1
	blo	.L150
.L148:
.L144:
.L140:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   936  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   937  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   938  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   939  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   940  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   941  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   942  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   943  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   944  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L784:
	str	r0,[r3,#0]
.L785:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   945  	*(HASH_DATA) = (uint32)(Input_size );
	str	r5,[r3,#0]
.L786:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   946  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   947  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   948  	/*output size for Sha 256 algo */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   949  	*(Output_size) = 8;
	movs	r0,#8
.L787:
	str	r0,[r6,#0]
.L788:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   950  }
	pop	{r4,r5,r6,r7,pc}
.L326:
	.align	4
.L210:
	.dw	SHA_256_Configuration
.L270:
	.size	Asynchronous_SHA256_HashCalculate,$-Asynchronous_SHA256_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_Asynchronous_SHA224_HashCalculate')
	.global	Asynchronous_SHA224_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   951  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   952  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   953  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   954  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   955  void Asynchronous_SHA224_HashCalculate(uint32*  Hash_input  ,uint32 Input_size ,uint32* Output_size)
; Function Asynchronous_SHA224_HashCalculate
.L275:
	.thumb
	.align	4
Asynchronous_SHA224_HashCalculate:	.type	func

.L230:
	push	{r4,r5,r6,r7,lr}
.L655:
	mov	r4,r0
.L658:
	mov	r5,r1
.L659:
	mov	r6,r2
.L660:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   956  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   957  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   958  	/* HASH_CFG.ALGO set to 11 for SHA-224  , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, IV mode for SHA224 is set*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   959  	HASH_CFG->CFG_REG = ((SHA_224_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   960  			(SHA_224_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   961  			(SHA_224_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   962  			(SHA_224_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   963  			(SHA_224_Configuration.IVmode )) ;
	ldr	r7,.L211
.L793:
	ldrb	r2,[r7,#0]
.L657:
	ldrb	r3,[r7,#2]
.L794:
	orrs	r2,r2,r3
.L795:
	ldrb	r3,[r7,#1]
.L796:
	orrs	r2,r2,r3
.L797:
	ldrb	r3,[r7,#3]
.L798:
	orrs	r2,r2,r3
.L799:
	ldrb	r3,[r7,#4]
.L800:
	orrs	r2,r2,r3
.L801:
	movs	r3,#-402653184
.L802:
	str	r2,[r3,#1024]
.L803:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   964  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   965  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   966  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   967  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   968  	ChangeEndianness((uint32*)Hash_input, Input_size);
	bl	ChangeEndianness
.L656:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   969  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   970  	/* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   971  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L804:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   972  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   973  		Input_size = Input_size*8 ;
	it	ne
	movne	r5,r5,lsl #3
.L151:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   974  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   975  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   976  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   977  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   978  	/* If the HASH_STAT.BSY bit is set, writes to HASH_IVIN are ignored*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   979  	while (HASH_STAT->HASH_STAT_s.BSY != 0 );
	movw	r2,#@lsh(-402652156)
	movt	r2,#@msh(-402652156)
.L153:
	ldr	r0,[r2,#0]
.L805:
	tst	r0,#1
	bne	.L153
.L806:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   980  	/* Assigning IV Value to HASH_IVIN register first word is the most significant word and has to be
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   981        written first as well, all eight words are hexadecimal 32-bit values*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   982  	*(HASH_IVIN) = 0xC1059ED8;
	movw	r0,#@lsh(-1056596264)
	movt	r0,#@msh(-1056596264)
.L807:
	movs	r1,#-402653184
.L808:
	str	r0,[r1,#1032]
.L809:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   983  	*(HASH_IVIN) = 0x367CD507;
	movw	r0,#@lsh(914150663)
	movt	r0,#@msh(914150663)
.L810:
	str	r0,[r1,#1032]
.L811:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   984  	*(HASH_IVIN) = 0x3070DD17;
	movw	r0,#@lsh(812702999)
	movt	r0,#@msh(812702999)
.L812:
	str	r0,[r1,#1032]
.L813:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   985  	*(HASH_IVIN) = 0xF70E5939;
	movw	r0,#@lsh(-150054599)
	movt	r0,#@msh(-150054599)
.L814:
	str	r0,[r1,#1032]
.L815:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   986  	*(HASH_IVIN) = 0xFFC00B31;
	movw	r0,#@lsh(-4191439)
	movt	r0,#@msh(-4191439)
.L816:
	str	r0,[r1,#1032]
.L817:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   987  	*(HASH_IVIN) = 0x68581511;
	movw	r0,#@lsh(1750603025)
	movt	r0,#@msh(1750603025)
.L818:
	str	r0,[r1,#1032]
.L819:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   988  	*(HASH_IVIN) = 0x64F98FA7;
	movw	r0,#@lsh(1694076839)
	movt	r0,#@msh(1694076839)
.L820:
	str	r0,[r1,#1032]
.L821:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   989  	*(HASH_IVIN) = 0xBEFA4FA4;
	movw	r0,#@lsh(-1090891868)
	movt	r0,#@msh(-1090891868)
.L822:
	str	r0,[r1,#1032]

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   990  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   991  	/*  indicates that the initialization vector is ok*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   992  	while (HASH_STAT->HASH_STAT_s.IV_OK == 0 );
.L155:
	ldr	r0,[r2,#0]
.L823:
	tst	r0,#2
	beq	.L155
.L357:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   993  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   994  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   995  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   996  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   997  	/*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   998  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r5,lsr #9
.L359:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	   999  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1000  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1001  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	lr,r5,#0,#9
.L362:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1002  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1003  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1004  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1005  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1006  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1007  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1008  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1009  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1010  			*(HASH_DATA) = Hash_input[i];
	movw	r7,#@lsh(-402652144)
	movt	r7,#@msh(-402652144)
.L363:
	b	.L156
.L157:
	movs	r0,#0
.L662:
	b	.L158
.L159:
	ldr	r3,[r4,r0,lsl #2]
.L824:
	str	r3,[r7,#0]
.L825:
	adds	r0,r0,#1
.L158:
	cmp	r0,#16
	blt	.L159

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1011  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1012  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1013  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1014  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
.L161:
	ldr	r0,[r2,#0]
.L826:
	tst	r0,#4
	beq	.L161
.L827:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1015  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1016  		NumOfBlocks--;
	subs	r1,r1,#1
.L156:
	cmp	r1,#0
	bne	.L157
.L365:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1017  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1018  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1019  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1020  	uint32 NumofWords = NumOfBlocks*16;
	movs	r0,r1,lsl #4
.L367:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1021  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1022  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1023  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r1,#0
.L661:
	movs	r3,lr,lsr #5
.L828:
	b	.L162
.L163:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1024  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1025  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r2,[r4,r0,lsl #2]
.L829:
	str	r2,[r7,#0]
.L830:
	adds	r0,r0,#1
.L831:
	adds	r1,r1,#1
.L664:
	uxtb	r1,r1
.L162:
	cmp	r1,r3
	blo	.L163
.L368:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1026  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1027  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1028  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1029  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1030  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1031  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1032  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1033  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1034  	if(Lastblock % 32 !=0){
	ands	r1,lr,#31
.L665:
	beq	.L164
.L370:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1035  		uint32 local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1036  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1037  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1038  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1039  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r2,[r4,r0,lsl #2]
.L832:
	movs	r0,#0
.L663:
	orrs	r0,r0,r2
.L833:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1040  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1041  		local_data_holder  |= (1 << (31 - Lastblock % 32));
	rsbs	r1,r1,#31
.L834:
	movs	r2,#1
.L835:
	movs	r1,r2,lsl r1
.L836:
	orrs	r0,r0,r1
.L371:
	b	.L165
.L164:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1042  		
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1043  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1044  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1045  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1046  	else{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1047  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1048  	/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1049  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L165:
	str	r0,[r7,#0]
.L837:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1050  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1051  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1052  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1053  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1054  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1055  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1056  	if (((uint32)(Lastblock/32)) != 13)
	cmp	r3,#13
	beq	.L166
.L838:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1057  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1058  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1059    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1060  		if (((uint32)(Lastblock/32)) >13)
	cmp	r3,#13
	bls	.L167
.L373:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1061  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1062  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1063  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L666:
	b	.L168
.L169:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1064  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1065  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L839:
	str	r1,[r7,#0]
.L840:
	adds	r0,r0,#1
.L667:
	uxtb	r0,r0
.L168:
	movs	r1,#13
.L841:
	udiv	r2,r3,r1
	mul	r1,r1,r2
	subs	r1,r3,r1
.L842:
	rsbs	r1,r1,#16
.L843:
	cmp	r0,r1
	blo	.L169
.L374:
	b	.L170
.L167:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1066  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1067  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1068  		else if(((uint32)(Lastblock/32)) == 0){
	cbnz	r3,.L171
.L376:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1069  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1070  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L668:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1071  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1072  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L844:
	b	.L172
.L173:
	str	r1,[r7,#0]
.L845:
	adds	r0,r0,#1
.L172:
	cmp	r0,#13
	blt	.L173
.L377:
	b	.L174
.L171:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1073  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1074  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1075  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1076  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1077  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1078  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1079  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L669:
	b	.L175
.L176:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1080  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1081  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L846:
	str	r1,[r7,#0]
.L847:
	adds	r0,r0,#1
.L670:
	uxtb	r0,r0
.L175:
	rsbs	r1,r3,#13
.L848:
	cmp	r0,r1
	blo	.L176
.L174:
.L170:
.L166:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1082  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1083  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1084  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1085  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1086  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1087  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1088  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1089  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1090  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L849:
	str	r0,[r7,#0]
.L850:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1091  	*(HASH_DATA) = (uint32)(Input_size);
	str	r5,[r7,#0]
.L851:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1092  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1093  	/*output size for Sha 224 algo */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1094  	*(Output_size) = 7;
	movs	r0,#7
.L852:
	str	r0,[r6,#0]
.L853:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1095  }
	pop	{r4,r5,r6,r7,pc}
.L353:
	.align	4
.L211:
	.dw	SHA_224_Configuration
.L276:
	.size	Asynchronous_SHA224_HashCalculate,$-Asynchronous_SHA224_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_Asynchronous_SHA1_HashCalculate')
	.global	Asynchronous_SHA1_HashCalculate

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1096  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1097  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1098  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1099  void Asynchronous_SHA1_HashCalculate(uint32*  Hash_input  ,uint32 Input_size , uint32* Output_size )
; Function Asynchronous_SHA1_HashCalculate
.L281:
	.thumb
	.align	4
Asynchronous_SHA1_HashCalculate:	.type	func

.L232:
	push	{r4,r5,r6,r7,lr}
.L671:
	mov	r4,r0
.L673:
	mov	r5,r1
.L674:
	mov	r6,r2
.L675:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1100  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1101  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1102      ChangeEndianness((uint32*)Hash_input, Input_size);
	bl	ChangeEndianness
.L672:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1103  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1104  	/* HASH_CFG.ALGO set to 10 for SHA-1  , SHA-x expect big-endian data (BEND_OUT = 0 , BEND_IN = 0) , First word of the output packet is the most significant word, 0B NO_IV, Hashing starts from scratch. The initialization value is ignored.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1105  	HASH_CFG->CFG_REG = ((SHA_1_Configuration.ALGO_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1106  			(SHA_1_Configuration.BendOut_cfg  ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1107  			(SHA_1_Configuration.BendIn_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1108  			(SHA_1_Configuration.OrderOut_cfg ) |
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1109  			(SHA_1_Configuration.IVmode )) ;
	ldr	r0,.L212
.L858:
	ldrb	r1,[r0,#0]
.L859:
	ldrb	r2,[r0,#2]
.L860:
	orrs	r1,r1,r2
.L861:
	ldrb	r2,[r0,#1]
.L862:
	orrs	r1,r1,r2
.L863:
	ldrb	r2,[r0,#3]
.L864:
	orrs	r1,r1,r2
.L865:
	ldrb	r0,[r0,#4]
.L866:
	orrs	r1,r1,r0
.L867:
	movs	r0,#-402653184
.L868:
	str	r1,[r0,#1024]
.L384:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1110  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1111  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1112  	uint32 NumOfBlocks;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1113  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1114  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1115      /* Check if size is in bits or bytes*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1116  	if (SizeIsInBitsFlag == 0 )
	movs	r0,#1
.L869:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1117  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1118  		Input_size = Input_size*8 ;
	it	ne
	movne	r5,r5,lsl #3
.L177:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1119  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1120  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1121      /*Calculating no of input blocks*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1122  	NumOfBlocks = (uint32)( (Input_size)/512) ;
	movs	r1,r5,lsr #9
.L386:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1123  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1124  	/*Calculating no of words in the Last data block*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1125  	uint32 Lastblock = (Input_size) %512 ;
	ubfx	r7,r5,#0,#9
.L389:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1126  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1127  	/*Write 64 bytes of data (16 words) to be hashed to HASH_DATA*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1128  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1129  	while ( NumOfBlocks > 0)
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1130  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1131  		/* Data is written into a 32-bit wide FIFO which has 16 entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1132  		for (uint8 i = 0; i < 16; i++) {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1133  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1134  			*(HASH_DATA) = Hash_input[i];
	movw	r3,#@lsh(-402652144)
	movt	r3,#@msh(-402652144)
.L390:
	b	.L178
.L179:
	movs	r0,#0
.L678:
	b	.L180
.L181:
	ldr	r2,[r4,r0,lsl #2]
.L870:
	str	r2,[r3,#0]
.L871:
	adds	r0,r0,#1
.L180:
	cmp	r0,#16
	blt	.L181

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1135  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1136  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1137  		/* Poll until HASH_STAT.DF_NF is 1*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1138  		while (HASH_STAT->HASH_STAT_s.DF_NF == 0 );
.L183:
	movs	r0,#-402653184
	ldr	r0,[r0,#1028]
.L872:
	tst	r0,#4
	beq	.L183
.L873:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1139  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1140  		NumOfBlocks--;
	subs	r1,r1,#1
.L178:
	cmp	r1,#0
	bne	.L179
.L392:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1141  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1142  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1143  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1144  	uint32 NumofWords = NumOfBlocks*16;
	movs	r0,r1,lsl #4
.L394:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1145  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1146  	/* Data is written into a 32-bit wide FIFO which has last block entries*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1147  	for (uint8 i = 0; i < ((uint32)(Lastblock/32)) ; i++)
	movs	r1,#0
.L676:
	movs	lr,r7,lsr #5
.L874:
	b	.L184
.L185:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1148  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1149  		*(HASH_DATA) = Hash_input[NumofWords++];
	ldr	r2,[r4,r0,lsl #2]
.L875:
	str	r2,[r3,#0]
.L876:
	adds	r0,r0,#1
.L877:
	adds	r1,r1,#1
.L680:
	uxtb	r1,r1
.L184:
	cmp	r1,lr
	blo	.L185
.L395:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1150  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1151  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1152  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1153  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1154  	/* Padding:´1´ followed by a sequence of ´0´s */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1155  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1156  	/*in case last bits are less than a word*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1157  	if(Lastblock % 32 !=0)
	ands	r7,r7,#31
.L677:
	beq	.L186
.L397:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1158      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1159  		uint32 local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1160          
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1161  		/* clearing the local variable holding data of last bits*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1162  		local_data_holder &= ~(0xffffffff);
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1163  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1164  		/*inserting last data into the variable*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1165  		local_data_holder |= Hash_input[NumofWords++];
	ldr	r1,[r4,r0,lsl #2]
.L681:
	movs	r0,#0
.L679:
	orrs	r0,r0,r1
.L878:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1166  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1167  		/*adding the 1 right after the last data*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1168  		local_data_holder |= (1 << (31 - Lastblock % 32));
	rsbs	r7,r7,#31
.L879:
	movs	r1,#1
.L880:
	movs	r1,r1,lsl r7
.L881:
	orrs	r0,r0,r1
.L398:
	b	.L187
.L186:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1169  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1170  		/*appending the register with data +1 + padding*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1171  		*(HASH_DATA)  = local_data_holder;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1172  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1173  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1174  	else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1175      {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1176  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1177  	/*  A bit with value 1 is appended to the message */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1178  		*(HASH_DATA)  = 0x80000000;
	movs	r0,#-2147483648
.L187:
	str	r0,[r3,#0]
.L882:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1179  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1180  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1181  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1182  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1183  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1184  	/*  If only 3 words are left in the last block then no more additional padding needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1185  	if (((uint32)(Lastblock/32)) != 13)
	cmp	lr,#13
	beq	.L188
.L883:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1186  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1187  		/* If only 2 or 1 or 0 words in the last block are left then an additional block is added with as many padding 0-valued
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1188    bits as needed*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1189  		if (((uint32)(Lastblock/32)) >13)
	cmp	lr,#13
	bls	.L189
.L400:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1190  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1191  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1192  			for (uint8 i = 0; i < 16 - (((uint32)(Lastblock/32)) % 13); i++)
	movs	r0,#0
.L682:
	b	.L190
.L191:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1193  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1194  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L884:
	str	r1,[r3,#0]
.L885:
	adds	r0,r0,#1
.L683:
	uxtb	r0,r0
.L190:
	movs	r1,#13
.L886:
	udiv	r2,lr,r1
	mul	r1,r1,r2
	subs	r1,lr,r1
.L887:
	rsbs	r1,r1,#16
.L888:
	cmp	r0,r1
	blo	.L191
.L401:
	b	.L192
.L189:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1195  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1196  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1197  		else if(((uint32)(Lastblock/32)) == 0){
	cmp	lr,#0
	bne	.L193
.L403:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1198  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1199  			for (uint8 i = 0; i < 13; i++)
	movs	r0,#0
.L684:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1200  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1201  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L889:
	b	.L194
.L195:
	str	r1,[r3,#0]
.L890:
	adds	r0,r0,#1
.L194:
	cmp	r0,#13
	blt	.L195
.L404:
	b	.L196
.L193:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1202  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1203  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1204  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1205  		else /* If less than 13 words of data are written in the last block */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1206  		{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1207  			/* A sequence of bits with value 0 is appended */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1208  			for (uint8 i = 0; i < (13 - ((uint32)(Lastblock/32))); i++)
	movs	r0,#0
.L685:
	b	.L197
.L198:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1209  			{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1210  				*(HASH_DATA)  = 0x00000000;
	movs	r1,#0
.L891:
	str	r1,[r3,#0]
.L892:
	adds	r0,r0,#1
.L686:
	uxtb	r0,r0
.L197:
	rsbs	r1,lr,#13
.L893:
	cmp	r0,r1
	blo	.L198
.L196:
.L192:
.L188:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1211  			}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1212  		}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1213  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1214  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1215  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1216  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1217  	/*At the end of the 16-words block, a 64-bit representation of the effective message length in bits (without any padding) is appended.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1218  	/*For SHA-x, the high-order word is given first*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1219  	*(HASH_DATA) = 0x00000000;
	movs	r0,#0
.L894:
	str	r0,[r3,#0]
.L895:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1220  	*(HASH_DATA) = (uint32)(Input_size );
	str	r5,[r3,#0]
.L896:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1221  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1222  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1223  	/*output size for Sha 1 algo */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1224  	*(Output_size) = 5;
	movs	r0,#5
.L897:
	str	r0,[r6,#0]
.L898:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1225  }
	pop	{r4,r5,r6,r7,pc}
.L380:
	.align	4
.L212:
	.dw	SHA_1_Configuration
.L282:
	.size	Asynchronous_SHA1_HashCalculate,$-Asynchronous_SHA1_HashCalculate
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_isHashComplete')
	.global	isHashComplete

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1226  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1227  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1228  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1229  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1230  unsigned char isHashComplete (void)
; Function isHashComplete
.L257:
	.thumb
	.align	4
isHashComplete:	.type	func

.L234:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1231  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1232  	uint8 flag = HashIsBusyFlag;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1233  	/* If all data (including padding and bit counter) has been written Poll until HASH_STAT.BSY is 0.*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1234  	if (HASH_STAT->HASH_STAT_s.BSY == 0 )
	movs	r0,#-402653184
	ldr	r0,[r0,#1028]
.L733:
	tst	r0,#1
.L734:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1235  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1236  		flag = HashingIsCompleteFlag;
	itt	eq
	moveq	r0,#1
.L687:
	bxeq	lr
.L199:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1237  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1238  	else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1239  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1240  		flag =  HashIsBusyFlag;
	movs	r0,#0
.L200:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1241  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1242  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1243  	return flag;
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1244  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1245  }
	bx	lr
.L258:
	.size	isHashComplete,$-isHashComplete
	; End of function
	.endsec	; End of section

	.section	.text ,cluster('$group_getHashedValue')
	.global	getHashedValue

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1246  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1247  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1248  unsigned char getHashedValue( uint32* Hash_output, uint32 Output_size)
; Function getHashedValue
.L263:
	.thumb
	.align	4
getHashedValue:	.type	func

.L236:
	push	{r4}
.L688:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1249  {
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1250  	uint8 flag = HashIsNotReady;
	movs	r3,#0
.L323:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1251  	/* While HASH_STAT.CNT is not 0, read the hash result from register HASH_VAL*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1252  	for (uint8 i = 0; i < Output_size; i++)
	mov	r2,r3
.L691:
	b	.L202
.L203:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1253  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1254  		Hash_output[i] = *(HASH_VAL);
	movs	r4,#-402653184
.L739:
	ldr	r4,[r4,#1036]
.L740:
	str	r4,[r0,r2,lsl #2]
.L741:
	adds	r2,r2,#1
.L692:
	uxtb	r2,r2
.L202:
	cmp	r2,r1
	blo	.L203
.L324:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1255  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1256  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1257  	if (HASH_STAT->HASH_STAT_s.CNT == 0)
	movs	r0,#-402653184
.L690:
	ldr	r0,[r0,#1028]
.L742:
	tst	r0,#3840
.L743:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1258  	{
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1259  		/* All result registers are ready */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1260  		flag= HashIsReady;
	it	eq
	moveq	r3,#1
.L204:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1261  	}
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1262  	
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1263  	return flag;
	mov	r0,r3
.L693:

; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1264  	//else
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1265  		/* Return error*/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1266  }
	pop	{r4}
.L689:
	bx	lr
.L264:
	.size	getHashedValue,$-getHashedValue
	; End of function
	.endsec	; End of section

	.calls	'Synchronous_HashCalculate','SHA1_HashCalculate'
	.calls	'Synchronous_HashCalculate','SHA224_HashCalculate'
	.calls	'Synchronous_HashCalculate','SHA256_HashCalculate'
	.calls	'Synchronous_HashCalculate','MD5_HashCalculate'
	.calls	'Asynchronous_HashCalculate','Asynchronous_SHA1_HashCalculate'
	.calls	'Asynchronous_HashCalculate','Asynchronous_SHA224_HashCalculate'
	.calls	'Asynchronous_HashCalculate','Asynchronous_SHA256_HashCalculate'
	.calls	'SHA224_HashCalculate','ChangeEndianness'
	.calls	'SHA1_HashCalculate','ChangeEndianness'
	.calls	'SHA256_HashCalculate','ChangeEndianness'
	.calls	'Asynchronous_SHA256_HashCalculate','ChangeEndianness'
	.calls	'Asynchronous_SHA224_HashCalculate','ChangeEndianness'
	.calls	'Asynchronous_SHA1_HashCalculate','ChangeEndianness'
	.calls	'ChangeEndianness','',12
	.calls	'Synchronous_HashCalculate','',8
	.calls	'Asynchronous_HashCalculate','',4
	.calls	'SHA224_HashCalculate','',28
	.calls	'SHA1_HashCalculate','',28
	.calls	'SHA256_HashCalculate','',28
	.calls	'MD5_HashCalculate','',28
	.calls	'Asynchronous_SHA256_HashCalculate','',20
	.calls	'Asynchronous_SHA224_HashCalculate','',20
	.calls	'Asynchronous_SHA1_HashCalculate','',20
	.calls	'isHashComplete','',0
	.calls	'getHashedValue','',4
	.extern	SHA_224_Configuration
	.extern	SHA_256_Configuration
	.extern	MD_5_Configuration
	.extern	SHA_1_Configuration
	.section	.debug_info
.L238:
	.dw	660
	.dh	3
	.dw	.L239
	.db	4
.L237:
	.db	1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L240
.L316:
	.db	2
	.db	'unsigned char',0,1,8
.L320:
	.db	2
	.db	'unsigned int',0,4,7
.L318:
	.db	3
	.dw	47
	.db	4,1,70,10,20,5
	.db	'service_id',0
	.dw	30
	.db	1,2,35,0,5
	.db	'Hash_mode',0
	.dw	30
	.db	1,2,35,1,5
	.db	'Hash_input',0
	.dw	63
	.db	4,2,35,4,5
	.db	'Hash_output',0
	.dw	63
	.db	4,2,35,8,5
	.db	'Input_size',0
	.dw	47
	.db	4,2,35,12,5
	.db	'Output_size',0
	.dw	63
	.db	4,2,35,16,0
.L313:
	.db	3
	.dw	68
	.db	6,1,3
	.dw	200
	.db	7
	.db	'__codeptr',0,2,1,1
	.dw	202
	.db	7
	.db	'uint8',0,3,247,1,23
	.dw	30
	.db	2
	.db	'unsigned short int',0,2,7,7
	.db	'uint16',0,3,252,1,24
	.dw	240
	.db	7
	.db	'uint32',0,3,129,2,22
	.dw	47
	.db	7
	.db	'Std_ReturnType',0,4,235,2,15
	.dw	30
	.db	7
	.db	'Std_TransformerClass',0,4,238,2,15
	.dw	30
	.db	7
	.db	'Std_TransformerForwardCode',0,4,241,2,15
	.dw	30
	.db	4,5,107,10,5,5
	.db	'ALGO_cfg',0
	.dw	30
	.db	1,2,35,0,5
	.db	'BendIn_cfg',0
	.dw	30
	.db	1,2,35,1,5
	.db	'BendOut_cfg',0
	.dw	30
	.db	1,2,35,2,5
	.db	'OrderOut_cfg',0
	.dw	30
	.db	1,2,35,3,5
	.db	'IVmode',0
	.dw	30
	.db	1,2,35,4,0,7
	.db	'Hash_configurations',0,5,113,3
	.dw	384
	.db	8
	.db	'SHA_224_Configuration',0,5,141,1,29
	.dw	384
	.db	1,1,8
	.db	'SHA_256_Configuration',0,5,143,1,29
	.dw	384
	.db	1,1,8
	.db	'MD_5_Configuration',0,5,145,1,29
	.dw	384
	.db	1,1,8
	.db	'SHA_1_Configuration',0,5,147,1,29
	.dw	384
	.db	1,1,7
	.db	'Hash_Service',0,1,77,3
	.dw	68
	.db	0
	.endsec	; End of section

	.section	.debug_abbrev
.L239:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,19,1,58
	.db	15,59,15,57,15,11,15,0,0,5,13,0,3,8,73,19,11,15,56,9,0,0,6,21,0,54,15,0,0,7,22,0,3,8,58,15,59,15,57,15
	.db	73,19,0,0,8,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.endsec	; End of section

	.section	.debug_line
.L240:
	.dw	.L701-.L700
.L700:
	.dh	3
	.dw	.L703-.L702
.L702:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\..\\TC399x\\HSM\\Mcal\\Hash\\inc\\Hash.h',0,0,0,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Platform_Types.h',0,0,0,0
	.db	'..\\..\\AutoSar\\BSW\\static\\MCAL\\Infrastructure\\Platform\\Std_Types.h',0,0,0,0
	.db	'..\\..\\TC399x\\HSM\\Mcal\\Hash\\inc\\Hash_cfg.h',0,0,0,0,0
.L703:
.L701:
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_Asynchronous_HashCalculate')
.L241:
	.dw	118
	.dh	3
	.dw	.L242
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L244,.L243
	.db	2
	.dw	.L237
	.db	3
	.db	'Asynchronous_HashCalculate',0,1,199,1,8,1,1,1
	.dw	.L218,.L246,.L217
	.db	4
	.db	'Service_cfg',0,1,199,1,50
	.dw	.L313,.L314
	.db	5
	.dw	.L218,.L246
	.db	0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_Asynchronous_HashCalculate')
.L242:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_Asynchronous_HashCalculate')
.L243:
	.dw	.L705-.L704
.L704:
	.dh	3
	.dw	.L707-.L706
.L706:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L707:
	.db	5,8,7,0,5,2
	.dw	.L218
	.db	3,198,1,1,5,116,9
	.dh	.L555-.L218
	.db	3,3,1,5,81,9
	.dh	.L708-.L555
	.db	1,5,56,9
	.dh	.L709-.L708
	.db	1,5,17,9
	.dh	.L710-.L709
	.db	3,127,1,5,3,9
	.dh	.L556-.L710
	.db	1,5,116,9
	.dh	.L711-.L556
	.db	3,1,1,5,130,1,9
	.dh	.L712-.L711
	.db	1,5,8,7,9
	.dh	.L18-.L712
	.db	3,2,1,5,119,9
	.dh	.L713-.L18
	.db	3,1,1,5,133,1,9
	.dh	.L714-.L713
	.db	1,5,120,7,9
	.dh	.L20-.L714
	.db	3,3,1,5,2,9
	.dh	.L19-.L20
	.db	3,3,1,7,9
	.dh	.L246-.L19
	.db	0,1,1
.L705:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_Asynchronous_HashCalculate')
.L244:
	.dw	-1,.L245,0,.L246-.L245,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_Synchronous_HashCalculate')
.L247:
	.dw	117
	.dh	3
	.dw	.L248
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L250,.L249
	.db	2
	.dw	.L237
	.db	3
	.db	'Synchronous_HashCalculate',0,1,161,1,7,1,1,1
	.dw	.L216,.L252,.L215
	.db	4
	.db	'Service_cfg',0,1,161,1,48
	.dw	.L313,.L315
	.db	5
	.dw	.L216,.L252
	.db	0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_Synchronous_HashCalculate')
.L248:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_Synchronous_HashCalculate')
.L249:
	.dw	.L716-.L715
.L715:
	.dh	3
	.dw	.L718-.L717
.L717:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L718:
	.db	5,7,7,0,5,2
	.dw	.L216
	.db	3,160,1,1,5,122,9
	.dh	.L553-.L216
	.db	3,3,1,5,96,9
	.dh	.L719-.L553
	.db	1,5,69,9
	.dh	.L720-.L719
	.db	1,5,43,9
	.dh	.L721-.L720
	.db	1,5,17,9
	.dh	.L722-.L721
	.db	3,127,1,5,3,9
	.dh	.L554-.L722
	.db	1,5,122,9
	.dh	.L723-.L554
	.db	3,1,1,5,136,1,9
	.dh	.L724-.L723
	.db	1,5,8,7,9
	.dh	.L12-.L724
	.db	3,2,1,5,124,9
	.dh	.L725-.L12
	.db	3,1,1,5,138,1,9
	.dh	.L726-.L725
	.db	1,5,8,7,9
	.dh	.L14-.L726
	.db	3,2,1,5,124,9
	.dh	.L727-.L14
	.db	3,1,1,5,138,1,9
	.dh	.L728-.L727
	.db	1,5,112,7,9
	.dh	.L16-.L728
	.db	3,3,1,5,2,9
	.dh	.L13-.L16
	.db	3,3,1,7,9
	.dh	.L252-.L13
	.db	0,1,1
.L716:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_Synchronous_HashCalculate')
.L250:
	.dw	-1,.L251,0,.L252-.L251,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_isHashComplete')
.L253:
	.dw	104
	.dh	3
	.dw	.L254
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L256,.L255
	.db	2
	.dw	.L237
	.db	3
	.db	'isHashComplete',0,1,206,9,15
	.dw	.L316
	.db	1,1,1
	.dw	.L234,.L258,.L233
	.db	4
	.dw	.L234,.L258
	.db	5
	.db	'flag',0,1,208,9,8
	.dw	.L316,.L317
	.db	0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_isHashComplete')
.L254:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0
	.db	0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_isHashComplete')
.L255:
	.dw	.L730-.L729
.L729:
	.dh	3
	.dw	.L732-.L731
.L731:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L732:
	.db	5,28,7,0,5,2
	.dw	.L234
	.db	3,209,9,1,5,2,9
	.dh	.L733-.L234
	.db	1,5,10,9
	.dh	.L734-.L733
	.db	3,2,1,5,31,9
	.dh	.L687-.L734
	.db	1,5,11,7,9
	.dh	.L199-.L687
	.db	3,4,1,5,1,9
	.dh	.L200-.L199
	.db	3,5,1,7,9
	.dh	.L258-.L200
	.db	0,1,1
.L730:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_isHashComplete')
.L256:
	.dw	-1,.L257,0,.L258-.L257,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_getHashedValue')
.L259:
	.dw	179
	.dh	3
	.dw	.L260
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L262,.L261
	.db	2
	.dw	.L237
	.db	3
	.db	'getHashedValue',0,1,224,9,15
	.dw	.L316
	.db	1,1,1
	.dw	.L236,.L264,.L235
	.db	4
	.db	'Hash_output',0,1,224,9,39
	.dw	.L318,.L319
	.db	4
	.db	'Output_size',0,1,224,9,59
	.dw	.L320,.L321
	.db	5
	.dw	.L236,.L264
	.db	6
	.db	'flag',0,1,226,9,8
	.dw	.L316,.L322
	.db	5
	.dw	.L323,.L324
	.db	6
	.db	'i',0,1,228,9,13
	.dw	.L316,.L325
	.db	0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_getHashedValue')
.L260:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73
	.db	16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0
	.db	6,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_getHashedValue')
.L261:
	.dw	.L736-.L735
.L735:
	.dh	3
	.dw	.L738-.L737
.L737:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L738:
	.db	5,15,7,0,5,2
	.dw	.L236
	.db	3,223,9,1,9
	.dh	.L688-.L236
	.db	3,2,1,5,17,9
	.dh	.L323-.L688
	.db	3,2,1,5,35,9
	.dh	.L691-.L323
	.db	1,5,22,9
	.dh	.L203-.L691
	.db	3,2,1,5,20,9
	.dh	.L739-.L203
	.db	1,5,18,9
	.dh	.L740-.L739
	.db	1,5,38,9
	.dh	.L741-.L740
	.db	3,126,1,5,35,9
	.dh	.L202-.L741
	.db	1,5,28,9
	.dh	.L324-.L202
	.db	3,5,1,5,2,9
	.dh	.L742-.L324
	.db	1,5,9,9
	.dh	.L743-.L742
	.db	3,3,1,5,2,9
	.dh	.L204-.L743
	.db	3,3,1,5,1,9
	.dh	.L693-.L204
	.db	3,3,1,9
	.dh	.L264-.L693
	.db	0,1,1
.L736:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_getHashedValue')
.L262:
	.dw	-1,.L263,0,.L264-.L263,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_Asynchronous_SHA256_HashCalculate')
.L265:
	.dw	438
	.dh	3
	.dw	.L266
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L268,.L267
	.db	2
	.dw	.L237
	.db	3
	.db	'Asynchronous_SHA256_HashCalculate',0,1,194,6,6,1,1,1
	.dw	.L228,.L326,.L227
	.db	4
	.db	'Hash_input',0,1,194,6,49
	.dw	.L318,.L327
	.db	4
	.db	'Input_size',0,1,194,6,69
	.dw	.L320,.L328
	.db	4
	.db	'Output_size',0,1,194,6,89
	.dw	.L318,.L329
	.db	5
	.dw	.L228,.L326
	.db	5
	.dw	.L330,.L326
	.db	6
	.db	'NumOfBlocks',0,1,207,6,9
	.dw	.L320,.L331
	.db	5
	.dw	.L332,.L326
	.db	6
	.db	'Lastblock',0,1,219,6,9
	.dw	.L320,.L333
	.db	7
	.dw	.L334
	.db	6
	.db	'i',0,1,226,6,14
	.dw	.L316,.L337
	.db	0,5
	.dw	.L338,.L326
	.db	6
	.db	'NumofWords',0,1,237,6,9
	.dw	.L320,.L339
	.db	5
	.dw	.L340,.L341
	.db	6
	.db	'i',0,1,240,6,13
	.dw	.L316,.L342
	.db	0,5
	.dw	.L343,.L344
	.db	6
	.db	'local_data_holder',0,1,250,6,10
	.dw	.L320,.L345
	.db	0,5
	.dw	.L346,.L347
	.db	6
	.db	'i',0,1,149,7,15
	.dw	.L316,.L348
	.db	0,5
	.dw	.L349,.L350
	.db	6
	.db	'i',0,1,156,7,15
	.dw	.L316,.L351
	.db	0,5
	.dw	.L145,.L140
	.db	6
	.db	'i',0,1,165,7,15
	.dw	.L316,.L352
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_Asynchronous_SHA256_HashCalculate')
.L266:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_Asynchronous_SHA256_HashCalculate')
.L267:
	.dw	.L745-.L744
.L744:
	.dh	3
	.dw	.L747-.L746
.L746:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L747:
	.db	5,6,7,0,5,2
	.dw	.L228
	.db	3,193,6,1,5,5,9
	.dh	.L643-.L228
	.db	3,8,1,5,45,9
	.dh	.L748-.L643
	.db	3,124,1,5,26,9
	.dh	.L640-.L748
	.db	3,1,1,5,57,9
	.dh	.L749-.L640
	.db	3,127,1,5,26,9
	.dh	.L750-.L749
	.db	3,2,1,5,42,9
	.dh	.L751-.L750
	.db	3,127,1,5,26,9
	.dh	.L752-.L751
	.db	3,2,1,5,40,9
	.dh	.L753-.L752
	.db	3,127,1,5,26,9
	.dh	.L754-.L753
	.db	3,2,1,5,42,9
	.dh	.L755-.L754
	.db	3,127,1,5,10,9
	.dh	.L756-.L755
	.db	3,125,1,5,20,9
	.dh	.L757-.L756
	.db	1,5,40,9
	.dh	.L758-.L757
	.db	3,8,1,5,23,9
	.dh	.L330-.L758
	.db	3,4,1,5,16,9
	.dh	.L759-.L330
	.db	3,2,1,5,27,9
	.dh	.L129-.L759
	.db	3,4,1,5,22,9
	.dh	.L332-.L129
	.db	3,3,1,5,6,9
	.dh	.L335-.L332
	.db	3,9,1,5,25,9
	.dh	.L336-.L335
	.db	3,123,1,5,18,9
	.dh	.L131-.L336
	.db	3,3,1,5,27,9
	.dh	.L646-.L131
	.db	1,5,29,9
	.dh	.L133-.L646
	.db	3,2,1,5,17,9
	.dh	.L760-.L133
	.db	1,5,30,9
	.dh	.L761-.L760
	.db	3,126,1,5,27,9
	.dh	.L132-.L761
	.db	1,5,32,9
	.dh	.L135-.L132
	.db	3,6,1,5,44,9
	.dh	.L762-.L135
	.db	1,5,14,9
	.dh	.L763-.L762
	.db	3,2,1,5,25,9
	.dh	.L130-.L763
	.db	3,117,1,5,22,9
	.dh	.L338-.L130
	.db	3,14,1,5,17,9
	.dh	.L340-.L338
	.db	3,3,1,5,34,9
	.dh	.L644-.L340
	.db	1,5,49,9
	.dh	.L764-.L644
	.db	1,5,28,9
	.dh	.L137-.L764
	.db	3,2,1,5,16,9
	.dh	.L765-.L137
	.db	1,5,39,9
	.dh	.L766-.L765
	.db	1,5,52,9
	.dh	.L767-.L766
	.db	3,126,1,5,49,9
	.dh	.L136-.L767
	.db	1,5,5,9
	.dh	.L341-.L136
	.db	3,9,1,5,2,9
	.dh	.L645-.L341
	.db	1,5,34,7,9
	.dh	.L343-.L645
	.db	3,5,1,5,21,9
	.dh	.L649-.L343
	.db	3,126,1,9
	.dh	.L647-.L649
	.db	3,2,1,5,34,9
	.dh	.L768-.L647
	.db	3,2,1,5,25,9
	.dh	.L769-.L768
	.db	1,5,27,9
	.dh	.L770-.L769
	.db	1,5,21,9
	.dh	.L771-.L770
	.db	1,5,37,9
	.dh	.L344-.L771
	.db	3,124,1,5,19,9
	.dh	.L138-.L344
	.db	3,13,1,5,17,9
	.dh	.L139-.L138
	.db	1,5,2,9
	.dh	.L772-.L139
	.db	3,5,1,5,3,9
	.dh	.L773-.L772
	.db	3,4,1,5,19,9
	.dh	.L346-.L773
	.db	3,3,1,5,62,9
	.dh	.L650-.L346
	.db	1,5,21,9
	.dh	.L143-.L650
	.db	3,2,1,5,19,9
	.dh	.L774-.L143
	.db	1,5,65,9
	.dh	.L775-.L774
	.db	3,126,1,5,59,9
	.dh	.L142-.L775
	.db	1,5,57,9
	.dh	.L776-.L142
	.db	1,5,29,9
	.dh	.L777-.L776
	.db	1,5,62,9
	.dh	.L778-.L777
	.db	1,5,8,9
	.dh	.L141-.L778
	.db	3,5,1,5,19,9
	.dh	.L349-.L141
	.db	3,2,1,5,21,9
	.dh	.L652-.L349
	.db	3,2,1,5,28,9
	.dh	.L779-.L652
	.db	3,126,1,5,19,9
	.dh	.L147-.L779
	.db	3,2,1,5,31,9
	.dh	.L780-.L147
	.db	3,126,1,5,28,9
	.dh	.L146-.L780
	.db	1,5,19,9
	.dh	.L145-.L146
	.db	3,9,1,5,57,9
	.dh	.L653-.L145
	.db	1,5,21,9
	.dh	.L150-.L653
	.db	3,2,1,5,19,9
	.dh	.L781-.L150
	.db	1,5,60,9
	.dh	.L782-.L781
	.db	3,126,1,5,30,9
	.dh	.L149-.L782
	.db	1,5,57,9
	.dh	.L783-.L149
	.db	1,5,17,9
	.dh	.L140-.L783
	.db	3,11,1,5,15,9
	.dh	.L784-.L140
	.db	1,9
	.dh	.L785-.L784
	.db	3,1,1,5,19,9
	.dh	.L786-.L785
	.db	3,4,1,5,17,9
	.dh	.L787-.L786
	.db	1,5,1,9
	.dh	.L788-.L787
	.db	3,1,1,7,9
	.dh	.L270-.L788
	.db	0,1,1
.L745:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_Asynchronous_SHA256_HashCalculate')
.L268:
	.dw	-1,.L269,0,.L270-.L269,0,0
.L334:
	.dw	-1,.L228,.L335-.L228,.L336-.L228,.L131-.L228,.L135-.L228,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_Asynchronous_SHA224_HashCalculate')
.L271:
	.dw	438
	.dh	3
	.dw	.L272
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L274,.L273
	.db	2
	.dw	.L237
	.db	3
	.db	'Asynchronous_SHA224_HashCalculate',0,1,187,7,6,1,1,1
	.dw	.L230,.L353,.L229
	.db	4
	.db	'Hash_input',0,1,187,7,49
	.dw	.L318,.L354
	.db	4
	.db	'Input_size',0,1,187,7,69
	.dw	.L320,.L355
	.db	4
	.db	'Output_size',0,1,187,7,89
	.dw	.L318,.L356
	.db	5
	.dw	.L230,.L353
	.db	5
	.dw	.L357,.L353
	.db	6
	.db	'NumOfBlocks',0,1,228,7,9
	.dw	.L320,.L358
	.db	5
	.dw	.L359,.L353
	.db	6
	.db	'Lastblock',0,1,233,7,9
	.dw	.L320,.L360
	.db	7
	.dw	.L361
	.db	6
	.db	'i',0,1,240,7,14
	.dw	.L316,.L364
	.db	0,5
	.dw	.L365,.L353
	.db	6
	.db	'NumofWords',0,1,252,7,9
	.dw	.L320,.L366
	.db	5
	.dw	.L367,.L368
	.db	6
	.db	'i',0,1,255,7,13
	.dw	.L316,.L369
	.db	0,5
	.dw	.L370,.L371
	.db	6
	.db	'local_data_holder',0,1,139,8,10
	.dw	.L320,.L372
	.db	0,5
	.dw	.L373,.L374
	.db	6
	.db	'i',0,1,167,8,15
	.dw	.L316,.L375
	.db	0,5
	.dw	.L376,.L377
	.db	6
	.db	'i',0,1,174,8,15
	.dw	.L316,.L378
	.db	0,5
	.dw	.L171,.L166
	.db	6
	.db	'i',0,1,183,8,15
	.dw	.L316,.L379
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_Asynchronous_SHA224_HashCalculate')
.L272:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_Asynchronous_SHA224_HashCalculate')
.L273:
	.dw	.L790-.L789
.L789:
	.dh	3
	.dw	.L792-.L791
.L791:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L792:
	.db	5,6,7,0,5,2
	.dw	.L230
	.db	3,186,7,1,5,5,9
	.dh	.L660-.L230
	.db	3,8,1,5,45,9
	.dh	.L793-.L660
	.db	3,124,1,5,26,9
	.dh	.L657-.L793
	.db	3,1,1,5,57,9
	.dh	.L794-.L657
	.db	3,127,1,5,26,9
	.dh	.L795-.L794
	.db	3,2,1,5,42,9
	.dh	.L796-.L795
	.db	3,127,1,5,26,9
	.dh	.L797-.L796
	.db	3,2,1,5,40,9
	.dh	.L798-.L797
	.db	3,127,1,5,26,9
	.dh	.L799-.L798
	.db	3,2,1,5,42,9
	.dh	.L800-.L799
	.db	3,127,1,5,10,9
	.dh	.L801-.L800
	.db	3,125,1,5,20,9
	.dh	.L802-.L801
	.db	1,5,40,9
	.dh	.L803-.L802
	.db	3,9,1,5,23,9
	.dh	.L656-.L803
	.db	3,3,1,5,16,9
	.dh	.L804-.L656
	.db	3,2,1,5,31,9
	.dh	.L151-.L804
	.db	3,6,1,5,41,9
	.dh	.L805-.L151
	.db	1,5,17,9
	.dh	.L806-.L805
	.db	3,3,1,5,4,9
	.dh	.L807-.L806
	.db	1,5,15,9
	.dh	.L808-.L807
	.db	1,5,17,9
	.dh	.L809-.L808
	.db	3,1,1,5,15,9
	.dh	.L810-.L809
	.db	1,5,17,9
	.dh	.L811-.L810
	.db	3,1,1,5,15,9
	.dh	.L812-.L811
	.db	1,5,17,9
	.dh	.L813-.L812
	.db	3,1,1,5,15,9
	.dh	.L814-.L813
	.db	1,5,17,9
	.dh	.L815-.L814
	.db	3,1,1,5,15,9
	.dh	.L816-.L815
	.db	1,5,17,9
	.dh	.L817-.L816
	.db	3,1,1,5,15,9
	.dh	.L818-.L817
	.db	1,5,17,9
	.dh	.L819-.L818
	.db	3,1,1,5,15,9
	.dh	.L820-.L819
	.db	1,5,17,9
	.dh	.L821-.L820
	.db	3,1,1,5,15,9
	.dh	.L822-.L821
	.db	1,5,31,9
	.dh	.L155-.L822
	.db	3,3,1,5,43,9
	.dh	.L823-.L155
	.db	1,5,27,9
	.dh	.L357-.L823
	.db	3,6,1,5,22,9
	.dh	.L359-.L357
	.db	3,3,1,5,6,9
	.dh	.L362-.L359
	.db	3,9,1,5,25,9
	.dh	.L363-.L362
	.db	3,123,1,5,18,9
	.dh	.L157-.L363
	.db	3,3,1,5,27,9
	.dh	.L662-.L157
	.db	1,5,29,9
	.dh	.L159-.L662
	.db	3,2,1,5,17,9
	.dh	.L824-.L159
	.db	1,5,30,9
	.dh	.L825-.L824
	.db	3,126,1,5,27,9
	.dh	.L158-.L825
	.db	1,5,32,9
	.dh	.L161-.L158
	.db	3,6,1,5,44,9
	.dh	.L826-.L161
	.db	1,5,14,9
	.dh	.L827-.L826
	.db	3,2,1,5,25,9
	.dh	.L156-.L827
	.db	3,117,1,5,22,9
	.dh	.L365-.L156
	.db	3,15,1,5,17,9
	.dh	.L367-.L365
	.db	3,3,1,5,34,9
	.dh	.L661-.L367
	.db	1,5,49,9
	.dh	.L828-.L661
	.db	1,5,28,9
	.dh	.L163-.L828
	.db	3,2,1,5,16,9
	.dh	.L829-.L163
	.db	1,5,39,9
	.dh	.L830-.L829
	.db	1,5,52,9
	.dh	.L831-.L830
	.db	3,126,1,5,49,9
	.dh	.L162-.L831
	.db	1,5,5,9
	.dh	.L368-.L162
	.db	3,11,1,5,2,9
	.dh	.L665-.L368
	.db	1,5,34,7,9
	.dh	.L370-.L665
	.db	3,5,1,5,21,9
	.dh	.L832-.L370
	.db	3,126,1,9
	.dh	.L663-.L832
	.db	3,2,1,5,35,9
	.dh	.L833-.L663
	.db	3,2,1,5,26,9
	.dh	.L834-.L833
	.db	1,5,28,9
	.dh	.L835-.L834
	.db	1,5,22,9
	.dh	.L836-.L835
	.db	1,5,37,9
	.dh	.L371-.L836
	.db	3,124,1,5,19,9
	.dh	.L164-.L371
	.db	3,12,1,5,17,9
	.dh	.L165-.L164
	.db	1,5,2,9
	.dh	.L837-.L165
	.db	3,7,1,5,3,9
	.dh	.L838-.L837
	.db	3,4,1,5,19,9
	.dh	.L373-.L838
	.db	3,3,1,5,62,9
	.dh	.L666-.L373
	.db	1,5,21,9
	.dh	.L169-.L666
	.db	3,2,1,5,19,9
	.dh	.L839-.L169
	.db	1,5,65,9
	.dh	.L840-.L839
	.db	3,126,1,5,59,9
	.dh	.L168-.L840
	.db	1,5,57,9
	.dh	.L841-.L168
	.db	1,5,29,9
	.dh	.L842-.L841
	.db	1,5,62,9
	.dh	.L843-.L842
	.db	1,5,8,9
	.dh	.L167-.L843
	.db	3,5,1,5,19,7,9
	.dh	.L376-.L167
	.db	3,2,1,5,21,9
	.dh	.L668-.L376
	.db	3,2,1,5,28,9
	.dh	.L844-.L668
	.db	3,126,1,5,19,9
	.dh	.L173-.L844
	.db	3,2,1,5,31,9
	.dh	.L845-.L173
	.db	3,126,1,5,28,9
	.dh	.L172-.L845
	.db	1,5,19,9
	.dh	.L171-.L172
	.db	3,9,1,5,57,9
	.dh	.L669-.L171
	.db	1,5,21,9
	.dh	.L176-.L669
	.db	3,2,1,5,19,9
	.dh	.L846-.L176
	.db	1,5,60,9
	.dh	.L847-.L846
	.db	3,126,1,5,30,9
	.dh	.L175-.L847
	.db	1,5,57,9
	.dh	.L848-.L175
	.db	1,5,17,9
	.dh	.L166-.L848
	.db	3,11,1,5,15,9
	.dh	.L849-.L166
	.db	1,9
	.dh	.L850-.L849
	.db	3,1,1,5,19,9
	.dh	.L851-.L850
	.db	3,3,1,5,17,9
	.dh	.L852-.L851
	.db	1,5,1,9
	.dh	.L853-.L852
	.db	3,1,1,7,9
	.dh	.L276-.L853
	.db	0,1,1
.L790:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_Asynchronous_SHA224_HashCalculate')
.L274:
	.dw	-1,.L275,0,.L276-.L275,0,0
.L361:
	.dw	-1,.L230,.L362-.L230,.L363-.L230,.L157-.L230,.L161-.L230,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_Asynchronous_SHA1_HashCalculate')
.L277:
	.dw	436
	.dh	3
	.dw	.L278
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L280,.L279
	.db	2
	.dw	.L237
	.db	3
	.db	'Asynchronous_SHA1_HashCalculate',0,1,203,8,6,1,1,1
	.dw	.L232,.L380,.L231
	.db	4
	.db	'Hash_input',0,1,203,8,47
	.dw	.L318,.L381
	.db	4
	.db	'Input_size',0,1,203,8,67
	.dw	.L320,.L382
	.db	4
	.db	'Output_size',0,1,203,8,88
	.dw	.L318,.L383
	.db	5
	.dw	.L232,.L380
	.db	5
	.dw	.L384,.L380
	.db	6
	.db	'NumOfBlocks',0,1,216,8,9
	.dw	.L320,.L385
	.db	5
	.dw	.L386,.L380
	.db	6
	.db	'Lastblock',0,1,229,8,9
	.dw	.L320,.L387
	.db	7
	.dw	.L388
	.db	6
	.db	'i',0,1,236,8,14
	.dw	.L316,.L391
	.db	0,5
	.dw	.L392,.L380
	.db	6
	.db	'NumofWords',0,1,248,8,9
	.dw	.L320,.L393
	.db	5
	.dw	.L394,.L395
	.db	6
	.db	'i',0,1,251,8,13
	.dw	.L316,.L396
	.db	0,5
	.dw	.L397,.L398
	.db	6
	.db	'local_data_holder',0,1,135,9,10
	.dw	.L320,.L399
	.db	0,5
	.dw	.L400,.L401
	.db	6
	.db	'i',0,1,168,9,15
	.dw	.L316,.L402
	.db	0,5
	.dw	.L403,.L404
	.db	6
	.db	'i',0,1,175,9,15
	.dw	.L316,.L405
	.db	0,5
	.dw	.L193,.L188
	.db	6
	.db	'i',0,1,184,9,15
	.dw	.L316,.L406
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_Asynchronous_SHA1_HashCalculate')
.L278:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_Asynchronous_SHA1_HashCalculate')
.L279:
	.dw	.L855-.L854
.L854:
	.dh	3
	.dw	.L857-.L856
.L856:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L857:
	.db	5,6,7,0,5,2
	.dw	.L232
	.db	3,202,8,1,5,43,9
	.dh	.L675-.L232
	.db	3,3,1,5,5,9
	.dh	.L672-.L675
	.db	3,7,1,5,43,9
	.dh	.L858-.L672
	.db	3,124,1,5,24,9
	.dh	.L859-.L858
	.db	3,1,1,5,55,9
	.dh	.L860-.L859
	.db	3,127,1,5,24,9
	.dh	.L861-.L860
	.db	3,2,1,5,40,9
	.dh	.L862-.L861
	.db	3,127,1,5,24,9
	.dh	.L863-.L862
	.db	3,2,1,5,38,9
	.dh	.L864-.L863
	.db	3,127,1,5,24,9
	.dh	.L865-.L864
	.db	3,2,1,5,40,9
	.dh	.L866-.L865
	.db	3,127,1,5,10,9
	.dh	.L867-.L866
	.db	3,125,1,5,20,9
	.dh	.L868-.L867
	.db	1,5,23,9
	.dh	.L384-.L868
	.db	3,11,1,5,16,9
	.dh	.L869-.L384
	.db	3,2,1,5,27,9
	.dh	.L177-.L869
	.db	3,4,1,5,22,9
	.dh	.L386-.L177
	.db	3,3,1,5,6,9
	.dh	.L389-.L386
	.db	3,9,1,5,25,9
	.dh	.L390-.L389
	.db	3,123,1,5,18,9
	.dh	.L179-.L390
	.db	3,3,1,5,27,9
	.dh	.L678-.L179
	.db	1,5,29,9
	.dh	.L181-.L678
	.db	3,2,1,5,17,9
	.dh	.L870-.L181
	.db	1,5,30,9
	.dh	.L871-.L870
	.db	3,126,1,5,27,9
	.dh	.L180-.L871
	.db	1,5,32,9
	.dh	.L183-.L180
	.db	3,6,1,5,44,9
	.dh	.L872-.L183
	.db	1,5,14,9
	.dh	.L873-.L872
	.db	3,2,1,5,25,9
	.dh	.L178-.L873
	.db	3,117,1,5,22,9
	.dh	.L392-.L178
	.db	3,15,1,5,17,9
	.dh	.L394-.L392
	.db	3,3,1,5,34,9
	.dh	.L676-.L394
	.db	1,5,49,9
	.dh	.L874-.L676
	.db	1,5,28,9
	.dh	.L185-.L874
	.db	3,2,1,5,16,9
	.dh	.L875-.L185
	.db	1,5,39,9
	.dh	.L876-.L875
	.db	1,5,52,9
	.dh	.L877-.L876
	.db	3,126,1,5,49,9
	.dh	.L184-.L877
	.db	1,5,5,9
	.dh	.L395-.L184
	.db	3,10,1,5,2,9
	.dh	.L677-.L395
	.db	1,5,34,7,9
	.dh	.L397-.L677
	.db	3,8,1,5,21,9
	.dh	.L681-.L397
	.db	3,125,1,9
	.dh	.L679-.L681
	.db	3,3,1,5,34,9
	.dh	.L878-.L679
	.db	3,3,1,5,25,9
	.dh	.L879-.L878
	.db	1,5,27,9
	.dh	.L880-.L879
	.db	1,5,21,9
	.dh	.L881-.L880
	.db	1,5,37,9
	.dh	.L398-.L881
	.db	3,122,1,5,19,9
	.dh	.L186-.L398
	.db	3,16,1,5,17,9
	.dh	.L187-.L186
	.db	1,5,2,9
	.dh	.L882-.L187
	.db	3,7,1,5,3,9
	.dh	.L883-.L882
	.db	3,4,1,5,19,9
	.dh	.L400-.L883
	.db	3,3,1,5,62,9
	.dh	.L682-.L400
	.db	1,5,21,9
	.dh	.L191-.L682
	.db	3,2,1,5,19,9
	.dh	.L884-.L191
	.db	1,5,65,9
	.dh	.L885-.L884
	.db	3,126,1,5,59,9
	.dh	.L190-.L885
	.db	1,5,57,9
	.dh	.L886-.L190
	.db	1,5,29,9
	.dh	.L887-.L886
	.db	1,5,62,9
	.dh	.L888-.L887
	.db	1,5,8,9
	.dh	.L189-.L888
	.db	3,5,1,5,19,9
	.dh	.L403-.L189
	.db	3,2,1,5,21,9
	.dh	.L684-.L403
	.db	3,2,1,5,28,9
	.dh	.L889-.L684
	.db	3,126,1,5,19,9
	.dh	.L195-.L889
	.db	3,2,1,5,31,9
	.dh	.L890-.L195
	.db	3,126,1,5,28,9
	.dh	.L194-.L890
	.db	1,5,19,9
	.dh	.L193-.L194
	.db	3,9,1,5,57,9
	.dh	.L685-.L193
	.db	1,5,21,9
	.dh	.L198-.L685
	.db	3,2,1,5,19,9
	.dh	.L891-.L198
	.db	1,5,60,9
	.dh	.L892-.L891
	.db	3,126,1,5,30,9
	.dh	.L197-.L892
	.db	1,5,57,9
	.dh	.L893-.L197
	.db	1,5,17,9
	.dh	.L188-.L893
	.db	3,11,1,5,15,9
	.dh	.L894-.L188
	.db	1,9
	.dh	.L895-.L894
	.db	3,1,1,5,19,9
	.dh	.L896-.L895
	.db	3,4,1,5,17,9
	.dh	.L897-.L896
	.db	1,5,1,9
	.dh	.L898-.L897
	.db	3,1,1,7,9
	.dh	.L282-.L898
	.db	0,1,1
.L855:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_Asynchronous_SHA1_HashCalculate')
.L280:
	.dw	-1,.L281,0,.L282-.L281,0,0
.L388:
	.dw	-1,.L232,.L389-.L232,.L390-.L232,.L179-.L232,.L183-.L232,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_SHA224_HashCalculate')
.L283:
	.dw	475
	.dh	3
	.dw	.L284
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L286,.L285
	.db	2
	.dw	.L237
	.db	3
	.db	'SHA224_HashCalculate',0,1,235,1,6,1,1,1
	.dw	.L220,.L407,.L219
	.db	4
	.db	'Hash_input',0,1,235,1,36
	.dw	.L318,.L408
	.db	4
	.db	'Hash_output',0,1,235,1,58
	.dw	.L318,.L409
	.db	4
	.db	'Input_size',0,1,235,1,78
	.dw	.L320,.L410
	.db	4
	.db	'Output_size',0,1,235,1,99
	.dw	.L318,.L411
	.db	5
	.dw	.L220,.L407
	.db	5
	.dw	.L412,.L407
	.db	6
	.db	'NumOfBlocks',0,1,147,2,9
	.dw	.L320,.L413
	.db	5
	.dw	.L414,.L407
	.db	6
	.db	'Lastblock',0,1,152,2,9
	.dw	.L320,.L415
	.db	7
	.dw	.L416
	.db	6
	.db	'i',0,1,159,2,14
	.dw	.L316,.L419
	.db	0,5
	.dw	.L420,.L407
	.db	6
	.db	'NumofWords',0,1,171,2,9
	.dw	.L320,.L421
	.db	5
	.dw	.L422,.L423
	.db	6
	.db	'i',0,1,173,2,13
	.dw	.L316,.L424
	.db	0,5
	.dw	.L425,.L426
	.db	6
	.db	'local_data_holder',0,1,184,2,10
	.dw	.L320,.L427
	.db	0,5
	.dw	.L428,.L429
	.db	6
	.db	'i',0,1,212,2,15
	.dw	.L316,.L430
	.db	0,5
	.dw	.L431,.L432
	.db	6
	.db	'i',0,1,219,2,15
	.dw	.L316,.L433
	.db	0,5
	.dw	.L42,.L37
	.db	6
	.db	'i',0,1,228,2,15
	.dw	.L316,.L434
	.db	0,5
	.dw	.L435,.L436
	.db	6
	.db	'i',0,1,248,2,13
	.dw	.L316,.L437
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_SHA224_HashCalculate')
.L284:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_SHA224_HashCalculate')
.L285:
	.dw	.L900-.L899
.L899:
	.dh	3
	.dw	.L902-.L901
.L901:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L902:
	.db	5,6,7,0,5,2
	.dw	.L220
	.db	3,234,1,1,5,5,9
	.dh	.L565-.L220
	.db	3,7,1,5,45,9
	.dh	.L903-.L565
	.db	3,124,1,5,26,9
	.dh	.L559-.L903
	.db	3,1,1,5,57,9
	.dh	.L560-.L559
	.db	3,127,1,5,26,9
	.dh	.L904-.L560
	.db	3,2,1,5,42,9
	.dh	.L905-.L904
	.db	3,127,1,5,26,9
	.dh	.L906-.L905
	.db	3,2,1,5,40,9
	.dh	.L907-.L906
	.db	3,127,1,5,26,9
	.dh	.L908-.L907
	.db	3,2,1,5,42,9
	.dh	.L909-.L908
	.db	3,127,1,5,10,9
	.dh	.L910-.L909
	.db	3,125,1,5,20,9
	.dh	.L911-.L910
	.db	1,5,40,9
	.dh	.L912-.L911
	.db	3,9,1,5,23,9
	.dh	.L558-.L912
	.db	3,3,1,5,16,9
	.dh	.L913-.L558
	.db	3,2,1,5,31,9
	.dh	.L22-.L913
	.db	3,6,1,5,41,9
	.dh	.L914-.L22
	.db	1,5,17,9
	.dh	.L915-.L914
	.db	3,3,1,5,4,9
	.dh	.L916-.L915
	.db	1,5,15,9
	.dh	.L917-.L916
	.db	1,5,17,9
	.dh	.L918-.L917
	.db	3,1,1,5,15,9
	.dh	.L919-.L918
	.db	1,5,17,9
	.dh	.L920-.L919
	.db	3,1,1,5,15,9
	.dh	.L921-.L920
	.db	1,5,17,9
	.dh	.L922-.L921
	.db	3,1,1,5,15,9
	.dh	.L923-.L922
	.db	1,5,17,9
	.dh	.L924-.L923
	.db	3,1,1,5,15,9
	.dh	.L925-.L924
	.db	1,5,17,9
	.dh	.L926-.L925
	.db	3,1,1,5,15,9
	.dh	.L927-.L926
	.db	1,5,17,9
	.dh	.L928-.L927
	.db	3,1,1,5,15,9
	.dh	.L929-.L928
	.db	1,5,17,9
	.dh	.L930-.L929
	.db	3,1,1,5,15,9
	.dh	.L931-.L930
	.db	1,5,31,9
	.dh	.L26-.L931
	.db	3,3,1,5,43,9
	.dh	.L932-.L26
	.db	1,5,27,9
	.dh	.L412-.L932
	.db	3,6,1,5,22,9
	.dh	.L414-.L412
	.db	3,3,1,5,6,9
	.dh	.L417-.L414
	.db	3,9,1,5,25,9
	.dh	.L418-.L417
	.db	3,123,1,5,18,9
	.dh	.L28-.L418
	.db	3,3,1,5,27,9
	.dh	.L567-.L28
	.db	1,5,29,9
	.dh	.L30-.L567
	.db	3,2,1,5,17,9
	.dh	.L933-.L30
	.db	1,5,30,9
	.dh	.L934-.L933
	.db	3,126,1,5,27,9
	.dh	.L29-.L934
	.db	1,5,32,9
	.dh	.L32-.L29
	.db	3,6,1,5,44,9
	.dh	.L935-.L32
	.db	1,5,14,9
	.dh	.L936-.L935
	.db	3,2,1,5,25,9
	.dh	.L27-.L936
	.db	3,117,1,5,22,9
	.dh	.L420-.L27
	.db	3,15,1,5,17,9
	.dh	.L422-.L420
	.db	3,2,1,5,34,9
	.dh	.L569-.L422
	.db	1,5,49,9
	.dh	.L937-.L569
	.db	1,5,29,9
	.dh	.L34-.L937
	.db	3,2,1,5,16,9
	.dh	.L938-.L34
	.db	1,5,40,9
	.dh	.L939-.L938
	.db	1,5,52,9
	.dh	.L940-.L939
	.db	3,126,1,5,49,9
	.dh	.L33-.L940
	.db	1,5,5,9
	.dh	.L423-.L33
	.db	3,10,1,5,2,9
	.dh	.L941-.L423
	.db	1,5,34,7,9
	.dh	.L425-.L941
	.db	3,5,1,5,21,9
	.dh	.L568-.L425
	.db	3,126,1,9
	.dh	.L571-.L568
	.db	3,2,1,5,34,9
	.dh	.L942-.L571
	.db	3,3,1,5,25,9
	.dh	.L943-.L942
	.db	1,5,27,9
	.dh	.L944-.L943
	.db	1,5,21,9
	.dh	.L945-.L944
	.db	1,5,37,9
	.dh	.L426-.L945
	.db	3,123,1,5,19,9
	.dh	.L35-.L426
	.db	3,12,1,5,17,9
	.dh	.L36-.L35
	.db	1,5,2,9
	.dh	.L946-.L36
	.db	3,7,1,5,3,9
	.dh	.L947-.L946
	.db	3,4,1,5,19,9
	.dh	.L428-.L947
	.db	3,3,1,5,62,9
	.dh	.L572-.L428
	.db	1,5,21,9
	.dh	.L40-.L572
	.db	3,2,1,5,19,9
	.dh	.L948-.L40
	.db	1,5,65,9
	.dh	.L949-.L948
	.db	3,126,1,5,59,9
	.dh	.L39-.L949
	.db	1,5,57,9
	.dh	.L950-.L39
	.db	1,5,29,9
	.dh	.L951-.L950
	.db	1,5,62,9
	.dh	.L952-.L951
	.db	1,5,8,9
	.dh	.L38-.L952
	.db	3,5,1,5,19,9
	.dh	.L431-.L38
	.db	3,2,1,5,21,9
	.dh	.L574-.L431
	.db	3,2,1,5,28,9
	.dh	.L953-.L574
	.db	3,126,1,5,19,9
	.dh	.L44-.L953
	.db	3,2,1,5,31,9
	.dh	.L954-.L44
	.db	3,126,1,5,28,9
	.dh	.L43-.L954
	.db	1,5,19,9
	.dh	.L42-.L43
	.db	3,9,1,5,57,9
	.dh	.L575-.L42
	.db	1,5,21,9
	.dh	.L47-.L575
	.db	3,2,1,5,19,9
	.dh	.L955-.L47
	.db	1,5,60,9
	.dh	.L956-.L955
	.db	3,126,1,5,30,9
	.dh	.L46-.L956
	.db	1,5,57,9
	.dh	.L957-.L46
	.db	1,5,17,9
	.dh	.L37-.L957
	.db	3,11,1,5,15,9
	.dh	.L958-.L37
	.db	1,9
	.dh	.L959-.L958
	.db	3,1,1,5,31,9
	.dh	.L49-.L959
	.db	3,5,1,5,41,9
	.dh	.L960-.L49
	.db	1,5,17,9
	.dh	.L435-.L960
	.db	3,3,1,5,25,9
	.dh	.L577-.L435
	.db	1,5,24,9
	.dh	.L51-.L577
	.db	3,2,1,5,22,9
	.dh	.L961-.L51
	.db	1,5,20,9
	.dh	.L962-.L961
	.db	1,5,28,9
	.dh	.L963-.L962
	.db	3,126,1,5,25,9
	.dh	.L50-.L963
	.db	1,5,19,9
	.dh	.L436-.L50
	.db	3,5,1,5,17,9
	.dh	.L578-.L436
	.db	1,5,1,9
	.dh	.L964-.L578
	.db	3,2,1,7,9
	.dh	.L288-.L964
	.db	0,1,1
.L900:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_SHA224_HashCalculate')
.L286:
	.dw	-1,.L287,0,.L288-.L287,0,0
.L416:
	.dw	-1,.L220,.L417-.L220,.L418-.L220,.L28-.L220,.L32-.L220,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_SHA1_HashCalculate')
.L289:
	.dw	473
	.dh	3
	.dw	.L290
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L292,.L291
	.db	2
	.dw	.L237
	.db	3
	.db	'SHA1_HashCalculate',0,1,148,3,6,1,1,1
	.dw	.L222,.L438,.L221
	.db	4
	.db	'Hash_input',0,1,148,3,34
	.dw	.L318,.L439
	.db	4
	.db	'Hash_output',0,1,148,3,56
	.dw	.L318,.L440
	.db	4
	.db	'Input_size',0,1,148,3,76
	.dw	.L320,.L441
	.db	4
	.db	'Output_size',0,1,148,3,97
	.dw	.L318,.L442
	.db	5
	.dw	.L222,.L438
	.db	5
	.dw	.L443,.L438
	.db	6
	.db	'NumOfBlocks',0,1,162,3,9
	.dw	.L320,.L444
	.db	5
	.dw	.L445,.L438
	.db	6
	.db	'Lastblock',0,1,175,3,9
	.dw	.L320,.L446
	.db	7
	.dw	.L447
	.db	6
	.db	'i',0,1,182,3,14
	.dw	.L316,.L450
	.db	0,5
	.dw	.L451,.L438
	.db	6
	.db	'NumofWords',0,1,194,3,9
	.dw	.L320,.L452
	.db	5
	.dw	.L453,.L454
	.db	6
	.db	'i',0,1,197,3,13
	.dw	.L316,.L455
	.db	0,5
	.dw	.L456,.L457
	.db	6
	.db	'local_data_holder',0,1,209,3,10
	.dw	.L320,.L458
	.db	0,5
	.dw	.L459,.L460
	.db	6
	.db	'i',0,1,242,3,15
	.dw	.L316,.L461
	.db	0,5
	.dw	.L462,.L463
	.db	6
	.db	'i',0,1,249,3,15
	.dw	.L316,.L464
	.db	0,5
	.dw	.L68,.L63
	.db	6
	.db	'i',0,1,130,4,15
	.dw	.L316,.L465
	.db	0,5
	.dw	.L466,.L467
	.db	6
	.db	'i',0,1,150,4,13
	.dw	.L316,.L468
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_SHA1_HashCalculate')
.L290:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_SHA1_HashCalculate')
.L291:
	.dw	.L966-.L965
.L965:
	.dh	3
	.dw	.L968-.L967
.L967:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L968:
	.db	5,6,7,0,5,2
	.dw	.L222
	.db	3,147,3,1,5,5,9
	.dh	.L586-.L222
	.db	3,10,1,5,43,9
	.dh	.L969-.L586
	.db	3,124,1,5,24,9
	.dh	.L580-.L969
	.db	3,1,1,5,55,9
	.dh	.L581-.L580
	.db	3,127,1,5,24,9
	.dh	.L970-.L581
	.db	3,2,1,5,40,9
	.dh	.L971-.L970
	.db	3,127,1,5,24,9
	.dh	.L972-.L971
	.db	3,2,1,5,38,9
	.dh	.L973-.L972
	.db	3,127,1,5,24,9
	.dh	.L974-.L973
	.db	3,2,1,5,40,9
	.dh	.L975-.L974
	.db	3,127,1,5,10,9
	.dh	.L976-.L975
	.db	3,125,1,5,20,9
	.dh	.L977-.L976
	.db	1,5,43,9
	.dh	.L978-.L977
	.db	3,6,1,5,23,9
	.dh	.L443-.L978
	.db	3,6,1,5,16,9
	.dh	.L979-.L443
	.db	3,2,1,5,27,9
	.dh	.L52-.L979
	.db	3,4,1,5,22,9
	.dh	.L445-.L52
	.db	3,3,1,5,6,9
	.dh	.L448-.L445
	.db	3,9,1,5,32,9
	.dh	.L449-.L448
	.db	3,4,1,5,25,9
	.dh	.L980-.L449
	.db	3,119,1,5,18,9
	.dh	.L54-.L980
	.db	3,3,1,5,27,9
	.dh	.L588-.L54
	.db	1,5,29,9
	.dh	.L56-.L588
	.db	3,2,1,5,17,9
	.dh	.L981-.L56
	.db	1,5,30,9
	.dh	.L982-.L981
	.db	3,126,1,5,27,9
	.dh	.L55-.L982
	.db	1,5,32,9
	.dh	.L58-.L55
	.db	3,6,1,5,44,9
	.dh	.L983-.L58
	.db	1,5,14,9
	.dh	.L984-.L983
	.db	3,2,1,5,25,9
	.dh	.L53-.L984
	.db	3,117,1,5,22,9
	.dh	.L451-.L53
	.db	3,15,1,5,17,9
	.dh	.L453-.L451
	.db	3,3,1,5,34,9
	.dh	.L590-.L453
	.db	1,5,49,9
	.dh	.L985-.L590
	.db	1,5,28,9
	.dh	.L60-.L985
	.db	3,2,1,5,16,9
	.dh	.L986-.L60
	.db	1,5,39,9
	.dh	.L987-.L986
	.db	1,5,52,9
	.dh	.L988-.L987
	.db	3,126,1,5,49,9
	.dh	.L59-.L988
	.db	1,5,5,9
	.dh	.L454-.L59
	.db	3,10,1,5,2,9
	.dh	.L989-.L454
	.db	1,5,34,7,9
	.dh	.L456-.L989
	.db	3,8,1,5,21,9
	.dh	.L589-.L456
	.db	3,125,1,9
	.dh	.L592-.L589
	.db	3,3,1,5,34,9
	.dh	.L990-.L592
	.db	3,3,1,5,25,9
	.dh	.L991-.L990
	.db	1,5,27,9
	.dh	.L992-.L991
	.db	1,5,21,9
	.dh	.L993-.L992
	.db	1,5,37,9
	.dh	.L457-.L993
	.db	3,122,1,5,19,9
	.dh	.L61-.L457
	.db	3,16,1,5,17,9
	.dh	.L62-.L61
	.db	1,5,2,9
	.dh	.L994-.L62
	.db	3,7,1,5,3,9
	.dh	.L995-.L994
	.db	3,4,1,5,19,9
	.dh	.L459-.L995
	.db	3,3,1,5,62,9
	.dh	.L593-.L459
	.db	1,5,21,9
	.dh	.L66-.L593
	.db	3,2,1,5,19,9
	.dh	.L996-.L66
	.db	1,5,65,9
	.dh	.L997-.L996
	.db	3,126,1,5,59,9
	.dh	.L65-.L997
	.db	1,5,57,9
	.dh	.L998-.L65
	.db	1,5,29,9
	.dh	.L999-.L998
	.db	1,5,62,9
	.dh	.L1000-.L999
	.db	1,5,8,9
	.dh	.L64-.L1000
	.db	3,5,1,5,19,9
	.dh	.L462-.L64
	.db	3,2,1,5,21,9
	.dh	.L595-.L462
	.db	3,2,1,5,28,9
	.dh	.L1001-.L595
	.db	3,126,1,5,19,9
	.dh	.L70-.L1001
	.db	3,2,1,5,31,9
	.dh	.L1002-.L70
	.db	3,126,1,5,28,9
	.dh	.L69-.L1002
	.db	1,5,19,9
	.dh	.L68-.L69
	.db	3,9,1,5,57,9
	.dh	.L596-.L68
	.db	1,5,21,9
	.dh	.L73-.L596
	.db	3,2,1,5,19,9
	.dh	.L1003-.L73
	.db	1,5,60,9
	.dh	.L1004-.L1003
	.db	3,126,1,5,30,9
	.dh	.L72-.L1004
	.db	1,5,57,9
	.dh	.L1005-.L72
	.db	1,5,17,9
	.dh	.L63-.L1005
	.db	3,11,1,5,15,9
	.dh	.L1006-.L63
	.db	1,9
	.dh	.L1007-.L1006
	.db	3,1,1,5,31,9
	.dh	.L75-.L1007
	.db	3,5,1,5,41,9
	.dh	.L1008-.L75
	.db	1,5,17,9
	.dh	.L466-.L1008
	.db	3,3,1,5,25,9
	.dh	.L598-.L466
	.db	1,5,24,9
	.dh	.L77-.L598
	.db	3,2,1,5,22,9
	.dh	.L1009-.L77
	.db	1,5,20,9
	.dh	.L1010-.L1009
	.db	1,5,28,9
	.dh	.L1011-.L1010
	.db	3,126,1,5,25,9
	.dh	.L76-.L1011
	.db	1,5,19,9
	.dh	.L467-.L76
	.db	3,5,1,5,17,9
	.dh	.L599-.L467
	.db	1,5,1,9
	.dh	.L1012-.L599
	.db	3,2,1,7,9
	.dh	.L294-.L1012
	.db	0,1,1
.L966:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_SHA1_HashCalculate')
.L292:
	.dw	-1,.L293,0,.L294-.L293,0,0
.L447:
	.dw	-1,.L222,.L448-.L222,.L449-.L222,.L54-.L222,.L58-.L222,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_SHA256_HashCalculate')
.L295:
	.dw	475
	.dh	3
	.dw	.L296
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L298,.L297
	.db	2
	.dw	.L237
	.db	3
	.db	'SHA256_HashCalculate',0,1,177,4,6,1,1,1
	.dw	.L224,.L469,.L223
	.db	4
	.db	'Hash_input',0,1,177,4,36
	.dw	.L318,.L470
	.db	4
	.db	'Hash_output',0,1,177,4,58
	.dw	.L318,.L471
	.db	4
	.db	'Input_size',0,1,177,4,78
	.dw	.L320,.L472
	.db	4
	.db	'Output_size',0,1,177,4,99
	.dw	.L318,.L473
	.db	5
	.dw	.L224,.L469
	.db	5
	.dw	.L474,.L469
	.db	6
	.db	'NumOfBlocks',0,1,190,4,9
	.dw	.L320,.L475
	.db	5
	.dw	.L476,.L469
	.db	6
	.db	'Lastblock',0,1,202,4,9
	.dw	.L320,.L477
	.db	7
	.dw	.L478
	.db	6
	.db	'i',0,1,209,4,14
	.dw	.L316,.L481
	.db	0,5
	.dw	.L482,.L469
	.db	6
	.db	'NumofWords',0,1,220,4,9
	.dw	.L320,.L483
	.db	5
	.dw	.L484,.L485
	.db	6
	.db	'i',0,1,223,4,13
	.dw	.L316,.L486
	.db	0,5
	.dw	.L487,.L488
	.db	6
	.db	'local_data_holder',0,1,234,4,10
	.dw	.L320,.L489
	.db	0,5
	.dw	.L490,.L491
	.db	6
	.db	'i',0,1,136,5,15
	.dw	.L316,.L492
	.db	0,5
	.dw	.L493,.L494
	.db	6
	.db	'i',0,1,143,5,15
	.dw	.L316,.L495
	.db	0,5
	.dw	.L94,.L89
	.db	6
	.db	'i',0,1,152,5,15
	.dw	.L316,.L496
	.db	0,5
	.dw	.L497,.L498
	.db	6
	.db	'i',0,1,170,5,13
	.dw	.L316,.L499
	.db	0,0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_SHA256_HashCalculate')
.L296:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_SHA256_HashCalculate')
.L297:
	.dw	.L1014-.L1013
.L1013:
	.dh	3
	.dw	.L1016-.L1015
.L1015:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L1016:
	.db	5,6,7,0,5,2
	.dw	.L224
	.db	3,176,4,1,5,43,9
	.dh	.L606-.L224
	.db	3,3,1,5,5,9
	.dh	.L601-.L606
	.db	3,7,1,5,45,9
	.dh	.L1017-.L601
	.db	3,124,1,5,26,9
	.dh	.L1018-.L1017
	.db	3,1,1,5,57,9
	.dh	.L1019-.L1018
	.db	3,127,1,5,26,9
	.dh	.L1020-.L1019
	.db	3,2,1,5,42,9
	.dh	.L1021-.L1020
	.db	3,127,1,5,26,9
	.dh	.L1022-.L1021
	.db	3,2,1,5,40,9
	.dh	.L1023-.L1022
	.db	3,127,1,5,26,9
	.dh	.L1024-.L1023
	.db	3,2,1,5,42,9
	.dh	.L1025-.L1024
	.db	3,127,1,5,10,9
	.dh	.L1026-.L1025
	.db	3,125,1,5,20,9
	.dh	.L1027-.L1026
	.db	1,5,23,9
	.dh	.L474-.L1027
	.db	3,10,1,5,16,9
	.dh	.L1028-.L474
	.db	3,2,1,5,27,9
	.dh	.L78-.L1028
	.db	3,4,1,5,22,9
	.dh	.L476-.L78
	.db	3,3,1,5,6,9
	.dh	.L479-.L476
	.db	3,9,1,5,32,9
	.dh	.L480-.L479
	.db	3,4,1,5,25,9
	.dh	.L1029-.L480
	.db	3,119,1,5,18,9
	.dh	.L80-.L1029
	.db	3,3,1,5,27,9
	.dh	.L608-.L80
	.db	1,5,29,9
	.dh	.L82-.L608
	.db	3,2,1,5,17,9
	.dh	.L1030-.L82
	.db	1,5,30,9
	.dh	.L1031-.L1030
	.db	3,126,1,5,27,9
	.dh	.L81-.L1031
	.db	1,5,32,9
	.dh	.L84-.L81
	.db	3,6,1,5,44,9
	.dh	.L1032-.L84
	.db	1,5,14,9
	.dh	.L1033-.L1032
	.db	3,2,1,5,25,9
	.dh	.L79-.L1033
	.db	3,117,1,5,22,9
	.dh	.L482-.L79
	.db	3,14,1,5,17,9
	.dh	.L484-.L482
	.db	3,3,1,5,34,9
	.dh	.L610-.L484
	.db	1,5,49,9
	.dh	.L1034-.L610
	.db	1,5,28,9
	.dh	.L86-.L1034
	.db	3,2,1,5,16,9
	.dh	.L1035-.L86
	.db	1,5,39,9
	.dh	.L1036-.L1035
	.db	1,5,52,9
	.dh	.L1037-.L1036
	.db	3,126,1,5,49,9
	.dh	.L85-.L1037
	.db	1,5,5,9
	.dh	.L485-.L85
	.db	3,9,1,5,2,9
	.dh	.L1038-.L485
	.db	1,5,34,7,9
	.dh	.L487-.L1038
	.db	3,8,1,5,21,9
	.dh	.L609-.L487
	.db	3,125,1,9
	.dh	.L612-.L609
	.db	3,3,1,5,53,9
	.dh	.L1039-.L612
	.db	3,3,1,5,44,9
	.dh	.L1040-.L1039
	.db	1,5,46,9
	.dh	.L1041-.L1040
	.db	1,5,41,9
	.dh	.L1042-.L1041
	.db	1,5,37,9
	.dh	.L488-.L1042
	.db	3,122,1,5,19,9
	.dh	.L87-.L488
	.db	3,15,1,5,17,9
	.dh	.L88-.L87
	.db	1,5,2,9
	.dh	.L1043-.L88
	.db	3,5,1,5,3,9
	.dh	.L1044-.L1043
	.db	3,4,1,5,19,9
	.dh	.L490-.L1044
	.db	3,3,1,5,62,9
	.dh	.L613-.L490
	.db	1,5,21,9
	.dh	.L92-.L613
	.db	3,2,1,5,19,9
	.dh	.L1045-.L92
	.db	1,5,65,9
	.dh	.L1046-.L1045
	.db	3,126,1,5,59,9
	.dh	.L91-.L1046
	.db	1,5,57,9
	.dh	.L1047-.L91
	.db	1,5,29,9
	.dh	.L1048-.L1047
	.db	1,5,62,9
	.dh	.L1049-.L1048
	.db	1,5,8,9
	.dh	.L90-.L1049
	.db	3,5,1,5,19,9
	.dh	.L493-.L90
	.db	3,2,1,5,21,9
	.dh	.L615-.L493
	.db	3,2,1,5,28,9
	.dh	.L1050-.L615
	.db	3,126,1,5,19,9
	.dh	.L96-.L1050
	.db	3,2,1,5,31,9
	.dh	.L1051-.L96
	.db	3,126,1,5,28,9
	.dh	.L95-.L1051
	.db	1,5,19,9
	.dh	.L94-.L95
	.db	3,9,1,5,57,9
	.dh	.L616-.L94
	.db	1,5,21,9
	.dh	.L99-.L616
	.db	3,2,1,5,19,9
	.dh	.L1052-.L99
	.db	1,5,60,9
	.dh	.L1053-.L1052
	.db	3,126,1,5,30,9
	.dh	.L98-.L1053
	.db	1,5,57,9
	.dh	.L1054-.L98
	.db	1,5,17,9
	.dh	.L89-.L1054
	.db	3,10,1,5,15,9
	.dh	.L1055-.L89
	.db	1,9
	.dh	.L1056-.L1055
	.db	3,1,1,5,31,9
	.dh	.L101-.L1056
	.db	3,4,1,5,41,9
	.dh	.L1057-.L101
	.db	1,5,17,9
	.dh	.L497-.L1057
	.db	3,3,1,5,25,9
	.dh	.L618-.L497
	.db	1,5,22,9
	.dh	.L103-.L618
	.db	3,2,1,5,20,9
	.dh	.L1058-.L103
	.db	1,5,18,9
	.dh	.L1059-.L1058
	.db	1,5,28,9
	.dh	.L1060-.L1059
	.db	3,126,1,5,25,9
	.dh	.L102-.L1060
	.db	1,5,19,9
	.dh	.L498-.L102
	.db	3,5,1,5,17,9
	.dh	.L619-.L498
	.db	1,5,1,9
	.dh	.L1061-.L619
	.db	3,4,1,7,9
	.dh	.L300-.L1061
	.db	0,1,1
.L1014:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_SHA256_HashCalculate')
.L298:
	.dw	-1,.L299,0,.L300-.L299,0,0
.L478:
	.dw	-1,.L224,.L479-.L224,.L480-.L224,.L80-.L224,.L84-.L224,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_MD5_HashCalculate')
.L301:
	.dw	462
	.dh	3
	.dw	.L302
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L304,.L303
	.db	2
	.dw	.L237
	.db	3
	.db	'MD5_HashCalculate',0,1,197,5,6,1,1,1
	.dw	.L226,.L500,.L225
	.db	4
	.db	'Hash_input',0,1,197,5,33
	.dw	.L318,.L501
	.db	4
	.db	'Hash_output',0,1,197,5,55
	.dw	.L318,.L502
	.db	4
	.db	'Input_size',0,1,197,5,75
	.dw	.L320,.L503
	.db	4
	.db	'Output_size',0,1,197,5,96
	.dw	.L318,.L504
	.db	5
	.dw	.L226,.L500
	.db	5
	.dw	.L505,.L500
	.db	6
	.db	'NumOfBlocks',0,1,207,5,9
	.dw	.L320,.L506
	.db	5
	.dw	.L507,.L500
	.db	6
	.db	'Lastblock',0,1,213,5,9
	.dw	.L320,.L508
	.db	6
	.db	'NumofWords',0,1,215,5,9
	.dw	.L320,.L509
	.db	7
	.dw	.L510
	.db	6
	.db	'i',0,1,222,5,14
	.dw	.L316,.L513
	.db	0,5
	.dw	.L514,.L515
	.db	6
	.db	'i',0,1,235,5,13
	.dw	.L316,.L516
	.db	0,5
	.dw	.L517,.L518
	.db	6
	.db	'local_data_holder',0,1,246,5,10
	.dw	.L320,.L519
	.db	0,5
	.dw	.L520,.L521
	.db	6
	.db	'i',0,1,145,6,15
	.dw	.L316,.L522
	.db	0,5
	.dw	.L523,.L524
	.db	6
	.db	'i',0,1,152,6,15
	.dw	.L316,.L525
	.db	0,5
	.dw	.L119,.L114
	.db	6
	.db	'i',0,1,161,6,15
	.dw	.L316,.L526
	.db	0,5
	.dw	.L527,.L528
	.db	6
	.db	'i',0,1,180,6,13
	.dw	.L316,.L529
	.db	0,0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_MD5_HashCalculate')
.L302:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52
	.db	0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_MD5_HashCalculate')
.L303:
	.dw	.L1063-.L1062
.L1062:
	.dh	3
	.dw	.L1065-.L1064
.L1064:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L1065:
	.db	5,6,7,0,5,2
	.dw	.L226
	.db	3,196,5,1,5,5,9
	.dh	.L625-.L226
	.db	3,8,1,5,42,9
	.dh	.L1066-.L625
	.db	3,124,1,5,23,9
	.dh	.L621-.L1066
	.db	3,1,1,5,54,9
	.dh	.L622-.L621
	.db	3,127,1,5,23,9
	.dh	.L1067-.L622
	.db	3,2,1,5,39,9
	.dh	.L1068-.L1067
	.db	3,127,1,5,23,9
	.dh	.L1069-.L1068
	.db	3,2,1,5,37,9
	.dh	.L1070-.L1069
	.db	3,127,1,5,23,9
	.dh	.L1071-.L1070
	.db	3,2,1,5,39,9
	.dh	.L1072-.L1071
	.db	3,127,1,5,10,9
	.dh	.L1073-.L1072
	.db	3,125,1,5,20,9
	.dh	.L1074-.L1073
	.db	1,5,27,9
	.dh	.L505-.L1074
	.db	3,9,1,5,22,9
	.dh	.L507-.L505
	.db	3,3,1,9
	.dh	.L626-.L507
	.db	3,2,1,5,6,9
	.dh	.L511-.L626
	.db	3,9,1,5,32,9
	.dh	.L512-.L511
	.db	3,4,1,5,25,9
	.dh	.L1075-.L512
	.db	3,119,1,5,18,9
	.dh	.L105-.L1075
	.db	3,3,1,5,27,9
	.dh	.L628-.L105
	.db	1,5,29,9
	.dh	.L107-.L628
	.db	3,2,1,5,17,9
	.dh	.L1076-.L107
	.db	1,5,40,9
	.dh	.L1077-.L1076
	.db	1,5,30,9
	.dh	.L1078-.L1077
	.db	3,126,1,5,27,9
	.dh	.L106-.L1078
	.db	1,5,32,9
	.dh	.L109-.L106
	.db	3,6,1,5,44,9
	.dh	.L1079-.L109
	.db	1,5,14,9
	.dh	.L1080-.L1079
	.db	3,2,1,5,25,9
	.dh	.L104-.L1080
	.db	3,117,1,5,17,9
	.dh	.L514-.L104
	.db	3,16,1,5,34,9
	.dh	.L629-.L514
	.db	1,5,49,9
	.dh	.L1081-.L629
	.db	1,5,28,9
	.dh	.L111-.L1081
	.db	3,2,1,5,16,9
	.dh	.L1082-.L111
	.db	1,5,39,9
	.dh	.L1083-.L1082
	.db	1,5,52,9
	.dh	.L1084-.L1083
	.db	3,126,1,5,49,9
	.dh	.L110-.L1084
	.db	1,5,5,9
	.dh	.L515-.L110
	.db	3,10,1,5,2,9
	.dh	.L627-.L515
	.db	1,5,34,7,9
	.dh	.L517-.L627
	.db	3,5,1,5,21,9
	.dh	.L624-.L517
	.db	3,126,1,9
	.dh	.L631-.L624
	.db	3,2,1,5,34,9
	.dh	.L1085-.L631
	.db	3,2,1,5,25,9
	.dh	.L1086-.L1085
	.db	1,5,27,9
	.dh	.L1087-.L1086
	.db	1,5,21,9
	.dh	.L1088-.L1087
	.db	1,5,37,9
	.dh	.L518-.L1088
	.db	3,124,1,5,19,9
	.dh	.L112-.L518
	.db	3,11,1,5,17,9
	.dh	.L113-.L112
	.db	1,5,2,9
	.dh	.L1089-.L113
	.db	3,7,1,5,3,9
	.dh	.L1090-.L1089
	.db	3,4,1,5,19,9
	.dh	.L520-.L1090
	.db	3,3,1,5,62,9
	.dh	.L632-.L520
	.db	1,5,21,9
	.dh	.L117-.L632
	.db	3,2,1,5,19,9
	.dh	.L1091-.L117
	.db	1,5,65,9
	.dh	.L1092-.L1091
	.db	3,126,1,5,59,9
	.dh	.L116-.L1092
	.db	1,5,57,9
	.dh	.L1093-.L116
	.db	1,5,29,9
	.dh	.L1094-.L1093
	.db	1,5,62,9
	.dh	.L1095-.L1094
	.db	1,5,8,9
	.dh	.L115-.L1095
	.db	3,5,1,5,19,7,9
	.dh	.L523-.L115
	.db	3,2,1,5,21,9
	.dh	.L634-.L523
	.db	3,2,1,5,28,9
	.dh	.L1096-.L634
	.db	3,126,1,5,19,9
	.dh	.L121-.L1096
	.db	3,2,1,5,31,9
	.dh	.L1097-.L121
	.db	3,126,1,5,28,9
	.dh	.L120-.L1097
	.db	1,5,19,9
	.dh	.L119-.L120
	.db	3,9,1,5,57,9
	.dh	.L635-.L119
	.db	1,5,21,9
	.dh	.L124-.L635
	.db	3,2,1,5,19,9
	.dh	.L1098-.L124
	.db	1,5,60,9
	.dh	.L1099-.L1098
	.db	3,126,1,5,30,9
	.dh	.L123-.L1099
	.db	1,5,57,9
	.dh	.L1100-.L123
	.db	1,5,15,9
	.dh	.L114-.L1100
	.db	3,11,1,5,17,9
	.dh	.L1101-.L114
	.db	3,1,1,5,15,9
	.dh	.L1102-.L1101
	.db	1,5,31,9
	.dh	.L126-.L1102
	.db	3,4,1,5,41,9
	.dh	.L1103-.L126
	.db	1,5,17,9
	.dh	.L527-.L1103
	.db	3,3,1,5,24,9
	.dh	.L637-.L527
	.db	1,5,22,9
	.dh	.L128-.L637
	.db	3,2,1,5,20,9
	.dh	.L1104-.L128
	.db	1,5,18,9
	.dh	.L1105-.L1104
	.db	1,5,27,9
	.dh	.L1106-.L1105
	.db	3,126,1,5,24,9
	.dh	.L127-.L1106
	.db	1,5,19,9
	.dh	.L528-.L127
	.db	3,5,1,5,17,9
	.dh	.L638-.L528
	.db	1,5,1,9
	.dh	.L1107-.L638
	.db	3,2,1,7,9
	.dh	.L306-.L1107
	.db	0,1,1
.L1063:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_MD5_HashCalculate')
.L304:
	.dw	-1,.L305,0,.L306-.L305,0,0
.L510:
	.dw	-1,.L226,.L511-.L226,.L512-.L226,.L105-.L226,.L109-.L226,0,0
	.endsec	; End of section

	.section	.debug_info ,cluster('$group_ChangeEndianness')
.L307:
	.dw	217
	.dh	3
	.dw	.L308
	.db	4,1
	.dw	.L694,.L695,.L696
	.db	12,1
	.dw	.L310,.L309
	.db	2
	.dw	.L237
	.db	3
	.db	'ChangeEndianness',0,1,76,13,1,1
	.dw	.L214,.L312,.L213
	.db	4
	.db	'value',0,1,76,38
	.dw	.L318,.L530
	.db	4
	.db	'size',0,1,76,52
	.dw	.L320,.L531
	.db	5
	.dw	.L214,.L312
	.db	6
	.db	'x',0,1,78,12
	.dw	.L320,.L532
	.db	6
	.db	'result',0,1,79,12
	.dw	.L320,.L533
	.db	6
	.db	'i',0,1,80,12
	.dw	.L320,.L534
	.db	5
	.dw	.L535,.L312
	.db	6
	.db	'var',0,1,93,12
	.dw	.L320,.L536
	.db	5
	.dw	.L537,.L4
	.db	6
	.db	'temp',0,1,97,16
	.dw	.L320,.L538
	.db	0,0,0,0,0
	.endsec	; End of section

	.section	.debug_abbrev ,cluster('$group_ChangeEndianness')
.L308:
	.db	1,17,1,3,14,37,14,27,14,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54
	.db	15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8
	.db	58,15,59,15,57,15,73,16,2,6,0,0,0
	.endsec	; End of section

	.section	.debug_line ,cluster('$group_ChangeEndianness')
.L309:
	.dw	.L1109-.L1108
.L1108:
	.dh	3
	.dw	.L1111-.L1110
.L1110:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0,0,0,0,0
.L1111:
	.db	5,13,7,0,5,2
	.dw	.L214
	.db	3,203,0,1,5,16,9
	.dh	.L542-.L214
	.db	3,2,1,9
	.dh	.L544-.L542
	.db	3,2,1,5,15,9
	.dh	.L546-.L544
	.db	3,2,1,5,25,9
	.dh	.L3-.L546
	.db	3,3,1,5,18,9
	.dh	.L1112-.L3
	.db	3,127,1,5,16,9
	.dh	.L547-.L1112
	.db	3,1,1,5,29,9
	.dh	.L1113-.L547
	.db	3,1,1,5,16,9
	.dh	.L1114-.L1113
	.db	1,5,43,9
	.dh	.L1115-.L1114
	.db	3,1,1,5,29,9
	.dh	.L1116-.L1115
	.db	1,5,16,9
	.dh	.L1117-.L1116
	.db	1,9
	.dh	.L1118-.L1117
	.db	3,1,1,5,18,9
	.dh	.L1119-.L1118
	.db	3,1,1,5,10,9
	.dh	.L1120-.L1119
	.db	3,1,1,5,13,9
	.dh	.L2-.L1120
	.db	3,120,1,5,15,9
	.dh	.L1121-.L2
	.db	1,5,19,7,9
	.dh	.L535-.L1121
	.db	3,11,1,5,5,9
	.dh	.L543-.L535
	.db	3,2,1,5,22,7,9
	.dh	.L537-.L543
	.db	3,8,1,5,15,9
	.dh	.L1122-.L537
	.db	3,125,1,5,14,9
	.dh	.L548-.L1122
	.db	3,3,1,5,32,9
	.dh	.L1123-.L548
	.db	3,3,1,5,29,9
	.dh	.L1124-.L1123
	.db	1,5,22,9
	.dh	.L1125-.L1124
	.db	1,5,9,9
	.dh	.L545-.L1125
	.db	3,2,1,5,22,9
	.dh	.L5-.L545
	.db	3,4,1,5,13,9
	.dh	.L1126-.L5
	.db	3,1,1,5,43,9
	.dh	.L6-.L1126
	.db	3,5,1,5,29,9
	.dh	.L1127-.L6
	.db	1,5,22,9
	.dh	.L1128-.L1127
	.db	3,127,1,5,20,9
	.dh	.L550-.L1128
	.db	3,1,1,5,29,9
	.dh	.L1129-.L550
	.db	3,1,1,5,20,9
	.dh	.L549-.L1129
	.db	1,5,13,9
	.dh	.L1130-.L549
	.db	3,2,1,5,43,9
	.dh	.L7-.L1130
	.db	3,5,1,5,29,9
	.dh	.L1131-.L7
	.db	1,5,22,9
	.dh	.L1132-.L1131
	.db	3,127,1,5,20,9
	.dh	.L552-.L1132
	.db	3,1,1,9
	.dh	.L1133-.L552
	.db	3,1,1,5,11,9
	.dh	.L1134-.L1133
	.db	1,5,29,9
	.dh	.L1135-.L1134
	.db	3,1,1,5,20,9
	.dh	.L551-.L1135
	.db	1,5,22,9
	.dh	.L10-.L551
	.db	3,1,1,5,1,9
	.dh	.L4-.L10
	.db	3,5,1,9
	.dh	.L312-.L4
	.db	0,1,1
.L1109:
	.endsec	; End of section

	.section	.debug_ranges ,cluster('$group_ChangeEndianness')
.L310:
	.dw	-1,.L311,0,.L312-.L311,0,0
	.endsec	; End of section

	.section	.debug_str
.L695:
	.db	'TASKING VX-toolset for ARM Cortex: C compiler',0
.L694:
	.db	'../../TC399x/HSM/Mcal/Hash/src/Hash.c',0
.L696:
	.db	'D:\\CryptOS Repository\\Software\\OS\\Makefile\\',0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_Asynchronous_HashCalculate')
.L217:
	.dw	-1,.L218,0,.L555-.L218
	.dh	2
	.db	125,0
	.dw	.L555-.L218,.L18-.L218
	.dh	2
	.db	125,4
	.dw	.L18-.L218,.L18-.L218
	.dh	2
	.db	125,0
	.dw	.L18-.L218,.L20-.L218
	.dh	2
	.db	125,4
	.dw	.L20-.L218,.L20-.L218
	.dh	2
	.db	125,0
	.dw	.L20-.L218,.L246-.L218
	.dh	2
	.db	125,4
	.dw	.L246-.L218,.L246-.L218
	.dh	2
	.db	125,0
	.dw	0,0
.L314:
	.dw	-1,.L218,0,.L556-.L218
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_Asynchronous_SHA1_HashCalculate')
.L231:
	.dw	-1,.L232,0,.L671-.L232
	.dh	2
	.db	125,0
	.dw	.L671-.L232,.L380-.L232
	.dh	2
	.db	125,20
	.dw	.L380-.L232,.L380-.L232
	.dh	2
	.db	125,0
	.dw	0,0
.L381:
	.dw	-1,.L232,0,.L672-.L232
	.dh	1
	.db	80
	.dw	.L673-.L232,.L380-.L232
	.dh	1
	.db	84
	.dw	0,0
.L382:
	.dw	-1,.L232,0,.L672-.L232
	.dh	1
	.db	81
	.dw	.L674-.L232,.L380-.L232
	.dh	1
	.db	85
	.dw	0,0
.L387:
	.dw	-1,.L232,.L389-.L232,.L677-.L232
	.dh	1
	.db	87
	.dw	0,0
.L385:
	.dw	-1,.L232,.L386-.L232,.L676-.L232
	.dh	1
	.db	81
	.dw	0,0
.L393:
	.dw	-1,.L232,.L394-.L232,.L679-.L232
	.dh	1
	.db	80
	.dw	.L186-.L232,.L187-.L232
	.dh	1
	.db	80
	.dw	0,0
.L383:
	.dw	-1,.L232,0,.L672-.L232
	.dh	1
	.db	82
	.dw	.L675-.L232,.L380-.L232
	.dh	1
	.db	86
	.dw	0,0
.L391:
	.dw	-1,.L232,.L678-.L232,.L183-.L232
	.dh	1
	.db	80
	.dw	0,0
.L396:
	.dw	-1,.L232,.L676-.L232,.L680-.L232
	.dh	1
	.db	81
	.dw	.L184-.L232,.L681-.L232
	.dh	1
	.db	81
	.dw	.L186-.L232,.L187-.L232
	.dh	1
	.db	81
	.dw	0,0
.L402:
	.dw	-1,.L232,.L682-.L232,.L683-.L232
	.dh	1
	.db	80
	.dw	.L190-.L232,.L189-.L232
	.dh	1
	.db	80
	.dw	0,0
.L405:
	.dw	-1,.L232,.L684-.L232,.L193-.L232
	.dh	1
	.db	80
	.dw	0,0
.L406:
	.dw	-1,.L232,.L685-.L232,.L686-.L232
	.dh	1
	.db	80
	.dw	.L197-.L232,.L188-.L232
	.dh	1
	.db	80
	.dw	0,0
.L399:
	.dw	-1,.L232,.L679-.L232,.L186-.L232
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_Asynchronous_SHA224_HashCalculate')
.L229:
	.dw	-1,.L230,0,.L655-.L230
	.dh	2
	.db	125,0
	.dw	.L655-.L230,.L353-.L230
	.dh	2
	.db	125,20
	.dw	.L353-.L230,.L353-.L230
	.dh	2
	.db	125,0
	.dw	0,0
.L354:
	.dw	-1,.L230,0,.L656-.L230
	.dh	1
	.db	80
	.dw	.L658-.L230,.L353-.L230
	.dh	1
	.db	84
	.dw	0,0
.L355:
	.dw	-1,.L230,0,.L656-.L230
	.dh	1
	.db	81
	.dw	.L659-.L230,.L353-.L230
	.dh	1
	.db	85
	.dw	0,0
.L360:
	.dw	-1,.L230,.L362-.L230,.L353-.L230
	.dh	1
	.db	94
	.dw	0,0
.L358:
	.dw	-1,.L230,.L359-.L230,.L661-.L230
	.dh	1
	.db	81
	.dw	0,0
.L366:
	.dw	-1,.L230,.L367-.L230,.L663-.L230
	.dh	1
	.db	80
	.dw	.L164-.L230,.L165-.L230
	.dh	1
	.db	80
	.dw	0,0
.L356:
	.dw	-1,.L230,0,.L657-.L230
	.dh	1
	.db	82
	.dw	.L660-.L230,.L353-.L230
	.dh	1
	.db	86
	.dw	0,0
.L364:
	.dw	-1,.L230,.L662-.L230,.L161-.L230
	.dh	1
	.db	80
	.dw	0,0
.L369:
	.dw	-1,.L230,.L661-.L230,.L664-.L230
	.dh	1
	.db	81
	.dw	.L162-.L230,.L665-.L230
	.dh	1
	.db	81
	.dw	0,0
.L375:
	.dw	-1,.L230,.L666-.L230,.L667-.L230
	.dh	1
	.db	80
	.dw	.L168-.L230,.L167-.L230
	.dh	1
	.db	80
	.dw	0,0
.L378:
	.dw	-1,.L230,.L668-.L230,.L171-.L230
	.dh	1
	.db	80
	.dw	0,0
.L379:
	.dw	-1,.L230,.L669-.L230,.L670-.L230
	.dh	1
	.db	80
	.dw	.L175-.L230,.L166-.L230
	.dh	1
	.db	80
	.dw	0,0
.L372:
	.dw	-1,.L230,.L663-.L230,.L164-.L230
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_Asynchronous_SHA256_HashCalculate')
.L227:
	.dw	-1,.L228,0,.L639-.L228
	.dh	2
	.db	125,0
	.dw	.L639-.L228,.L326-.L228
	.dh	2
	.db	125,20
	.dw	.L326-.L228,.L326-.L228
	.dh	2
	.db	125,0
	.dw	0,0
.L327:
	.dw	-1,.L228,0,.L330-.L228
	.dh	1
	.db	80
	.dw	.L641-.L228,.L326-.L228
	.dh	1
	.db	84
	.dw	0,0
.L328:
	.dw	-1,.L228,0,.L330-.L228
	.dh	1
	.db	81
	.dw	.L642-.L228,.L326-.L228
	.dh	1
	.db	85
	.dw	0,0
.L333:
	.dw	-1,.L228,.L335-.L228,.L645-.L228
	.dh	1
	.db	87
	.dw	0,0
.L331:
	.dw	-1,.L228,.L332-.L228,.L644-.L228
	.dh	1
	.db	81
	.dw	0,0
.L339:
	.dw	-1,.L228,.L340-.L228,.L647-.L228
	.dh	1
	.db	80
	.dw	.L138-.L228,.L139-.L228
	.dh	1
	.db	80
	.dw	0,0
.L329:
	.dw	-1,.L228,0,.L640-.L228
	.dh	1
	.db	82
	.dw	.L643-.L228,.L326-.L228
	.dh	1
	.db	86
	.dw	0,0
.L337:
	.dw	-1,.L228,.L646-.L228,.L135-.L228
	.dh	1
	.db	80
	.dw	0,0
.L342:
	.dw	-1,.L228,.L644-.L228,.L648-.L228
	.dh	1
	.db	81
	.dw	.L136-.L228,.L649-.L228
	.dh	1
	.db	81
	.dw	.L138-.L228,.L139-.L228
	.dh	1
	.db	81
	.dw	0,0
.L348:
	.dw	-1,.L228,.L650-.L228,.L651-.L228
	.dh	1
	.db	80
	.dw	.L142-.L228,.L141-.L228
	.dh	1
	.db	80
	.dw	0,0
.L351:
	.dw	-1,.L228,.L652-.L228,.L145-.L228
	.dh	1
	.db	80
	.dw	0,0
.L352:
	.dw	-1,.L228,.L653-.L228,.L654-.L228
	.dh	1
	.db	80
	.dw	.L149-.L228,.L140-.L228
	.dh	1
	.db	80
	.dw	0,0
.L345:
	.dw	-1,.L228,.L647-.L228,.L138-.L228
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_ChangeEndianness')
.L213:
	.dw	-1,.L214,0,.L539-.L214
	.dh	2
	.db	125,0
	.dw	.L539-.L214,.L540-.L214
	.dh	2
	.db	125,12
	.dw	.L540-.L214,.L312-.L214
	.dh	2
	.db	125,0
	.dw	0,0
.L534:
	.dw	-1,.L214,.L546-.L214,.L540-.L214
	.dh	1
	.db	84
	.dw	0,0
.L533:
	.dw	-1,.L214,.L547-.L214,.L2-.L214
	.dh	1
	.db	80
	.dw	.L550-.L214,.L7-.L214
	.dh	1
	.db	80
	.dw	.L552-.L214,.L4-.L214
	.dh	1
	.db	80
	.dw	0,0
.L531:
	.dw	-1,.L214,0,.L3-.L214
	.dh	1
	.db	81
	.dw	.L542-.L214,.L543-.L214
	.dh	1
	.db	83
	.dw	0,0
.L538:
	.dw	-1,.L214,.L548-.L214,.L545-.L214
	.dh	1
	.db	80
	.dw	.L545-.L214,.L549-.L214
	.dh	1
	.db	85
	.dw	.L7-.L214,.L551-.L214
	.dh	1
	.db	85
	.dw	0,0
.L530:
	.dw	-1,.L214,0,.L3-.L214
	.dh	1
	.db	80
	.dw	.L541-.L214,.L312-.L214
	.dh	1
	.db	82
	.dw	0,0
.L536:
	.dw	-1,.L214,.L543-.L214,.L312-.L214
	.dh	1
	.db	83
	.dw	0,0
.L532:
	.dw	-1,.L214,.L544-.L214,.L545-.L214
	.dh	1
	.db	85
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_MD5_HashCalculate')
.L501:
	.dw	-1,.L226,0,.L621-.L226
	.dh	1
	.db	80
	.dw	.L623-.L226,.L624-.L226
	.dh	1
	.db	84
	.dw	.L112-.L226,.L113-.L226
	.dh	1
	.db	84
	.dw	0,0
.L502:
	.dw	-1,.L226,0,.L622-.L226
	.dh	1
	.db	81
	.dw	.L625-.L226,.L500-.L226
	.dh	1
	.db	86
	.dw	0,0
.L503:
	.dw	-1,.L226,0,.L500-.L226
	.dh	1
	.db	82
	.dw	0,0
.L508:
	.dw	-1,.L226,.L626-.L226,.L627-.L226
	.dh	1
	.db	87
	.dw	0,0
.L225:
	.dw	-1,.L226,0,.L620-.L226
	.dh	2
	.db	125,0
	.dw	.L620-.L226,.L500-.L226
	.dh	2
	.db	125,28
	.dw	.L500-.L226,.L500-.L226
	.dh	2
	.db	125,0
	.dw	0,0
.L506:
	.dw	-1,.L226,.L507-.L226,.L111-.L226
	.dh	1
	.db	88
	.dw	0,0
.L509:
	.dw	-1,.L226,.L511-.L226,.L117-.L226
	.dh	1
	.db	85
	.dw	.L115-.L226,.L114-.L226
	.dh	1
	.db	85
	.dw	0,0
.L504:
	.dw	-1,.L226,0,.L500-.L226
	.dh	1
	.db	83
	.dw	0,0
.L513:
	.dw	-1,.L226,.L628-.L226,.L109-.L226
	.dh	1
	.db	80
	.dw	0,0
.L516:
	.dw	-1,.L226,.L629-.L226,.L630-.L226
	.dh	1
	.db	80
	.dw	.L110-.L226,.L631-.L226
	.dh	1
	.db	80
	.dw	.L112-.L226,.L113-.L226
	.dh	1
	.db	80
	.dw	0,0
.L522:
	.dw	-1,.L226,.L632-.L226,.L633-.L226
	.dh	1
	.db	80
	.dw	.L116-.L226,.L115-.L226
	.dh	1
	.db	80
	.dw	0,0
.L525:
	.dw	-1,.L226,.L634-.L226,.L119-.L226
	.dh	1
	.db	80
	.dw	0,0
.L526:
	.dw	-1,.L226,.L635-.L226,.L636-.L226
	.dh	1
	.db	80
	.dw	.L123-.L226,.L114-.L226
	.dh	1
	.db	80
	.dw	0,0
.L529:
	.dw	-1,.L226,.L637-.L226,.L638-.L226
	.dh	1
	.db	80
	.dw	0,0
.L519:
	.dw	-1,.L226,.L631-.L226,.L112-.L226
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_SHA1_HashCalculate')
.L439:
	.dw	-1,.L222,0,.L443-.L222
	.dh	1
	.db	80
	.dw	.L582-.L222,.L438-.L222
	.dh	1
	.db	84
	.dw	0,0
.L440:
	.dw	-1,.L222,0,.L580-.L222
	.dh	1
	.db	81
	.dw	.L583-.L222,.L438-.L222
	.dh	1
	.db	85
	.dw	0,0
.L441:
	.dw	-1,.L222,0,.L443-.L222
	.dh	1
	.db	82
	.dw	.L584-.L222,.L585-.L222
	.dh	1
	.db	86
	.dw	.L585-.L222,.L443-.L222
	.dh	1
	.db	81
	.dw	.L587-.L222,.L438-.L222
	.dh	1
	.db	86
	.dw	0,0
.L446:
	.dw	-1,.L222,.L448-.L222,.L438-.L222
	.dh	1
	.db	94
	.dw	0,0
.L444:
	.dw	-1,.L222,.L445-.L222,.L453-.L222
	.dh	1
	.db	81
	.dw	0,0
.L452:
	.dw	-1,.L222,.L453-.L222,.L589-.L222
	.dh	1
	.db	81
	.dw	.L61-.L222,.L62-.L222
	.dh	1
	.db	81
	.dw	0,0
.L442:
	.dw	-1,.L222,0,.L581-.L222
	.dh	1
	.db	83
	.dw	.L586-.L222,.L438-.L222
	.dh	1
	.db	87
	.dw	0,0
.L221:
	.dw	-1,.L222,0,.L579-.L222
	.dh	2
	.db	125,0
	.dw	.L579-.L222,.L438-.L222
	.dh	2
	.db	125,28
	.dw	.L438-.L222,.L438-.L222
	.dh	2
	.db	125,0
	.dw	0,0
.L450:
	.dw	-1,.L222,.L588-.L222,.L58-.L222
	.dh	1
	.db	80
	.dw	0,0
.L455:
	.dw	-1,.L222,.L590-.L222,.L591-.L222
	.dh	1
	.db	80
	.dw	.L59-.L222,.L592-.L222
	.dh	1
	.db	80
	.dw	.L61-.L222,.L62-.L222
	.dh	1
	.db	80
	.dw	0,0
.L461:
	.dw	-1,.L222,.L593-.L222,.L594-.L222
	.dh	1
	.db	80
	.dw	.L65-.L222,.L64-.L222
	.dh	1
	.db	80
	.dw	0,0
.L464:
	.dw	-1,.L222,.L595-.L222,.L68-.L222
	.dh	1
	.db	80
	.dw	0,0
.L465:
	.dw	-1,.L222,.L596-.L222,.L597-.L222
	.dh	1
	.db	80
	.dw	.L72-.L222,.L63-.L222
	.dh	1
	.db	80
	.dw	0,0
.L468:
	.dw	-1,.L222,.L598-.L222,.L599-.L222
	.dh	1
	.db	80
	.dw	0,0
.L458:
	.dw	-1,.L222,.L592-.L222,.L61-.L222
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_SHA224_HashCalculate')
.L408:
	.dw	-1,.L220,0,.L558-.L220
	.dh	1
	.db	80
	.dw	.L561-.L220,.L407-.L220
	.dh	1
	.db	84
	.dw	0,0
.L409:
	.dw	-1,.L220,0,.L559-.L220
	.dh	1
	.db	81
	.dw	.L562-.L220,.L407-.L220
	.dh	1
	.db	85
	.dw	0,0
.L410:
	.dw	-1,.L220,0,.L558-.L220
	.dh	1
	.db	82
	.dw	.L563-.L220,.L564-.L220
	.dh	1
	.db	86
	.dw	.L564-.L220,.L558-.L220
	.dh	1
	.db	81
	.dw	.L566-.L220,.L407-.L220
	.dh	1
	.db	86
	.dw	0,0
.L415:
	.dw	-1,.L220,.L417-.L220,.L407-.L220
	.dh	1
	.db	88
	.dw	0,0
.L413:
	.dw	-1,.L220,.L414-.L220,.L422-.L220
	.dh	1
	.db	81
	.dw	0,0
.L421:
	.dw	-1,.L220,.L422-.L220,.L568-.L220
	.dh	1
	.db	81
	.dw	.L35-.L220,.L36-.L220
	.dh	1
	.db	81
	.dw	0,0
.L411:
	.dw	-1,.L220,0,.L560-.L220
	.dh	1
	.db	83
	.dw	.L565-.L220,.L407-.L220
	.dh	1
	.db	87
	.dw	0,0
.L219:
	.dw	-1,.L220,0,.L557-.L220
	.dh	2
	.db	125,0
	.dw	.L557-.L220,.L407-.L220
	.dh	2
	.db	125,28
	.dw	.L407-.L220,.L407-.L220
	.dh	2
	.db	125,0
	.dw	0,0
.L419:
	.dw	-1,.L220,.L567-.L220,.L32-.L220
	.dh	1
	.db	80
	.dw	0,0
.L424:
	.dw	-1,.L220,.L569-.L220,.L570-.L220
	.dh	1
	.db	80
	.dw	.L33-.L220,.L571-.L220
	.dh	1
	.db	80
	.dw	.L35-.L220,.L36-.L220
	.dh	1
	.db	80
	.dw	0,0
.L430:
	.dw	-1,.L220,.L572-.L220,.L573-.L220
	.dh	1
	.db	80
	.dw	.L39-.L220,.L38-.L220
	.dh	1
	.db	80
	.dw	0,0
.L433:
	.dw	-1,.L220,.L574-.L220,.L42-.L220
	.dh	1
	.db	80
	.dw	0,0
.L434:
	.dw	-1,.L220,.L575-.L220,.L576-.L220
	.dh	1
	.db	80
	.dw	.L46-.L220,.L37-.L220
	.dh	1
	.db	80
	.dw	0,0
.L437:
	.dw	-1,.L220,.L577-.L220,.L578-.L220
	.dh	1
	.db	80
	.dw	0,0
.L427:
	.dw	-1,.L220,.L571-.L220,.L35-.L220
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_SHA256_HashCalculate')
.L470:
	.dw	-1,.L224,0,.L601-.L224
	.dh	1
	.db	80
	.dw	.L603-.L224,.L469-.L224
	.dh	1
	.db	84
	.dw	0,0
.L471:
	.dw	-1,.L224,0,.L602-.L224
	.dh	1
	.db	81
	.dw	.L604-.L224,.L469-.L224
	.dh	1
	.db	85
	.dw	0,0
.L472:
	.dw	-1,.L224,0,.L601-.L224
	.dh	1
	.db	82
	.dw	.L605-.L224,.L602-.L224
	.dh	1
	.db	86
	.dw	.L602-.L224,.L601-.L224
	.dh	1
	.db	81
	.dw	.L607-.L224,.L469-.L224
	.dh	1
	.db	86
	.dw	0,0
.L477:
	.dw	-1,.L224,.L479-.L224,.L469-.L224
	.dh	1
	.db	94
	.dw	0,0
.L475:
	.dw	-1,.L224,.L476-.L224,.L484-.L224
	.dh	1
	.db	81
	.dw	0,0
.L483:
	.dw	-1,.L224,.L484-.L224,.L609-.L224
	.dh	1
	.db	81
	.dw	.L87-.L224,.L88-.L224
	.dh	1
	.db	81
	.dw	0,0
.L473:
	.dw	-1,.L224,0,.L601-.L224
	.dh	1
	.db	83
	.dw	.L606-.L224,.L469-.L224
	.dh	1
	.db	87
	.dw	0,0
.L223:
	.dw	-1,.L224,0,.L600-.L224
	.dh	2
	.db	125,0
	.dw	.L600-.L224,.L469-.L224
	.dh	2
	.db	125,28
	.dw	.L469-.L224,.L469-.L224
	.dh	2
	.db	125,0
	.dw	0,0
.L481:
	.dw	-1,.L224,.L608-.L224,.L84-.L224
	.dh	1
	.db	80
	.dw	0,0
.L486:
	.dw	-1,.L224,.L610-.L224,.L611-.L224
	.dh	1
	.db	80
	.dw	.L85-.L224,.L612-.L224
	.dh	1
	.db	80
	.dw	.L87-.L224,.L88-.L224
	.dh	1
	.db	80
	.dw	0,0
.L492:
	.dw	-1,.L224,.L613-.L224,.L614-.L224
	.dh	1
	.db	80
	.dw	.L91-.L224,.L90-.L224
	.dh	1
	.db	80
	.dw	0,0
.L495:
	.dw	-1,.L224,.L615-.L224,.L94-.L224
	.dh	1
	.db	80
	.dw	0,0
.L496:
	.dw	-1,.L224,.L616-.L224,.L617-.L224
	.dh	1
	.db	80
	.dw	.L98-.L224,.L89-.L224
	.dh	1
	.db	80
	.dw	0,0
.L499:
	.dw	-1,.L224,.L618-.L224,.L619-.L224
	.dh	1
	.db	80
	.dw	0,0
.L489:
	.dw	-1,.L224,.L612-.L224,.L87-.L224
	.dh	1
	.db	80
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_Synchronous_HashCalculate')
.L315:
	.dw	-1,.L216,0,.L554-.L216
	.dh	1
	.db	80
	.dw	0,0
.L215:
	.dw	-1,.L216,0,.L553-.L216
	.dh	2
	.db	125,0
	.dw	.L553-.L216,.L12-.L216
	.dh	2
	.db	125,8
	.dw	.L12-.L216,.L12-.L216
	.dh	2
	.db	125,0
	.dw	.L12-.L216,.L14-.L216
	.dh	2
	.db	125,8
	.dw	.L14-.L216,.L14-.L216
	.dh	2
	.db	125,0
	.dw	.L14-.L216,.L16-.L216
	.dh	2
	.db	125,8
	.dw	.L16-.L216,.L16-.L216
	.dh	2
	.db	125,0
	.dw	.L16-.L216,.L252-.L216
	.dh	2
	.db	125,8
	.dw	.L252-.L216,.L252-.L216
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_getHashedValue')
.L319:
	.dw	-1,.L236,0,.L690-.L236
	.dh	1
	.db	80
	.dw	0,0
.L321:
	.dw	-1,.L236,0,.L264-.L236
	.dh	1
	.db	81
	.dw	0,0
.L322:
	.dw	-1,.L236,.L323-.L236,.L264-.L236
	.dh	1
	.db	83
	.dw	.L693-.L236,.L264-.L236
	.dh	1
	.db	80
	.dw	0,0
.L235:
	.dw	-1,.L236,0,.L688-.L236
	.dh	2
	.db	125,0
	.dw	.L688-.L236,.L689-.L236
	.dh	2
	.db	125,4
	.dw	.L689-.L236,.L264-.L236
	.dh	2
	.db	125,0
	.dw	0,0
.L325:
	.dw	-1,.L236,.L691-.L236,.L692-.L236
	.dh	1
	.db	82
	.dw	.L202-.L236,.L264-.L236
	.dh	1
	.db	82
	.dw	0,0
	.endsec	; End of section

	.section	.debug_loc ,cluster('$group_isHashComplete')
.L317:
	.dw	-1,.L234,.L687-.L234,.L258-.L234
	.dh	1
	.db	80
	.dw	0,0
.L233:
	.dw	-1,.L234,0,.L258-.L234
	.dh	2
	.db	125,0
	.dw	0,0
	.endsec	; End of section

	.section	.debug_frame
.L1136:
	.dw	64
	.dw	-1
	.db	3,0,2,2,14,12,13,0,8,4,8,5,8,6,8,7,8,8,8,9,8,10,8,11,8,13,8,14,8,15,8,128,1,8,136,2,8,137,2,8,138,2,8
	.db	139,2,8,140,2,8,141,2,8,142,2,8,143,2,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_ChangeEndianness')
	.dw	72
	.dw	.L1136,.L214,.L312-.L214
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L539-.L214)/2
	.db	19,6,22,13,3,19,125,12,17,6,126,17,5,124,17,4,122,4
	.dw	(.L540-.L539)/2
	.db	19,0,8,13,198,197,196,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_Synchronous_HashCalculate')
	.dw	120
	.dw	.L1136,.L216,.L252-.L216
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L553-.L216)/2
	.db	19,4,22,13,3,19,125,8,17,14,126,17,4,124,4
	.dw	(.L12-.L553)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L14-.L12)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L16-.L14)/2
	.db	19,0,8,13,196,19,4,22,13,3,19,125,8,4
	.dw	(.L252-.L16)/2
	.db	19,0,8,13,196,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_Asynchronous_HashCalculate')
	.dw	96
	.dw	.L1136,.L218,.L246-.L218
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L555-.L218)/2
	.db	19,2,22,13,3,19,125,4,17,14,126,4
	.dw	(.L18-.L555)/2
	.db	19,0,8,13,19,2,22,13,3,19,125,4,4
	.dw	(.L20-.L18)/2
	.db	19,0,8,13,19,2,22,13,3,19,125,4,4
	.dw	(.L246-.L20)/2
	.db	19,0,8,13,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_SHA224_HashCalculate')
	.dw	88
	.dw	.L1136,.L220,.L407-.L220
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L557-.L220)/2
	.db	19,14,22,13,3,19,125,28,17,14,126,17,9,124,17,8,122,17,7,120,17,6,118,17,5,116,17,4,114,4
	.dw	(.L407-.L557)/2
	.db	19,0,8,13,201,200,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_SHA1_HashCalculate')
	.dw	88
	.dw	.L1136,.L222,.L438-.L222
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L579-.L222)/2
	.db	19,14,22,13,3,19,125,28,17,14,126,17,9,124,17,8,122,17,7,120,17,6,118,17,5,116,17,4,114,4
	.dw	(.L438-.L579)/2
	.db	19,0,8,13,201,200,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_SHA256_HashCalculate')
	.dw	88
	.dw	.L1136,.L224,.L469-.L224
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L600-.L224)/2
	.db	19,14,22,13,3,19,125,28,17,14,126,17,9,124,17,8,122,17,7,120,17,6,118,17,5,116,17,4,114,4
	.dw	(.L469-.L600)/2
	.db	19,0,8,13,201,200,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_MD5_HashCalculate')
	.dw	88
	.dw	.L1136,.L226,.L500-.L226
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L620-.L226)/2
	.db	19,14,22,13,3,19,125,28,17,14,126,17,9,124,17,8,122,17,7,120,17,6,118,17,5,116,17,4,114,4
	.dw	(.L500-.L620)/2
	.db	19,0,8,13,201,200,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_Asynchronous_SHA256_HashCalculate')
	.dw	80
	.dw	.L1136,.L228,.L326-.L228
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L639-.L228)/2
	.db	19,10,22,13,3,19,125,20,17,14,126,17,7,124,17,6,122,17,5,120,17,4,118,4
	.dw	(.L326-.L639)/2
	.db	19,0,8,13,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_Asynchronous_SHA224_HashCalculate')
	.dw	80
	.dw	.L1136,.L230,.L353-.L230
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L655-.L230)/2
	.db	19,10,22,13,3,19,125,20,17,14,126,17,7,124,17,6,122,17,5,120,17,4,118,4
	.dw	(.L353-.L655)/2
	.db	19,0,8,13,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_Asynchronous_SHA1_HashCalculate')
	.dw	80
	.dw	.L1136,.L232,.L380-.L232
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L671-.L232)/2
	.db	19,10,22,13,3,19,125,20,17,14,126,17,7,124,17,6,122,17,5,120,17,4,118,4
	.dw	(.L380-.L671)/2
	.db	19,0,8,13,199,198,197,196,0,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_isHashComplete')
	.dw	44
	.dw	.L1136,.L234,.L258-.L234
	.db	8,1,8,2,8,3,8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,0,0
	.endsec	; End of section

	.section	.debug_frame ,cluster('$group_getHashedValue')
	.dw	64
	.dw	.L1136,.L236,.L264-.L236
	.db	8,128,2,8,129,2,8,130,2,8,131,2,8,132,2,8,133,2,8,134,2,8,135,2,4
	.dw	(.L688-.L236)/2
	.db	19,2,22,13,3,19,125,4,17,4,126,4
	.dw	(.L689-.L688)/2
	.db	19,0,8,13,196,0,0
	.endsec	; End of section


; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1267  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1268  /*                       	  Internal Function Definition                         */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1269  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1270  
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1271  /***********************************************************************************/
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1272  /*				    			 End Of File			         				   */
; ../../TC399x/HSM/Mcal/Hash/src/Hash.c	  1273  /***********************************************************************************/

	; Module end
	.end
